{
    "swagger": "2.0",
    "info": {
        "description": "Beneath are the full list of available API:s in your environment. Please use the tools below to try it out! Remember to activate the SwaggerUI client application in Medius([click here](../../#Administration/Medius.Core.Entities.Api.ClientApplication))",
        "title": "Medius Web API",
        "version": "1.0.0",
        "termsOfService": "http://www.medius.com"
    },
    "host": "cloud.mediusflow.com",
    "basePath": "/MainTenantManager",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json",
        "application/xml"
    ],
    "produces": [
        "application/json",
        "application/xml"
    ],
    "tags": [
        {
            "name": "Master data - import",
            "description": "Master data import used by the suite",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#master-data-import"
            }
        },
        {
            "name": "Master data - export",
            "description": "Companies and suppliers",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#exporting-data"
            }
        },
        {
            "name": "Transactional data - import",
            "description": "Purchase orders and goods receipt",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#master-data-import"
            }
        },
        {
            "name": "Transactional data - export",
            "description": "Purchase orders",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#exporting-data"
            }
        },
        {
            "name": "User import",
            "description": "User import",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#exporting-data"
            }
        },
        {
            "name": "AP Automation",
            "description": "Document import, supplier invoice message exchange",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#supplier-invoice-messages"
            }
        },
        {
            "name": "Procurement",
            "description": "Order and goods receipt postings, confirmations and send to supplier",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#procurement-messages"
            }
        },
        {
            "name": "Pay",
            "description": "Import of payment batches and reconciliation",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#payment-batch-import"
            }
        },
        {
            "name": "Supplier Management",
            "description": "",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#payment-batch-import"
            }
        },
        {
            "name": "File/media",
            "description": "Images and attachments"    
        }
    ],
    "definitions": {
        "IntegrationAccrualTemplateDto": {
            "type": "object",
            "xml": {
                "name": "AccrualTemplate"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "companyId",
                "isActive",
                "name"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    },
                    "maxLength": 450,
                    "description": "Name of Accrual template"
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "accrualCodeString": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                        }
                    ],
                    "xml": {
                        "name": "AccrualCodeString"
                    }
                },
                "accrualPeriods": {
                    "type": "array",
                    "xml": {
                        "name": "AccrualPeriods",
                        "wrapped": true
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationImportAccrualPeriodDto"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "accrualErpIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "AccrualErpIdentifier"
                    },
                    "maxLength": 100,
                    "description": "ErpIdentifier for the accrual template"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                }
            }
        },
        "IntegrationCodingDimensionsDto": {
            "type": "object",
            "additionalProperties": false,
            "xml": {
                "name": "Dimensions"
            },
            "properties": {
                "dimension1": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension2": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension2"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension3": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension3"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension4": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension4"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension5": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension5"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension6": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension6"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension7": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension7"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension8": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension8"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension9": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension9"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension10": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension10"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension11": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension11"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimension12": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension12"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "freeText1": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText1"
                    },
                    "maxLength": 200,
                    "description": "Custom field of type text."
                },
                "freeText2": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText2"
                    },
                    "maxLength": 200,
                    "description": "Custom field of type text."
                },
                "freeText3": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText3"
                    },
                    "maxLength": 200,
                    "description": "Custom field of type text."
                },
                "freeText4": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText4"
                    },
                    "maxLength": 200,
                    "description": "Custom field of type text."
                },
                "freeText5": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText5"
                    },
                    "maxLength": 200,
                    "description": "Custom field of type text."
                }
            }
        },
        "IntegrationImportAccrualPeriodDto": {
            "type": "object",
            "xml": {
                "name": "ImportAccrualPeriod"
            },
            "additionalProperties": false,
            "required": [
                "period",
                "percentage"
            ],
            "properties": {
                "period": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Period"
                    },
                    "description": "Number of the period"
                },
                "percentage": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Percentage"
                    },
                    "description": "Percentage of period. Decimal format (28,14)"
                }
            }
        },
        "BatchDto": {
            "type": "object",
            "additionalProperties": false,
            "required": [
                "itemsCount",
                "itemsSaved",
                "isSuccessful",
                "queueItemId"
            ],
            "properties": {
                "state": {
                    "type": "string",
                    "xml": {
                        "name": "State"
                    }
                },
                "details": {
                    "type": "string",
                    "xml": {
                        "name": "Details"
                    }
                },
                "itemsCount": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "ItemsCount"
                    }
                },
                "itemsSaved": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "ItemsSaved"
                    }
                },
                "isSuccessful": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsSuccessful"
                    }
                },
                "errorMessages": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "ErrorMessages"
                    },
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "String"
                        }
                    }
                },
                "errors": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Errors"
                    },
                    "items": {
                        "$ref": "#/definitions/BatchErrorDto"
                    }
                },
                "queueItemId": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "QueueItemId"
                    }
                }
            }
        },
        "BatchErrorDto": {
            "type": "object",
            "additionalProperties": false,
            "required": [
                "validationTag"
            ],
            "properties": {
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    }
                },
                "validationMessage": {
                    "type": "string",
                    "xml": {
                        "name": "ValidationMessage"
                    }
                },
                "ValidationTag": {
                    "$ref": "#/definitions/IntegrationErrorTag"
                }
            }
        },
        "IntegrationErrorTag": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "UNKNOWN",
                "ACCOUNTING_CURRENY_MISSING",
                "ADVANCED_RESTRICTION_RULES_DATA_IS_INVALID",
                "ADVANCED_RESTRICTION_EXTERNAL_SYSTEM_ID_MISSING",
                "AT_LEAST_ONE_CODING_LINE_OF_TYPE_COST_IS_REQUIRED",
                "AUTHORIZATION_GROUP_NAME_MISSING",
                "AUTHORIZATION_GROUP_NOT_FOUND",
                "COMPANY_EXTERNAL_SYSTEM_ID_MISSING",
                "COMPANY_IS_ALREADY_IMPORTED_WITH_ANOTHER_ACCOUNTING_CURRENCY",
                "COMPANY_MISSING",
                "COMPANY_MISSING_ON_CONTROLLING_DIMENSION_VALUE",
                "COMPANY_NOT_FOUND",
                "COMPANY_RELATED_MUST_HAVE_COMPANY",
                "CONTROLLING_DIMENSION_VALUE_MISSING",
                "CONTROLLING_DIMENSION_VALUE_NOT_FOUND",
                "CONVERSION_FACTOR_MUST_BE_GREATER_THAN_ZERO",
                "COULD_NOT_FIND_ACCOUNTING_CURRENCY",
                "COULD_NOT_FIND_COMPANY_FOR_MASTERDATA",
                "COULD_NOT_FIND_COMPANY_IDENTIFIER_TYPE",
                "COULD_NOT_FIND_CONTACT_PERSON",
                "COULD_NOT_FIND_PARENT_COMPANY",
                "COULD_NOT_SAVE_RESTRICTIONS",
                "COULD_NOT_SAVE_RESTRICTIONS_AND_ROLLBACK",
                "CURRENCY_EXTERNAL_SYSTEM_ID_MISSING",
                "CURRENCY_IS_INACTIVE",
                "CURRENCY_MISSING",
                "CURRENCY_MISSING_ON_SUPPLIER_ITEM",
                "CURRENCY_MISSING_ON_SUPPLIER",
                "CURRENCY_NOT_FOUND",
                "CURRENCY_RATE_CODE_NOT_FOUND",
                "CURRENCY_RATE_CURRENCY_MISSING",
                "CURRENCY_RATE_DATE_IS_MISSING",
                "CURRENCY_RATE_NOT_FOUND",
                "CURRENCY_WITH_CODE_NOT_FOUND",
                "DATE_IS_NOT_IN_VALID_RANGE",
                "DELIVERY_NUMBER_MISSING",
                "DELIVERY_TERM_EXTERNAL_SYSTEM_ID_MISSING",
                "DELIVERY_TERM_NOT_FOUND",
                "DIFFERENT_TAX_CODE_SAME_CODE_ALREADY_EXISTS",
                "DIMENSION_DESCRIPTION_MISSING",
                "DIMENSION_MISSING",
                "DIMENSION_MISSING_ON_CONTROLLING_DIMENSION_VALUE",
                "DIMENSION_MISSING_ON_RESTRICTED_DIMENSION_VALUE",
                "DIMENSION_STRING_TAG_NOT_FOUND",
                "DIMENSION_VALUE_MISSING",
                "DIMENSION_VALUE_NOT_CONNECTED_WITH_PROPER_COMPANY",
                "DIMENSION_VALUE_NOT_FOUND_FOR_DIMENSION",
                "DIMENSION_DOES_NOT_EXIST_DIMENSION_NAME",
                "DIMENSION_VALUE_NOT_FOUND_DIM_EXTERNAL_SYSTEM_ID",
                "DUPLICATED_ROLES",
                "DOCUMENT_TYPE_REQUIRED",
                "END_VALUE_MISSING",
                "END_DATE_REQUIRED",
                "EXTERNAL_SYSTEM_ID_FOR_DIMENSION_VALUE_MISSING",
                "EXTERNAL_SYSTEM_ID_MISSING",
                "EXTERNAL_SYSTEM_ID_MISSING_FOR_TAX_GROUP",
                "EXTERNAL_SYSTEM_ID_MISSING_FOR_COMPANY",
                "FOLLOWUP_GROUP_NAME_MISSING",
                "FOLLOWUP_GROUP_NOT_FOUND",
                "INDICATOR_NUMBER1_ASSIGNED_TO_TAX_INDICATOR2",
                "INDICATOR_NUMBER2_ASSIGNED_TO_TAX_INDICATOR1",
                "INVALID_DATE",
                "INVALID_DIMENSION_SPECIFIED",
                "INVALID_DIMENSION_NAME",
                "INVALID_USER",
                "INVALID_ROLE",
                "INTEGRATION_MESSAGE_TYPE_REQUIRED",
                "ISSUE_WITH_SAVING_ITEM_PLEASE_REPROCESS",
                "MULTIPLE_RESTRICTIONS_DEFINED_FOR_DIMENSION_DIMENSION",
                "NAME_MISSING",
                "NO_RESTRICTED_DIMENSION_VALUES_PROVIDED",
                "ORDER_IDENTIFIER_MISSING",
                "PARENT_COMPANY_MISSING",
                "PAYMENT_TERM_EXTERNAL_SYSTEM_ID_MISSING",
                "PAYMENT_TERM_NOT_FOUND",
                "PRE_CODING_MISSING",
                "PURCHASE_ORDER_CANNOT_BE_IMPORTED_FOR_VIRTUAL_COMPANY",
                "PURCHASE_ORDER_CODING_LINES_CANNOT_BE_EMPTY",
                "PURCHASE_ORDER_WITH_IDENTIFIER_AND_COMPANY_ALREADY_EXIST",
                "RESPONSBILE_CONFIGURATION_MISSING",
                "RESTRICTED_DIMENSION_HAS_INCORRECT_DIMENSION_VALUE",
                "RESTRICTED_DIMENSION_VALUE_MISSING",
                "RESTRICTED_DIMENSION_MISSING",
                "RESTRICTED_DIMENSION_VALUE_NOT_FOUND_DIMENSION_VALUE",
                "RESTRICTED_DIMENSION_VALUE_NOT_FOUND_EXTERNAL_SYSTEM_ID",
                "RESTRICTED_DIMENSION_NOT_FOUND",
                "START_VALUE_MISSING",
                "START_DATE_REQUIRED",
                "SUPPLIER_EXTERNAL_SYSTEM_ID_MISSING",
                "SUPPLIER_MISSING",
                "SUPPLIER_MISSING_AND_CURRENCY_NOT_PROVIDED",
                "SUPPLIER_NOT_FOUND",
                "TAX_CODE_DEDUCTIBLE_MISSING_IN_TAXGROUP",
                "TAX_CODE_NOT_EXISTS",
                "TAX_CODE_PERCENTAGE_MISSING_IN_TAXGROUP",
                "TAX_GROUP_NOT_FOUND",
                "TAX_GROUP_WITH_DUPLICATED_TAX_CODES",
                "TAX_INDICATOR1_EXTERNAL_SYSTEM_ID_IS_MISSING",
                "TAX_INDICATOR1_EXTERNAL_SYSTEM_ID_NOT_FOUND",
                "TAX_INDICATOR2_EXTERNAL_SYSTEM_ID_IS_MISSING",
                "TAX_INDICATOR2_EXTERNAL_SYSTEM_ID_NOT_FOUND",
                "TAXGROUP_NOT_FOUND_FOR_COMPANY",
                "TEMPORARY_DELEGATION_RESPONSIBLE_MISSING",
                "TEMPORARY_DELEGATION_RESPONSIBLE_NOT_FOUND",
                "TRYING_TO_IMPORT_DIMENSION_VALUE_TO_WRONG_DIMENSION",
                "UNIT_IS_MISSING",
                "UNIT_NOT_FOUND",
                "UNIT_WITH_EXTERNAL_SYSTEM_ID_NOT_FOUND",
                "USER_COMPANY_MISSING",
                "USER_COMPANY_NOT_FOUND",
                "USER_DEFAULT_COMPANY_NOT_FOUND",
                "USER_IDENTIY_PROVIDER_NAME_MISSING",
                "USER_IDENTIY_PROVIDER_NAME_NOT_FOUND",
                "USER_NAME_MISSING",
                "USER_NOT_FOUND",
                "USER_ROLE_MISSING",
                "USER_ROLE_NOT_FOUND",
                "INVALID_UNIT",
                "ADVANCED_RESTRICTION_HAS_INVALID_DATA",
                "PAYMENT_DETAILS_EXTERNAL_SYSTEM_ID_NEEDS_TO_BE_UNIQUE",
                "PAYMENT_DETAILS_EXTERNAL_SYSTEM_ID_FOUND_ON_ANOTHER_SUPPLIER",
                "NUMBER_OF_MONTHS_OUTSIDE_THE_RANGE",
                "PAYMENT_TERM_WITH_IDENTIFIER_AND_COMPANY_ALREADY_EXIST",
                "PAYMENT_TERM_HAS_INVALID_DATA",
                "INTERFACE_MISMATCH",
                "SUPPLIER_ITEM_COMPANY_DOES_NOT_EXIST_IN_ITEM_COMPANY_TREE",
                "CURRENCY_MISMATCH_ON_PO",
                "INVALID_ORDER_TYPE",
                "ORDER_TYPE_CHANGE_ATTEMPT",
                "TWO_WAY_MATCHING_IMPORTING_GRS",
                "TWO_WAY_MATCHING_IMPORT_GR",
                "PURCHASE_ORDER_COMMENT_MISSING",
                "PURCHASE_ORDER_LINE_EXTERNAL_SYSTEM_ID_ALREADY_EXISTS",
                "PURCHASE_ORDER_LINE_NUMBER_ALREADY_EXISTS",
                "DELIVERY_LINE_EXTERNAL_SYSTEM_ID_ALREADY_EXISTS",
                "PURCHASE_ORDER_ALREADY_EXISTS",
                "PURCHASE_ORDER_CURRENCY_CHANGE_NOT_ALLOWED",
                "COULD_NOT_DELETE_RESTRICTIONS",
                "COULD_NOT_DELETE_RESTRICTIONS_AND_ROLLBACK",
                "CURRENCY_RATE_OUT_OF_RANGE",
                "CURRENCY_WITH_CODE_ALREADY_EXISTS",
                "PURCHASE_ORDER_LINE_SERVICE_BASED_FLAG_UPDATE_FAIL",
                "UPDATE_OF_DEFAULT_CURRENCY_IS_NOT_POSSIBLE",
                "NON_LEAF_LEVEL_CATEGORY",
                "PURCHASE_ORDER_TOO_MANY_IDENTIFIERS",
                "PURCHASE_ORDER_IDENTIFIERS_CONTAIN_DUPLICATES",
                "CATEGORY_NOT_FOUND",
                "COMPANY_ALREADY_EXIST",
                "SUPPLIER_ALREADY_EXIST",
                "LOCAL_DATETIME"
            ],
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                126,
                127,
                128,
                129,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149
            ]
        },
        "ActualPaymentDateResponseDto": {
            "type": "object",
            "xml": {
                "name": "ActualPaymentDateResponse"
            },
            "additionalProperties": false,
            "properties": {
                "actualPaymentDate": {
                    "$ref": "#/definitions/IntegrationActualPaymentDateDto"
                },
                "correlationKey": {
                    "type": "string",
                    "xml": {
                        "name": "CorrelationKey"
                    }
                }
            }
        },
        "IntegrationActualPaymentDateDto": {
            "type": "object",
            "xml": {
                "name": "ActualPaymentDate"
            },
            "additionalProperties": false,
            "required": [
                "actualPaymentDate"
            ],
            "properties": {
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "actualPaymentDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "ActualPaymentDate"
                    }
                }
            }
        },
        "StatusLink": {
            "type": "object",
            "xml": {
                "name": "StatusLink"
            },
            "additionalProperties": false,
            "properties": {
                "ref": {
                    "type": "string",
                    "xml": {
                        "name": "Ref"
                    }
                },
                "status": {
                    "type": "string",
                    "xml": {
                        "name": "Status"
                    }
                }
            }
        },
        "CompanyExportPageDto": {
            "type": "object",
            "xml": {
                "name": "CompanyPage"
            },
            "additionalProperties": false,
            "required": [
                "total",
                "offset",
                "limit"
            ],
            "properties": {
                "total": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Total"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Offset"
                    }
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Limit"
                    }
                },
                "companies": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Companies"
                    },
                    "items": {
                        "$ref": "#/definitions/CompanyDto"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/Paging"
                }
            }
        },
        "CompanyDto": {
            "type": "object",
            "xml": {
                "name": "Company"
            },
            "additionalProperties": false,
            "required": [
                "isVirtualCompany",
                "isActive"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    }
                },
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    }
                },
                "externalDisplayName": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalDisplayName"
                    }
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    }
                },
                "organizationNumber": {
                    "type": "string",
                    "xml": {
                        "name": "OrganizationNumber"
                    }
                },
                "parentCompany": {
                    "type": "string",
                    "xml": {
                        "name": "ParentCompany"
                    }
                },
                "isVirtualCompany": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsVirtualCompany"
                    }
                },
                "identifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Identifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/IdentifierDto"
                    }
                },
                "addresses": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Addresses"
                    },
                    "items": {
                        "$ref": "#/definitions/AddressDto"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "mediusFlowSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "MediusFlowSystemId"
                    }
                },
                "globalId": {
                    "type": "string",
                    "xml": {
                        "name": "GlobalId"
                    }
                }
            }
        },
        "IdentifierDto": {
            "type": "object",
            "xml": {
                "name": "Identifier"
            },
            "additionalProperties": false,
            "properties": {
                "identifierType": {
                    "type": "string",
                    "xml": {
                        "name": "IdentifierType"
                    }
                },
                "value": {
                    "type": "string",
                    "xml": {
                        "name": "Value"
                    }
                }
            }
        },
        "AddressDto": {
            "type": "object",
            "xml": {
                "name": "Address"
            },
            "additionalProperties": false,
            "properties": {
                "addressType": {
                    "type": "string",
                    "xml": {
                        "name": "AddressType"
                    }
                },
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    }
                },
                "streetAddress": {
                    "type": "string",
                    "xml": {
                        "name": "StreetAddress"
                    }
                },
                "state": {
                    "type": "string",
                    "xml": {
                        "name": "State"
                    }
                },
                "zip": {
                    "type": "string",
                    "xml": {
                        "name": "Zip"
                    }
                },
                "country": {
                    "type": "string",
                    "xml": {
                        "name": "Country"
                    }
                },
                "city": {
                    "type": "string",
                    "xml": {
                        "name": "City"
                    }
                },
                "telephone": {
                    "type": "string",
                    "xml": {
                        "name": "Telephone"
                    }
                },
                "fax": {
                    "type": "string",
                    "xml": {
                        "name": "Fax"
                    }
                },
                "homepage": {
                    "type": "string",
                    "xml": {
                        "name": "Homepage"
                    }
                },
                "email": {
                    "type": "string",
                    "xml": {
                        "name": "Email"
                    }
                }
            }
        },
        "Paging": {
            "type": "object",
            "xml": {
                "name": "Paging"
            },
            "additionalProperties": false,
            "properties": {
                "previous": {
                    "type": "string",
                    "xml": {
                        "name": "Previous"
                    }
                },
                "next": {
                    "type": "string",
                    "xml": {
                        "name": "Next"
                    }
                }
            }
        },
        "IntegrationCompanyDto": {
            "type": "object",
            "xml": {
                "name": "Company"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "accountingCurrencyCode",
                "companyId",
                "isVirtual",
                "isActive",
                "name",
                "organizationNumber",
                "parent"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    },
                    "maxLength": 100,
                    "description": "Company name."
                },
                "organizationNumber": {
                    "type": "string",
                    "xml": {
                        "name": "OrganizationNumber"
                    },
                    "maxLength": 100,
                    "description": "Organization number for company."
                },
                "parent": {
                    "type": "string",
                    "xml": {
                        "name": "Parent"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to parent company in Medius."
                },
                "isVirtual": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsVirtual"
                    },
                    "description": "Identifies if company is a virtual or real company in Medius."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "Unique company identifier"
                },
                "accountingCurrencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "AccountingCurrencyCode"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding Currency."
                },
                "companyIdentifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CompanyIdentifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationCompanyIdentifierDto"
                    }
                }
            }
        },
        "IntegrationCompanyIdentifierDto": {
            "type": "object",
            "xml": {
                "name": "CompanyIdentifier"
            },
            "additionalProperties": false,
            "properties": {
                "identifierType": {
                    "type": "string",
                    "xml": {
                        "name": "IdentifierType"
                    },
                    "maxLength": 450,
                    "description": "See list of available values for the identifier type. In GUI they are named differently, eg. Bank Account for BANK_ACCOUNT",
                    "enum": [
                        "BANK_ACCOUNT",
                        "ORGANIZATION_NUMBER",
                        "VAT_REGISTRATION_NUMBER",
                        "GLN_NUMBER",
                        "IBAN_NUMBER",
                        "OTHER",
                        "ExternalSystemIdentifier",
                        "CompanyNameIdentifier",
                        "CompanyIdIdentifier"
                    ]
                },
                "identifierValue": {
                    "type": "string",
                    "xml": {
                        "name": "IdentifierValue"
                    },
                    "maxLength": 450,
                    "description": "Identifier value, e.g. bank account number"
                }
            }
        },
        "IntegrationCurrencyDto": {
            "type": "object",
            "xml": {
                "name": "Currency"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "code",
                "isActive"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "code": {
                    "type": "string",
                    "xml": {
                        "name": "Code"
                    },
                    "maxLength": 10,
                    "description": "ISO Code of currency"
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                }
            }
        },
        "IntegrationCurrencyRateDto": {
            "type": "object",
            "xml": {
                "name": "CurrencyRate"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "code",
                "companyId",
                "rate",
                "startDate"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "code": {
                    "type": "string",
                    "xml": {
                        "name": "Code"
                    },
                    "maxLength": 10,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "rate": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Rate"
                    },
                    "description": "Currency rate. Decimal format (28,14). In 'to-format', e.g. Invoice currency * rate = Accounting currency"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "StartDate"
                    },
                    "description": "Start date of currency"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "EndDate"
                    },
                    "description": "End date of currency. If not provided, default = 9999-01-01 (YYYY-MM-DD)"
                }
            }
        },
        "IntegrationDeliveryTermDto": {
            "type": "object",
            "xml": {
                "name": "DeliveryTerm"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "companyId",
                "deliveryTermId",
                "isActive"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "deliveryTermId": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermId"
                    },
                    "maxLength": 100,
                    "description": "Unique identifier of the term"
                },
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    },
                    "maxLength": 450,
                    "description": "Name of delivery term"
                },
                "description": {
                    "type": "string",
                    "xml": {
                        "name": "Description"
                    },
                    "maxLength": 450,
                    "description": "Description of the delivery term"
                },
                "forceLocation": {
                    "type": "boolean",
                    "xml": {
                        "name": "ForceLocation"
                    },
                    "description": "If usage of the delivery term requires the user to enter a location, e.g., for CIP."
                }
            }
        },
        "IntegrationDimensionValueConfigurationDto": {
            "type": "object",
            "xml": {
                "name": "DimensionValueConfiguration"
            },
            "additionalProperties": false,
            "required": [
                "company",
                "dimensionValue"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "company": {
                    "type": "string",
                    "xml": {
                        "name": "Company"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "responsible": {
                    "type": "string",
                    "xml": {
                        "name": "Responsible"
                    },
                    "maxLength": 60,
                    "description": "Id reference in ERP, unique key between Medius and ERP. Needs to be User.Username in Medius, *Can be empty if ResponsibleRole is used"
                },
                "responsibleRole": {
                    "type": "string",
                    "xml": {
                        "name": "ResponsibleRole"
                    },
                    "maxLength": 60,
                    "description": "Same as Responsible, but instead of User name it is Role name. Needs to be Role.Name in Medius, *Can be used instead of Responsible"
                },
                "dimensionValue": {
                    "type": "string",
                    "xml": {
                        "name": "DimensionValue"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "responsibles": {
                    "type": "array",
                    "description": "Beta feature. Only available for Pilot customers.",
                    "xml": {
                        "wrapped": true,
                        "name": "Responsibles"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationDimensionValueConfigurationResponsibleDto"
                    }
                }
            }
        },
        "IntegrationDimensionValueConfigurationResponsibleDto": {
            "type": "object",
            "description": "Beta feature. Only available for Pilot customers.",
            "xml": {
                "name": "DimensionValueConfigurationResponsible"
            },
            "additionalProperties": false,
            "required": [
                "orderId"
            ],
            "properties": {
                "responsibleUser": {
                    "type": "string",
                    "xml": {
                        "name": "ResponsibleUser"
                    },
                    "description": "Beta feature. Only available for Pilot customers."
                },
                "responsibleRole": {
                    "type": "string",
                    "xml": {
                        "name": "ResponsibleRole"
                    },
                    "description": "Beta feature. Only available for Pilot customers."
                },
                "orderId": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "OrderId"
                    },
                    "description": "Beta feature. Only available for Pilot customers."
                }
            }
        },
        "IntegrationDimensionValueDto": {
            "type": "object",
            "xml": {
                "name": "DimensionValue"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "companyId",
                "description",
                "dimensionName",
                "isActive",
                "value"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimensionName": {
                    "type": "string",
                    "xml": {
                        "name": "DimensionName"
                    },
                    "maxLength": 450,
                    "description": "Define the dimension order. Values: DIMENSION1, DIMENSION2, …, DIMENSION12"
                },
                "description": {
                    "type": "string",
                    "xml": {
                        "name": "Description"
                    },
                    "maxLength": 100,
                    "description": "Description of the dimension value"
                },
                "value": {
                    "type": "string",
                    "xml": {
                        "name": "Value"
                    },
                    "maxLength": 50,
                    "description": "The dimension value"
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity (TaxGroup)"
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity (TaxGroup)"
                },
                "isFictive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsFictive"
                    },
                    "description": "If the entity is fictive or not"
                },
                "usableInPurchase": {
                    "type": "boolean",
                    "xml": {
                        "name": "UsableInPurchase"
                    },
                    "description": "Is dimension usable in Medius Buy"
                }
            }
        },
        "FileLink": {
            "type": "object",
            "xml": {
                "name": "FileLink"
            },
            "additionalProperties": false,
            "properties": {
                "ref": {
                    "type": "string",
                    "xml": {
                        "name": "Ref"
                    }
                },
                "fileName": {
                    "type": "string",
                    "xml": {
                        "name": "FileName"
                    }
                },
                "classification": {
                    "type": "string",
                    "xml": {
                        "name": "Classification"
                    }
                }
            }
        },
        "ErrorResponseDto": {
            "type": "object",
            "xml": {
                "name": "ErrorResponse"
            },
            "additionalProperties": false,
            "properties": {
                "errors": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Errors"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationErrorDto"
                    }
                },
                "correlationKey": {
                    "type": "string",
                    "xml": {
                        "name": "CorrelationKey"
                    }
                }
            }
        },
        "IntegrationErrorDto": {
            "type": "object",
            "xml": {
                "name": "Error"
            },
            "additionalProperties": false,
            "properties": {
                "message": {
                    "type": "string",
                    "xml": {
                        "name": "Message"
                    }
                }
            }
        },
        "IntegrationItemDto": {
            "type": "object",
            "xml": {
                "name": "Item"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "companyId",
                "description",
                "isActive",
                "number",
                "supplierItems"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "description": {
                    "type": "string",
                    "xml": {
                        "name": "Description"
                    },
                    "maxLength": 450,
                    "description": "Description"
                },
                "number": {
                    "type": "string",
                    "xml": {
                        "name": "Number"
                    },
                    "maxLength": 200,
                    "description": "Item number in ERP system"
                },
                "reference": {
                    "type": "string",
                    "xml": {
                        "name": "Reference"
                    },
                    "maxLength": 200,
                    "description": "Reference. Format: 'firstName lastName' or 'username'"
                },
                "supplierItems": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "SupplierItems"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationSupplierItemDto"
                    }
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                }
            }
        },
        "IntegrationSupplierItemDto": {
            "type": "object",
            "xml": {
                "name": "SupplierItem"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "partNumber",
                "supplier"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "IsActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive. Default value 1"
                },
                "partNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PartNumber"
                    },
                    "maxLength": 450,
                    "description": "Supplier part number"
                },
                "supplier": {
                    "type": "string",
                    "xml": {
                        "name": "Supplier"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "unit": {
                    "type": "string",
                    "xml": {
                        "name": "Unit"
                    },
                    "maxLength": 100,
                    "description": "Unit"
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    },
                    "description": "Unit price. Decimal format (28,14)"
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    },
                    "maxLength": 100,
                    "description": "Currency of Unit price"
                }
            }
        },
        "IntegrationPaymentInformationDto": {
            "type": "object",
            "xml": {
                "name": "PaymentInformation"
            },
            "additionalProperties": false,
            "properties": {
                "invoice": {
                    "$ref": "#/definitions/IntegrationPaymentInformationInvoiceDto"
                },
                "paymentLine": {
                    "$ref": "#/definitions/IntegrationPaymentLineDto"
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                }
            }
        },
        "IntegrationPaymentInformationInvoiceDto": {
            "type": "object",
            "xml": {
                "name": "Invoice"
            },
            "description": "Required to identify which invoice that should be updated with payment informations.",
            "additionalProperties": false,
            "required": [
                "date",
                "supplierId",
                "companyId",
                "invoiceNumber"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "Date"
                    },
                    "description": "Invoice date."
                },
                "supplierId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierId"
                    },
                    "description": "Id of the supplier. Supplier.SupplierId."
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "description": "Id of the company. Company.CompanyId."
                },
                "invoiceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceNumber"
                    },
                    "description": "Invoice number."
                }
            }
        },
        "IntegrationPaymentLineDto": {
            "type": "object",
            "xml": {
                "name": "PaymentLine"
            },
            "description": "Information about the payment.",
            "additionalProperties": false,
            "required": [
                "date",
                "method",
                "externalIdentifier"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "Date"
                    },
                    "description": "Date of the payment."
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "Amount of the payment. Decimal format (28,14)."
                },
                "status": {
                    "type": "string",
                    "xml": {
                        "name": "Status"
                    },
                    "maxLength": 450,
                    "description": "Status of the payment.",
                    "default": "Final",
                    "enum": [
                        "Partial",
                        "Final",
                        "Cancel"
                    ]
                },
                "method": {
                    "type": "string",
                    "xml": {
                        "name": "Method"
                    },
                    "maxLength": 450,
                    "description": "Method used for payment. I.e. Bank, Check. Free text description."
                },
                "identifier": {
                    "type": "string",
                    "xml": {
                        "name": "Identifier"
                    },
                    "maxLength": 450,
                    "description": "Payment identifier. I.e. check number or bank account number."
                },
                "externalIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalIdentifier"
                    },
                    "maxLength": 450,
                    "description": "Unique identifier used to match incoming payment lines with already imported in order to update them. Can be the same as Identifier but must be unique for all payment lines in given invoice."
                },
                "additionalInformation": {
                    "type": "string",
                    "xml": {
                        "name": "AdditionalInformation"
                    },
                    "maxLength": 450,
                    "description": "Additional description of the payment Method."
                }
            }
        },
        "IntegrationPaymentTermDto": {
            "type": "object",
            "xml": {
                "name": "PaymentTerm"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "companyId",
                "description",
                "isActive",
                "name",
                "paymentTermId"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "IsActive": {
                    "type": "boolean",
                    "description": "If the entity is active or inactive"
                },
                "lines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Lines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationPaymentTermLineDto"
                    }
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "paymentTermId": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermId"
                    },
                    "maxLength": 100,
                    "description": "Term id from ERP"
                },
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    },
                    "maxLength": 450,
                    "description": "Name of Payment term"
                },
                "description": {
                    "type": "string",
                    "xml": {
                        "name": "Description"
                    },
                    "maxLength": 450,
                    "description": "Description"
                },
                "numberOfDays": {
                    "type": "integer",
                    "xml": {
                        "name": "NumberOfDays"
                    },
                    "description": "Only for backward compatibility. Line with 0 cash discount should be used for NET payment term.",
                    "format": "int32",
                    "maxLength": 10
                },
                "numberOfFreeMonths": {
                    "type": "integer",
                    "xml": {
                        "name": "NumberOfFreeMonths"
                    },
                    "description": "Only for backward compatibility. Line with 0 cash discount should be used for NET payment term.",
                    "format": "int32",
                    "maxLength": 10
                },
                "startDate": {
                    "$ref": "#/definitions/IntegrationPaymentTermStartDateDto"
                }
            }
        },
        "IntegrationPaymentTermLineDto": {
            "type": "object",
            "xml": {
                "name": "PaymentTermLine"
            },
            "additionalProperties": false,
            "required": [
                "cashDiscountPercentage",
                "endOfMonth",
                "numberOfDays",
                "numberOfMonths"
            ],
            "properties": {
                "cashDiscountPercentage": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CashDiscountPercentage"
                    },
                    "description": "Cash discount. Value: >=0 and <= 100. Decimal format (19,5)"
                },
                "endOfMonth": {
                    "type": "boolean",
                    "xml": {
                        "name": "EndOfMonth"
                    },
                    "description": "If set to true, causes date to be set to the last day of the month the invoice was issued in. Values from the other fields are applied to the date after that."
                },
                "fixedPaymentDay": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "FixedPaymentDay"
                    },
                    "description": "Day in month when the payment should be made. Value: >=1 and <=31 or null"
                },
                "numberOfDays": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "NumberOfDays"
                    },
                    "description": "Number of days within the term"
                },
                "numberOfMonths": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "NumberOfMonths"
                    },
                    "description": "Number of months. Day of month remains the same. Value: >=0"
                }
            }
        },
        "IntegrationPaymentTermStartDateDto": {
            "type": "object",
            "xml": {
                "name": "StartDate"
            },
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string",
                    "xml": {
                        "name": "Type"
                    },
                    "maxLength": 450,
                    "description": "Start date type for calculating due date. Can be null.",
                    "enum": [
                        "InvoiceDate",
                        "ImportDate",
                        "FixedDay"
                    ]
                },
                "fixedDay": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "FixedDay"
                    },
                    "description": "The first day with the specified number after the invoice or imported date will be used as start date. Must be set when Type is set to FixedDay. Value: >=1 and <=31 or null"
                },
                "numberOfMonths": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "NumberOfMonths"
                    },
                    "description": "Adds the specified number of months to calculate the start date. Value: >=0 and <= 255 or null"
                }
            }
        },
        "IntegrationPeriodDto": {
            "type": "object",
            "xml": {
                "name": "Period"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "companyId",
                "documentType",
                "endDate",
                "integrationMessageType",
                "isOpen",
                "name",
                "startDate"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity."
                },
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    },
                    "maxLength": 450,
                    "description": "Name of the period."
                },
                "isOpen": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsOpen"
                    },
                    "description": "If the period is open or closed."
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "StartDate"
                    },
                    "description": "Start date of the period."
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "EndDate"
                    },
                    "description": "End date of the period."
                },
                "fixedDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "FixedDate"
                    },
                    "description": "Fixed date of the period."
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "integrationMessageType": {
                    "type": "string",
                    "xml": {
                        "name": "IntegrationMessageType"
                    },
                    "maxLength": 100,
                    "description": "Integration step in which the period is used.",
                    "enum": [
                        "PRELIMINARY",
                        "FINAL",
                        "PRELIMINARY_AND_FINAL"
                    ]
                },
                "documentType": {
                    "type": "string",
                    "xml": {
                        "name": "DocumentType"
                    },
                    "maxLength": 100,
                    "description": "Type of document for which the period is used.",
                    "enum": [
                        "EXPENSE",
                        "ORDER_BASED",
                        "CONTRACT_BASED",
                        "SUPPLIER_INVOICE"
                    ]
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                }
            }
        },
        "PurchaseOrderExportPageDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderPage"
            },
            "additionalProperties": false,
            "required": [
                "offset",
                "limit",
                "total"
            ],
            "properties": {
                "purchaseOrders": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "PurchaseOrders"
                    },
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderDto"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Offset"
                    }
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Limit"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Total"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/Paging"
                }
            }
        },
        "PurchaseOrderDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrder"
            },
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    }
                },
                "supplierId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierId"
                    }
                },
                "supplierGlobalId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierGlobalId"
                    }
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    }
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    }
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    }
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    }
                },
                "companyName": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyName"
                    }
                },
                "companyGlobalId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyGlobalId"
                    }
                },
                "purchaseOrderLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "PurchaseOrderLines"
                    },
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderLineDto"
                    }
                },
                "orderIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "OrderIdentifier"
                    }
                },
                "orderIdentifier2": {
                    "type": "string",
                    "xml": {
                        "name": "OrderIdentifier2"
                    }
                },
                "supplierName": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierName"
                    }
                },
                "orderType": {
                    "type": "string",
                    "xml": {
                        "name": "OrderType"
                    }
                },
                "mediusFlowSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "MediusFlowSystemId"
                    }
                },
                "globalId": {
                    "type": "string",
                    "xml": {
                        "name": "GlobalId"
                    }
                },
                "amount":{
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    }
                },
                "reference":{
                    "type": "string",
                    "xml": {
                        "name": "Reference"
                    }
                },
                "reference2":{
                    "type": "string",
                    "xml": {
                        "name": "Reference2"
                    }
                },
                "paymentTermId":{
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermId"
                    }
                },
                "registerDate":{
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "RegisterDate"
                    }
                },
                "dueDate":{
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DueDate"
                    }
                },
                "additionalOrderIdentifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "AdditionalOrderIdentifiers"
                    },
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "AdditionalOrderIdentifier",
                            "wrapped": true
                        }
                    }
                },
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                }
            }
        },
        "PurchaseOrderLineDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderLine"
            },
            "additionalProperties": false,
            "required": [
                "unitPrice",
                "quantity",
                "isServiceBased"
            ],
            "properties": {
                "lineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "LineNumber"
                    }
                },
                "itemNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ItemNumber"
                    }
                },
                "itemDescription": {
                    "type": "string",
                    "xml": {
                        "name": "ItemDescription"
                    }
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    }
                },
                "quantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Quantity"
                    }
                },
                "isServiceBased": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsServiceBased"
                    }
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    }
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    }
                },
                "unit": {
                    "type": "string",
                    "xml": {
                        "name": "Unit"
                    }
                },
                "isTwoWayMatch": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsTwoWayMatch"
                    }
                },
                "codingLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CodingLines"
                    },
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderCodingLineDto"
                    }
                },
                "deliveryLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "DeliveryLines"
                    },
                    "items": {
                        "$ref": "#/definitions/DeliveryLineDto"
                    }
                },
                "supplierItems": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "SupplierItems"
                    },
                    "items": {
                        "$ref": "#/definitions/SupplierItemDto"
                    }
                },
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                }
            }
        },
        "PurchaseOrderCodingLineDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderCodingLine"
            },
            "additionalProperties": false,
            "required": [
                "amount"
            ],
            "properties": {
                "dimensions": {
                    "$ref": "#/definitions/PurchaseOrderCodingLineDimensionsDto"
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    }
                },
                "tag": {
                    "type": "string",
                    "xml": {
                        "name": "Tag"
                    }
                }
            }
        },
        "PurchaseOrderCodingLineDimensionsDto": {
            "type": "object",
            "xml": {
                "name": "Dimensions"
            },
            "additionalProperties": false,
            "properties": {
                "dimension1": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension1"
                    }
                },
                "dimension2": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension2"
                    }
                },
                "dimension3": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension3"
                    }
                },
                "dimension4": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension4"
                    }
                },
                "dimension5": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension5"
                    }
                },
                "dimension6": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension6"
                    }
                },
                "dimension7": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension7"
                    }
                },
                "dimension8": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension8"
                    }
                },
                "dimension9": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension9"
                    }
                },
                "dimension10": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension10"
                    }
                },
                "dimension11": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension11"
                    }
                },
                "dimension12": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension12"
                    }
                },
                "freeText1": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText1"
                    }
                },
                "freeText2": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText2"
                    }
                },
                "freeText3": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText3"
                    }
                },
                "freeText4": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText4"
                    }
                },
                "freeText5": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText5"
                    }
                }
            }
        },
        "DeliveryLineDto": {
            "type": "object",
            "xml": {
                "name": "DeliveryLine"
            },
            "additionalProperties": false,
            "required": [
                "deliveredQuantity",
                "deliveredDate"
            ],
            "properties": {
                "deliveredQuantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeliveredQuantity"
                    }
                },
                "deliveredDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DeliveredDate"
                    }
                },
                "deliveryNote": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNote"
                    }
                },
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                }
            }
        },
        "MasterDataDto": {
            "type": "object",
            "additionalProperties": false,
            "required": [
                "isActive"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                }
            }
        },
        "SupplierItemDto": {
            "type": "object",
            "xml": {
                "name": "SupplierItem"
            },
            "additionalProperties": false,
            "properties": {
                "itemNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ItemNumber"
                    }
                },
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                }
            }
        },
        "IntegrationPurchaseOrderDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrder"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "amount",
                "companyId",
                "currencyCode",
                "isActive",
                "orderIdentifier",
                "registerDate",
                "supplier",
                "purchaseOrderLines"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "Total NET amount of the order. Decimal format (28,14)"
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "orderIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "OrderIdentifier"
                    },
                    "maxLength": 300,
                    "description": "Order identifier, e.g. Order number"
                },
                "orderIdentifier2": {
                    "type": "string",
                    "xml": {
                        "name": "OrderIdentifier2"
                    },
                    "maxLength": 300,
                    "description": "Order identifier 2, e.g. Order number 2"
                },
                "registerDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "RegisterDate"
                    },
                    "description": "Date of register"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DueDate"
                    },
                    "description": "Purchase order due date"
                },
                "supplier": {
                    "type": "string",
                    "xml": {
                        "name": "Supplier"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "reference": {
                    "type": "string",
                    "xml": {
                        "name": "Reference"
                    },
                    "maxLength": 450,
                    "description": "Purchase Order reference. Used to distribute invoice to PO responsible. UserName or Firstname + lastname (Maria Authorizer)."
                },
                "reference2": {
                    "type": "string",
                    "xml": {
                        "name": "Reference2"
                    },
                    "maxLength": 450,
                    "description": "Purchase Order reference. Used to distribute invoice to PO responsible. UserName or Firstname + lastname (Maria Authorizer)."
                },
                "paymentTerm": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTerm"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "prepayment": {
                    "type": "boolean",
                    "xml": {
                        "name": "Prepayment"
                    },
                    "description": "If the purchase order is valid for Prepayment or not"
                },
                "orderType": {
                    "type": "string",
                    "xml": {
                        "name": "OrderType"
                    },
                    "description": "If the order should be treated as internal or external order in Medius. T=external (default), M=internal.",
                    "enum": [
                        "T",
                        "M"
                    ]
                },
                "externalSystemMetadata": {
                    "type": "array",
                    "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                },
                "purchaseOrderLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "PurchaseOrderLines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationPurchaseOrderLineDto"
                    }
                },
                "purchaseOrderComments": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "PurchaseOrderComments"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationPurchaseOrderCommentDto"
                    }
                },
                "additionalOrderIdentifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "AdditionalOrderIdentifiers"
                    },
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "AdditionalOrderIdentifier",
                            "wrapped": true
                        }
                    }
                }
            }
        },
        "IntegrationPurchaseOrderLineDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderLine"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "amount",
                "isActive",
                "itemNumber",
                "lineNumber",
                "quantity",
                "unit",
                "unitPrice",
                "codingLines"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "Total NET amount of the order line. Currency taken from header. Decimal format (28,14)"
                },
                "codingLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CodingLines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationPreCodingLineDto"
                    }
                },
                "conversionFactor": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "ConversionFactor"
                    },
                    "description": "Conversion factor for unit price and quantity. Default is 1. Decimal format (19,5)",
                    "default": 1
                },
                "itemDescription": {
                    "type": "string",
                    "xml": {
                        "name": "ItemDescription"
                    },
                    "maxLength": 450,
                    "description": "Item description"
                },
                "itemNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ItemNumber"
                    },
                    "maxLength": 450,
                    "description": "Item number to be matched on invoice line"
                },
                "lineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "LineNumber"
                    },
                    "maxLength": 100,
                    "description": "Line number of the order line"
                },
                "itemId": {
                    "type": "string",
                    "xml": {
                        "name": "ItemId"
                    },
                    "maxLength": 100,
                    "description": "If items are imported it can be referenced by externalsystemid"
                },
                "quantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Quantity"
                    },
                    "description": "Ordered quantity of the order line. Decimal format (28,14)"
                },
                "unit": {
                    "type": "string",
                    "xml": {
                        "name": "Unit"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    },
                    "description": "Unit price of the order line. Currency taken from PO head. Decimal format (28,14)"
                },
                "reference": {
                    "type": "string",
                    "xml": {
                        "name": "Reference"
                    },
                    "maxLength": 450,
                    "description": "Purchase Order line reference. Used to distribute invoice to PO responsible. UserName or Firstname + lastname (Maria Authorizer)."
                },
                "reference2": {
                    "type": "string",
                    "xml": {
                        "name": "Reference2"
                    },
                    "maxLength": 450,
                    "description": "Purchase Order line reference 2. Used to distribute invoice to PO responsible. UserName or Firstname + lastname (Maria Authorizer)."
                },
                "deliveryLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "DeliveryLines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationDeliveryLineDto"
                    }
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity (TaxGroup)"
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    },
                    "maxLength": 450,
                    "description": "ExternalSystemId to corresponding entity (TaxGroup)"
                },
                "isServiceBased": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsServiceBased"
                    },
                    "description": "If purchase order line is service based or not. Only set during initial import, not possible to update."
                },
                "isTwoWayMatch": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsTwoWayMatch"
                    },
                    "description": "If true, no goods receipts are expected and IntegrationDeliveryLineDto should not be included."
                },
                "twoWayMatchTotalInvoicedQuantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "TwoWayMatchTotalInvoicedQuantity"
                    },
                    "description": "Only for two-way match. When used, Medius can keep track of invoiced quantity in the case of two-way match."
                },
                "externalSystemMetadata": {
                    "type": "array",
                    "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                }
            }
        },
        "IntegrationPreCodingLineDto": {
            "type": "object",
            "xml": {
                "name": "PreCodingLine"
            },
            "additionalProperties": false,
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "~~NET~~ amount for pre coding line. Amount field is mandatory in case there are multiple coding lines with same Type imported for one PO. Decimal format (28,14)"
                },
                "dimensions": {
                    "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                },
                "type": {
                    "type": "string",
                    "xml": {
                        "name": "Type"
                    },
                    "maxLength": 450,
                    "description": "See list for possible values. At least one CodingLine with Type = Cost is mandatory to provide to be able to import PO to Medius.",
                    "enum": [
                        "Cost",
                        "ExceptionType",
                        "DeviationUnitPrice",
                        "DeviationQuantity",
                        "DeviationLineTotal",
                        "DeviationNetAmount",
                        "DeviationUnitPriceWithinTolerance",
                        "DeviationQuantityWithinTolerance",
                        "DeviationLineTotalWithinTolerance",
                        "DeviationLineTotalApproved",
                        "DeviationLineTotalRejected",
                        "DeviationUnitPriceApproved",
                        "DeviationUnitPriceRejected",
                        "DeviationQuantityApproved",
                        "DeviationQuantityRejected",
                        "DeviationNetAmountApproved",
                        "DeviationNetAmountRejected",
                        "DeviationSameAsCost"
                    ]
                }
            }
        },
        "IntegrationDeliveryLineDto": {
            "type": "object",
            "xml": {
                "name": "DeliveryLine"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "deliveryNumber",
                "isActive",
                "amount",
                "deliveryDate",
                "quantity",
                "unit",
                "unitPrice"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "Total NET amount of the delivery line. Currency taken from PO head"
                },
                "conversionFactor": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "ConversionFactor"
                    },
                    "description": "Conversion factor for unit price and quantity. Default is 1. Decimal format (19,5)",
                    "default": 1
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DeliveryDate"
                    },
                    "description": "Delivery date"
                },
                "deliveryNumber": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNumber"
                    },
                    "maxLength": 450,
                    "description": "Delivery number of this line"
                },
                "deliveryNote": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNote"
                    },
                    "maxLength": 450,
                    "description": "Delivery note"
                },
                "releaseNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ReleaseNumber"
                    },
                    "maxLength": 450,
                    "description": "Release number"
                },
                "quantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Quantity"
                    },
                    "description": "Delivered quantity. Decimal format (28,14)"
                },
                "unit": {
                    "type": "string",
                    "xml": {
                        "name": "Unit"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    },
                    "description": "Unit price. Currency taken from PO head. Decimal format (28,14)"
                },
                "isFictive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsFictive"
                    },
                    "description": "If the delivery line isfictive or not"
                },
                "totalInvoicedQuantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "TotalInvoicedQuantity"
                    },
                    "description": "Total invoiced quantity. Decimal format (28,14)"
                },
                "purchaseOrderLineExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "PurchaseOrderLineExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "ExternalSystemId to PurchaseOrderLine to which this delivery line should be connected to. Only used when doing a goods receipt import without PO header and PO line."
                },
                "externalSystemMetadata": {
                    "type": "array",
                    "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                }
            }
        },
        "ExternalSystemMetadataEntry": {
            "type": "object",
            "xml": {
                "name": "ExternalSystemMetadataEntry"
            },
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    },
                    "maxLength": 25,
                    "description": "Name of the entry key. Custom value that will pass through Medius. The value will be available in the supplier invoice posting message."
                },
                "value": {
                    "type": "string",
                    "xml": {
                        "name": "Value"
                    },
                    "maxLength": 350,
                    "description": "Custom value that will pass through Medius. The value will be available in the supplier invoice posting message."
                }
            }
        },
        "IntegrationPurchaseOrderCommentDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderComment"
            },
            "additionalProperties": false,
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "commentDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CommentDate"
                    },
                    "description": "Date of the comment."
                },
                "comment": {
                    "type": "string",
                    "xml": {
                        "name": "Comment"
                    },
                    "maxLength": 450,
                    "description": "Comment text."
                }
            }
        },
        "PurchaseOrderRequestMessageDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrder"
            },
            "additionalProperties": false,
            "required": [
                "documentId",
                "orderDate",
                "total",
                "requestedDeliveryDate"
            ],
            "properties": {
                "correlationKey": {
                    "type": "string",
                    "xml": {
                        "name": "CorrelationKey"
                    }
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    }
                },
                "companyExternalDisplayName": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyExternalDisplayName"
                    }
                },
                "from": {
                    "$ref": "#/definitions/CompanyProcurementDto"
                },
                "documentId": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "DocumentId"
                    }
                },
                "to": {
                    "$ref": "#/definitions/SupplierContactDto"
                },
                "supplierId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierId"
                    }
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "OrderDate"
                    }
                },
                "orderNumber": {
                    "type": "string",
                    "xml": {
                        "name": "OrderNumber"
                    }
                },
                "requisitionId": {
                    "type": "string",
                    "xml": {
                        "name": "RequisitionId"
                    }
                },
                "total": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Total"
                    }
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    }
                },
                "requestedDeliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "RequestedDeliveryDate"
                    }
                },
                "shipToAddress": {
                    "type": "string",
                    "xml": {
                        "name": "ShipToAddress"
                    }
                },
                "shipToAddressDetails": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressProcurementDto"
                        }
                    ],
                    "xml": {
                        "name": "ShipToAddressDetails"
                    }
                },
                "billToAddress": {
                    "type": "string",
                    "xml": {
                        "name": "BillToAddress"
                    }
                },
                "billToAddressDetails": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressProcurementDto"
                        }
                    ],
                    "xml": {
                        "name": "BillToAddressDetails"
                    }
                },
                "paymentTermId": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermId"
                    }
                },
                "paymentTermName": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermName"
                    }
                },
                "paymentTermDescription": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermDescription"
                    }
                },
                "deliveryTermId": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermId"
                    }
                },
                "deliveryTermName": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermName"
                    }
                },
                "deliveryTermDescription": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermDescription"
                    }
                },
                "deliveryTermLocation": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermLocation"
                    }
                },
                "ourReference": {
                    "type": "string",
                    "xml": {
                        "name": "OurReference"
                    }
                },
                "ourReferenceEmail": {
                    "type": "string",
                    "xml": {
                        "name": "OurReferenceEmail"
                    }
                },
                "buyer": {
                    "type": "string",
                    "xml": {
                        "name": "Buyer"
                    }
                },
                "buyerEmail": {
                    "type": "string",
                    "xml": {
                        "name": "BuyerEmail"
                    }
                },
                "yourReference": {
                    "type": "string",
                    "xml": {
                        "name": "YourReference"
                    }
                },
                "shippingMarks": {
                    "type": "string",
                    "xml": {
                        "name": "ShippingMarks"
                    }
                },
                "comments": {
                    "type": "string",
                    "xml": {
                        "name": "Comments"
                    }
                },
                "erpId": {
                    "type": "string",
                    "xml": {
                        "name": "ERPId"
                    }
                },
                "requisitionTypeName": {
                    "type": "string",
                    "xml": {
                        "name": "RequisitionTypeName"
                    }
                },
                "lines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Lines"
                    },
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderLineProcurementDto"
                    }
                },
                "supplierContactPersons": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "SupplierContactPersons"
                    },
                    "items": {
                        "$ref": "#/definitions/SupplierContactPersonDto"
                    }
                }
            }
        },
        "CompanyProcurementDto": {
            "title": "CompanyDto",
            "type": "object",
            "xml": {
                "name": "From"
            },
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    }
                },
                "identifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Identifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/IdentifierDto"
                    }
                },
                "addresses": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Addresses"
                    },
                    "items": {
                        "$ref": "#/definitions/AddressProcurementDto"
                    }
                }
            }
        },
        "AddressProcurementDto": {
            "title": "AddressDto",
            "type": "object",
            "xml": {
                "name": "Address"
            },
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    }
                },
                "recipient": {
                    "type": "string",
                    "xml": {
                        "name": "Recipient"
                    }
                },
                "streetAddress": {
                    "type": "string",
                    "xml": {
                        "name": "StreetAddress"
                    }
                },
                "streetAddress2": {
                    "type": "string",
                    "xml": {
                        "name": "StreetAddress2"
                    }
                },
                "division": {
                    "type": "string",
                    "xml": {
                        "name": "Division"
                    }
                },
                "building": {
                    "type": "string",
                    "xml": {
                        "name": "Building"
                    }
                },
                "location": {
                    "type": "string",
                    "xml": {
                        "name": "Location"
                    }
                },
                "state": {
                    "type": "string",
                    "xml": {
                        "name": "State"
                    }
                },
                "zip": {
                    "type": "string",
                    "xml": {
                        "name": "Zip"
                    }
                },
                "country": {
                    "type": "string",
                    "xml": {
                        "name": "Country"
                    }
                },
                "city": {
                    "type": "string",
                    "xml": {
                        "name": "City"
                    }
                },
                "telephone": {
                    "type": "string",
                    "xml": {
                        "name": "Telephone"
                    }
                },
                "fax": {
                    "type": "string",
                    "xml": {
                        "name": "Fax"
                    }
                },
                "homepage": {
                    "type": "string",
                    "xml": {
                        "name": "Homepage"
                    }
                },
                "email": {
                    "type": "string",
                    "xml": {
                        "name": "Email"
                    }
                }
            }
        },
        "SupplierContactDto": {
            "type": "object",
            "xml": {
                "name": "To"
            },
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    }
                },
                "identifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Identifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/IdentifierDto"
                    }
                },
                "address": {
                    "$ref": "#/definitions/AddressProcurementDto"
                }
            }
        },
        "CodingDto": {
            "type": "object",
            "xml": {
                "name": "Coding"
            },
            "additionalProperties": false,
            "properties": {
                "dimension1": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension1"
                    }
                },
                "dimension2": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension2"
                    }
                },
                "dimension3": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension3"
                    }
                },
                "dimension4": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension4"
                    }
                },
                "dimension5": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension5"
                    }
                },
                "dimension6": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension6"
                    }
                },
                "dimension7": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension7"
                    }
                },
                "dimension8": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension8"
                    }
                },
                "dimension9": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension9"
                    }
                },
                "dimension10": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension10"
                    }
                },
                "dimension11": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension11"
                    }
                },
                "dimension12": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension12"
                    }
                },
                "freeText1": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText1"
                    }
                },
                "freeText2": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText2"
                    }
                },
                "freeText3": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText3"
                    }
                },
                "freeText4": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText4"
                    }
                },
                "freeText5": {
                    "type": "string",
                    "xml": {
                        "name": "FreeText5"
                    }
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    }
                }
            }
        },
        "SupplierContactPersonDto": {
            "type": "object",
            "xml": {
                "name": "SupplierContactPerson"
            },
            "additionalProperties": false,
            "properties": {
                "firstName": {
                    "type": "string",
                    "xml": {
                        "name": "FirstName"
                    }
                },
                "lastName": {
                    "type": "string",
                    "xml": {
                        "name": "LastName"
                    }
                },
                "email": {
                    "type": "string",
                    "xml": {
                        "name": "Email"
                    }
                },
                "telephone": {
                    "type": "string",
                    "xml": {
                        "name": "Telephone"
                    }
                }
            }
        },
        "PurchaseOrderLineProcurementDto": {
            "title": "PurchaseOrderLineDto",
            "type": "object",
            "xml": {
                "name": "PurchaseOrderLine"
            },
            "additionalProperties": false,
            "properties": {
                "lineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "LineNumber"
                    }
                },
                "requisitionId": {
                    "type": "string",
                    "xml": {
                        "name": "RequisitionId"
                    }
                },
                "isServiceItem": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsServiceItem"
                    }
                },
                "contractNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ContractNumber"
                    }
                },
                "requestedDeliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "RequestedDeliveryDate"
                    }
                },
                "itemNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ItemNumber"
                    }
                },
                "itemDescription": {
                    "type": "string",
                    "xml": {
                        "name": "ItemDescription"
                    }
                },
                "quantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Quantity"
                    }
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    }
                },
                "unit": {
                    "type": "string",
                    "xml": {
                        "name": "Unit"
                    }
                },
                "total": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Total"
                    }
                },
                "comments": {
                    "type": "string",
                    "xml": {
                        "name": "Comments"
                    }
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    }
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    }
                },
                "codingLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CodingLines"
                    },
                    "items": {
                        "$ref": "#/definitions/CodingDto"
                    }
                }
            }
        },
        "ProcurementPurchaseOrderDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrder"
            },
            "additionalProperties": false,
            "required": [
                "documentId",
                "orderDate",
                "total",
                "requestedDeliveryDate"
            ],
            "properties": {
                "correlationKey": {
                    "type": "string",
                    "xml": {
                        "name": "CorrelationKey"
                    }
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    }
                },
                "companyExternalDisplayName": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyExternalDisplayName"
                    }
                },
                "from": {
                    "$ref": "#/definitions/CompanyProcurementDto"
                },
                "documentId": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "DocumentId"
                    }
                },
                "to": {
                    "$ref": "#/definitions/SupplierContactDto"
                },
                "supplierId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierId"
                    }
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "OrderDate"
                    }
                },
                "orderNumber": {
                    "type": "string",
                    "xml": {
                        "name": "OrderNumber"
                    }
                },
                "externalOrderNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalOrderNumber"
                    }
                },
                "requisitionId": {
                    "type": "string",
                    "xml": {
                        "name": "RequisitionId"
                    }
                },
                "total": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Total"
                    }
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    }
                },
                "requestedDeliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "RequestedDeliveryDate"
                    }
                },
                "shipToAddress": {
                    "type": "string",
                    "xml": {
                        "name": "ShipToAddress"
                    }
                },
                "shipToAddressDetails": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressProcurementDto"
                        }
                    ],
                    "xml": {
                        "name": "ShipToAddressDetails"
                    }
                },
                "billToAddress": {
                    "type": "string",
                    "xml": {
                        "name": "BillToAddress"
                    }
                },
                "billToAddressDetails": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressProcurementDto"
                        }
                    ],
                    "xml": {
                        "name": "BillToAddressDetails"
                    }
                },
                "paymentTermId": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermId"
                    }
                },
                "paymentTermName": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermName"
                    }
                },
                "paymentTermDescription": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermDescription"
                    }
                },
                "deliveryTermId": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermId"
                    }
                },
                "deliveryTermName": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermName"
                    }
                },
                "deliveryTermDescription": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermDescription"
                    }
                },
                "deliveryTermLocation": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermLocation"
                    }
                },
                "ourReference": {
                    "type": "string",
                    "xml": {
                        "name": "OurReference"
                    }
                },
                "ourReferenceEmail": {
                    "type": "string",
                    "xml": {
                        "name": "OurReferenceEmail"
                    }
                },
                "ourReferenceUserName": {
                    "type": "string",
                    "xml": {
                        "name": "OurReferenceUserName"
                    }
                },
                "buyer": {
                    "type": "string",
                    "xml": {
                        "name": "Buyer"
                    }
                },
                "buyerEmail": {
                    "type": "string",
                    "xml": {
                        "name": "BuyerEmail"
                    }
                },
                "buyerUserName": {
                    "type": "string",
                    "xml": {
                        "name": "BuyerUserName"
                    }
                },
                "yourReference": {
                    "type": "string",
                    "xml": {
                        "name": "YourReference"
                    }
                },
                "shippingMarks": {
                    "type": "string",
                    "xml": {
                        "name": "ShippingMarks"
                    }
                },
                "comments": {
                    "type": "string",
                    "xml": {
                        "name": "Comments"
                    }
                },
                "erpId": {
                    "type": "string",
                    "xml": {
                        "name": "ERPId"
                    }
                },
                "requisitionTypeName": {
                    "type": "string",
                    "xml": {
                        "name": "RequisitionTypeName"
                    }
                },
                "lines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Lines"
                    },
                    "items": {
                        "$ref": "#/definitions/GrnPurchaseOrderLineDto"
                    }
                },
                "supplierContactPersons": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "SupplierContactPersons"
                    },
                    "items": {
                        "$ref": "#/definitions/SupplierContactPersonDto"
                    }
                }
            }
        },
        "GrnPurchaseOrderDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrder"
            },
            "additionalProperties": false,
            "required": [
                "documentId",
                "orderDate",
                "total",
                "requestedDeliveryDate"
            ],
            "properties": {
                "correlationKey": {
                    "type": "string",
                    "xml": {
                        "name": "CorrelationKey"
                    }
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    }
                },
                "companyExternalDisplayName": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyExternalDisplayName"
                    }
                },
                "from": {
                    "$ref": "#/definitions/CompanyProcurementDto"
                },
                "documentId": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "DocumentId"
                    }
                },
                "to": {
                    "$ref": "#/definitions/SupplierContactDto"
                },
                "supplierId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierId"
                    }
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "OrderDate"
                    }
                },
                "orderNumber": {
                    "type": "string",
                    "xml": {
                        "name": "OrderNumber"
                    }
                },
                "externalOrderNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalOrderNumber"
                    }
                },
                "requisitionId": {
                    "type": "string",
                    "xml": {
                        "name": "RequisitionId"
                    }
                },
                "total": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Total"
                    }
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    }
                },
                "requestedDeliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "RequestedDeliveryDate"
                    }
                },
                "shipToAddress": {
                    "type": "string",
                    "xml": {
                        "name": "ShipToAddress"
                    }
                },
                "shipToAddressDetails": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressProcurementDto"
                        }
                    ],
                    "xml": {
                        "name": "ShipToAddressDetails"
                    }
                },
                "billToAddress": {
                    "type": "string",
                    "xml": {
                        "name": "BillToAddress"
                    }
                },
                "billToAddressDetails": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddressProcurementDto"
                        }
                    ],
                    "xml": {
                        "name": "BillToAddressDetails"
                    }
                },
                "paymentTermId": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermId"
                    }
                },
                "paymentTermName": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermName"
                    }
                },
                "paymentTermDescription": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermDescription"
                    }
                },
                "deliveryTermId": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermId"
                    }
                },
                "deliveryTermName": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermName"
                    }
                },
                "deliveryTermDescription": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermDescription"
                    }
                },
                "deliveryTermLocation": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTermLocation"
                    }
                },
                "ourReference": {
                    "type": "string",
                    "xml": {
                        "name": "OurReference"
                    }
                },
                "ourReferenceEmail": {
                    "type": "string",
                    "xml": {
                        "name": "OurReferenceEmail"
                    }
                },
                "buyer": {
                    "type": "string",
                    "xml": {
                        "name": "Buyer"
                    }
                },
                "buyerEmail": {
                    "type": "string",
                    "xml": {
                        "name": "BuyerEmail"
                    }
                },
                "yourReference": {
                    "type": "string",
                    "xml": {
                        "name": "YourReference"
                    }
                },
                "shippingMarks": {
                    "type": "string",
                    "xml": {
                        "name": "ShippingMarks"
                    }
                },
                "comments": {
                    "type": "string",
                    "xml": {
                        "name": "Comments"
                    }
                },
                "erpId": {
                    "type": "string",
                    "xml": {
                        "name": "ERPId"
                    }
                },
                "requisitionTypeName": {
                    "type": "string",
                    "xml": {
                        "name": "RequisitionTypeName"
                    }
                },
                "lines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Lines"
                    },
                    "items": {
                        "$ref": "#/definitions/GrnPurchaseOrderLineDto"
                    }
                },
                "supplierContactPersons": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "SupplierContactPersons"
                    },
                    "items": {
                        "$ref": "#/definitions/SupplierContactPersonDto"
                    }
                },
                "goodsReceiptNote": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoodsReceiptNoteDto"
                    }
                }
            }
        },
        "GrnPurchaseOrderLineDto": {
            "type": "object",
            "xml": {
                "name": "Line",
                "namespace": "PurchaseOrder"
            },
            "additionalProperties": false,
            "required": [
                "isServiceItem",
                "requestedDeliveryDate",
                "quantity",
                "unitPrice",
                "total",
                "isTwoWayMatch",
                "isActive",
                "isOpen"
            ],
            "properties": {
                "lineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "LineNumber"
                    }
                },
                "externalOrderLineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalOrderLineNumber"
                    }
                },
                "requisitionId": {
                    "type": "string",
                    "xml": {
                        "name": "RequisitionId"
                    }
                },
                "isServiceItem": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsServiceItem"
                    }
                },
                "contractNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ContractNumber"
                    }
                },
                "requestedDeliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "RequestedDeliveryDate"
                    }
                },
                "itemNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ItemNumber"
                    }
                },
                "itemDescription": {
                    "type": "string",
                    "xml": {
                        "name": "ItemDescription"
                    }
                },
                "quantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Quantity"
                    }
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    }
                },
                "unit": {
                    "type": "string",
                    "xml": {
                        "name": "Unit"
                    }
                },
                "total": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Total"
                    }
                },
                "comments": {
                    "type": "string",
                    "xml": {
                        "name": "Comments"
                    }
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    }
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    }
                },
                "codingLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CodingLines"
                    },
                    "items": {
                        "$ref": "#/definitions/CodingDto"
                    }
                },
                "externalSystemMetadata": {
                    "type": "array",
                    "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                },
                "isTwoWayMatch": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsTwoWayMatch"
                    }
                },
                "categoryExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "CategoryExternalSystemId"
                    }
                },
                "categoryCode": {
                    "type": "string",
                    "xml": {
                        "name": "CategoryCode"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "isOpen": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsOpen"
                    }
                }
            }
        },
        "GoodsReceiptNoteDto": {
            "type": "object",
            "xml": {
                "name": "GoodsReceiptNote"
            },
            "additionalProperties": false,
            "required": [
                "date"
            ],
            "properties": {
                "referenceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ReferenceNumber"
                    }
                },
                "externalReferenceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalReferenceNumber"
                    }
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "Date"
                    }
                },
                "comment": {
                    "type": "string",
                    "xml": {
                        "name": "Comment"
                    }
                },
                "lines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Lines"
                    },
                    "items": {
                        "$ref": "#/definitions/GoodsReceiptNoteLineDto"
                    }
                }
            }
        },
        "GoodsReceiptNoteLineDto": {
            "type": "object",
            "xml": {
                "name": "Line",
                "namespace": "GoodsReceiptNote"
            },
            "additionalProperties": false,
            "required": [
                "deliveredDate",
                "quantity",
                "unitPrice",
                "total",
                "isActive"
            ],
            "properties": {
                "purchaseOrderLineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PurchaseOrderLineNumber"
                    }
                },
                "purchaseOrderExternalLineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PurchaseOrderExternalLineNumber"
                    }
                },
                "deliveryNumber": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNumber"
                    }
                },
                "deliveryNote": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNote"
                    }
                },
                "releaseNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ReleaseNumber"
                    }
                },
                "externalDeliveryNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalDeliveryNumber"
                    }
                },
                "deliveredDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DeliveredDate"
                    }
                },
                "quantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Quantity"
                    }
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    }
                },
                "reasonCode": {
                    "type": "string",
                    "xml": {
                        "name": "ReasonCode"
                    }
                },
                "total": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Total"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "originGoodsReceiptNoteReferenceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "OriginGoodsReceiptNoteReferenceNumber"
                    }
                },
                "externalSystemMetadata": {
                    "type": "array",
                    "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                }
            }
        },
        "Link": {
            "type": "object",
            "xml": {
                "name": "Link"
            },
            "additionalProperties": false,
            "properties": {
                "url": {
                    "type": "string",
                    "xml": {
                        "name": "Url"
                    }
                }
            }
        },
        "StatusRequest": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "newStatus": {
                    "type": "string",
                    "xml": {
                        "name": "NewStatus"
                    }
                }
            }
        },
        "OrderRequestResponseDto": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "correlationKey": {
                    "type": "string",
                    "xml": {
                        "name": "CorrelationKey"
                    }
                },
                "responseData": {
                    "$ref": "#/definitions/ConfirmationDataDto"
                }
            }
        },
        "ConfirmationDataDto": {
            "type": "object",
            "xml": {
                "name": "ConfirmationData"
            },
            "additionalProperties": false,
            "properties": {
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    }
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    }
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    }
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    }
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    }
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    }
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    }
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    }
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    }
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    }
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    }
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    }
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    }
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    }
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    }
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    }
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    }
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    }
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    }
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    }
                },
                "externalOrderNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalOrderNumber"
                    }
                }
            }
        },
        "PurchaseOrderRequestResponseDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderResponse"
            },
            "additionalProperties": false,
            "properties": {
                "correlationKey": {
                    "type": "string",
                    "xml": {
                        "name": "CorrelationKey"
                    }
                },
                "purchaseOrderConfirmation": {
                    "$ref": "#/definitions/PurchaseOrderConfirmationDto"
                },
                "goodsReceiptNoteConfirmation": {
                    "$ref": "#/definitions/GoodsReceiptNoteConfirmationDto"
                }
            }
        },
        "PurchaseOrderConfirmationDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderConfirmation"
            },
            "additionalProperties": false,
            "properties": {
                "orderNumber": {
                    "type": "string",
                    "xml": {
                        "name": "OrderNumber"
                    }
                },
                "externalOrderNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalOrderNumber"
                    }
                },
                "externalSystemMetadata": {
                    "type": "array",
                    "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                },
                "lines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Lines"
                    },
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderLineConfirmationDto"
                    }
                }
            }
        },
        "PurchaseOrderLineConfirmationDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderLineConfirmation"
            },
            "additionalProperties": false,
            "properties": {
                "lineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "LineNumber"
                    }
                },
                "externalOrderLineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalOrderLineNumber"
                    }
                },
                "externalSystemMetadata": {
                    "type": "array",
                    "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                }
            }
        },
        "GoodsReceiptNoteConfirmationDto": {
            "type": "object",
            "xml": {
                "name": "GoodsReceiptNoteConfirmation"
            },
            "additionalProperties": false,
            "properties": {
                "referenceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ReferenceNumber"
                    }
                },
                "externalReferenceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalReferenceNumber"
                    }
                },
                "lines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Lines"
                    },
                    "items": {
                        "$ref": "#/definitions/GoodsReceiptNoteLineConfirmationDto"
                    }
                }
            }
        },
        "GoodsReceiptNoteLineConfirmationDto": {
            "type": "object",
            "xml": {
                "name": "GoodsReceiptNoteLineConfirmation"
            },
            "additionalProperties": false,
            "properties": {
                "deliveryNumber": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNumber"
                    }
                },
                "externalDeliveryNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalDeliveryNumber"
                    }
                },
                "externalSystemMetadata": {
                    "type": "array",
                    "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                }
            }
        },
        "IntegrationBasicRestrictionsDto": {
            "type": "object",
            "xml": {
                "name": "BasicRestriction"
            },
            "additionalProperties": false,
            "required": [
                "controllingDimensionValueKey"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity."
                },
                "controllingDimensionValueKey": {
                    "type": "string",
                    "xml": {
                        "name": "ControllingDimensionValueKey"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId of controlling dimension value."
                },
                "restrictedDimensions": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "RestrictedDimensions"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationRestrictedDimensionDto"
                    }
                }
            }
        },
        "IntegrationRestrictedDimensionDto": {
            "type": "object",
            "xml": {
                "name": "RestrictedDimension"
            },
            "additionalProperties": false,
            "required": [
                "dimension",
                "restrictionType"
            ],
            "properties": {
                "defaultDimensionValueKey": {
                    "type": "string",
                    "xml": {
                        "name": "DefaultDimensionValueKey"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId of restricted dimension value. Only set a value if RestrictionType = Default or set a value optionally if RestrictionType = Required."
                },
                "fixedDimensionValueKey": {
                    "type": "string",
                    "xml": {
                        "name": "FixedDimensionValueKey"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId of restricted dimension value. Only set a value if RestrictionType = Fixed."
                },
                "dimension": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension"
                    },
                    "maxLength": 100,
                    "description": "Dimension order where the restriction should apply.",
                    "enum": [
                        "DIMENSION1",
                        "DIMENSION2",
                        "DIMENSION3",
                        "DIMENSION4",
                        "DIMENSION5",
                        "DIMENSION6",
                        "DIMENSION7",
                        "DIMENSION8",
                        "DIMENSION9",
                        "DIMENSION10",
                        "DIMENSION11",
                        "DIMENSION12"
                    ]
                },
                "restrictionType": {
                    "type": "string",
                    "xml": {
                        "name": "RestrictionType"
                    },
                    "description": "Set which type of restriction to be used.",
                    "enum": [
                        "Default",
                        "Fixed",
                        "Forbidden",
                        "Required"
                    ]
                }
            }
        },
        "RestrictionRuleGroupDto": {
            "type": "object",
            "xml": {
                "name": "RestrictionRuleGroup"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "companyId",
                "isActive"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity."
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP."
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "Unique identifier for the Company. I.e. CompanyId and not the ExternalSystemId for the Company."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive."
                },
                "restrictionRules": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "RestrictionRules"
                    },
                    "items": {
                        "$ref": "#/definitions/RestrictionRuleDto"
                    }
                }
            }
        },
        "RestrictionRuleDto": {
            "type": "object",
            "xml": {
                "name": "RestrictionRule"
            },
            "additionalProperties": false,
            "properties": {
                "controllingDimension": {
                    "type": "string",
                    "xml": {
                        "name": "ControllingDimension"
                    },
                    "description": "Controlling dimension is the dimension the rule will be based on.",
                    "enum":[
                        "DIMENSION1",
                        "DIMENSION2",
                        "DIMENSION3",
                        "DIMENSION4",
                        "DIMENSION5",
                        "DIMENSION6",
                        "DIMENSION7",
                        "DIMENSION8",
                        "DIMENSION9",
                        "DIMENSION10",
                        "DIMENSION11",
                        "DIMENSION12"
                    ]
                },
                "controllingDimensionValues": {
                    "type": "array",
                    "description": "Multiple ControllingDimension sets of values are allowed, but each set will be mapped to separate restriction rules in Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ControllingDimensionValues"
                    },
                    "items": {
                        "$ref": "#/definitions/ControllingDimensionDto"
                    }
                },
                "restrictedOrderedDimensionGroups": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "RestrictedOrderedDimensionGroups"
                    },
                    "items": {
                        "$ref": "#/definitions/RestrictedDimensionGroupDto"
                    }
                }
            }
        },
        "ControllingDimensionDto": {
            "type": "object",
            "xml": {
                "name": "ControllingDimension"
            },
            "additionalProperties": false,
            "required": [
                "includeEdges"
            ],
            "properties": {
                "from": {
                    "type": "string",
                    "xml": {
                        "name": "From"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Is greater than. Use IncludeEdges for including or not."
                },
                "to": {
                    "type": "string",
                    "xml": {
                        "name": "To"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Is less than. Use IncludeEdges for including or not."
                },
                "startsWith": {
                    "type": "string",
                    "xml": {
                        "name": "StartsWith"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Begins with."
                },
                "endsWith": {
                    "type": "string",
                    "xml": {
                        "name": "EndsWith"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Ends with."
                },
                "is": {
                    "type": "string",
                    "xml": {
                        "name": "Is"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Is."
                },
                "in": {
                    "type": "array",
                    "description": "Operator in Medius: Is. Each list value will be mapped as separate rules.",
                    "xml": {
                        "wrapped": true,
                        "name": "In"
                    },
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "string"
                        }
                    }
                },
                "isAnyValue": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsAnyValue"
                    },
                    "description": "Operator in Medius: Is any value."
                },
                "includeEdges": {
                    "type": "boolean",
                    "xml": {
                        "name": "IncludeEdges"
                    },
                    "description": "Include edges is used in combination with other operators to determine use of start and end values."
                }
            }
        },
        "RestrictedDimensionGroupDto": {
            "type": "object",
            "xml": {
                "name": "RestrictedDimensionGroup"
            },
            "additionalProperties": false,
            "properties": {
                "dimension": {
                    "type": "string",
                    "xml": {
                        "name": "Dimension"
                    },
                    "description": "Dimension which the child rule will be based on.",
                    "enum":[
                        "DIMENSION1",
                        "DIMENSION2",
                        "DIMENSION3",
                        "DIMENSION4",
                        "DIMENSION5",
                        "DIMENSION6",
                        "DIMENSION7",
                        "DIMENSION8",
                        "DIMENSION9",
                        "DIMENSION10",
                        "DIMENSION11",
                        "DIMENSION12",
                        "FREETEXT1",
                        "FREETEXT2",
                        "FREETEXT3",
                        "FREETEXT4",
                        "FREETEXT5"
                    ]
                },
                "childRules": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "ChildRules"
                    },
                    "items": {
                        "$ref": "#/definitions/RuleDto"
                    }
                }
            }
        },
        "RuleDto": {
            "type": "object",
            "xml": {
                "name": "Rule"
            },
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string",
                    "xml": {
                        "name": "Type"
                    }
                },
                "dimensionValues": {
                    "$ref": "#/definitions/DimensionValueDto"
                }
            }
        },
        "DimensionValueDto": {
            "type": "object",
            "xml": {
                "name": "DimensionValues"
            },
            "additionalProperties": false,
            "required": [
                "includeEdges"
            ],
            "properties": {
                "from": {
                    "type": "string",
                    "xml": {
                        "name": "From"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Is greater than. Use IncludeEdges for including or not."
                },
                "to": {
                    "type": "string",
                    "xml": {
                        "name": "To"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Is less than. Use IncludeEdges for including or not."
                },
                "startsWith": {
                    "type": "string",
                    "xml": {
                        "name": "StartsWith"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Begins with."
                },
                "endsWith": {
                    "type": "string",
                    "xml": {
                        "name": "EndsWith"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Ends with."
                },
                "is": {
                    "type": "string",
                    "xml": {
                        "name": "Is"
                    },
                    "maxLength": 200,
                    "description": "Operator in Medius: Is."
                },
                "in": {
                    "type": "array",
                    "description": "Operator in Medius: Is. Each list value will be mapped as separate rules.",
                    "xml": {
                        "wrapped": true,
                        "name": "In"
                    },
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "string"
                        }
                    }
                },
                "isAnyValue": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsAnyValue"
                    },
                    "description": "Operator in Medius: Is any value."
                },
                "isEmptyValue": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsEmptyValue"
                    },
                    "description": "Operator in Medius: Is empty value."
                },
                "includeEdges": {
                    "type": "boolean",
                    "xml": {
                        "name": "IncludeEdges"
                    },
                    "description": "Include edges is used in combination with other operators to determine use of start and end values."
                }
            }
        },
        "IntegrationSupplierConfigurationDto": {
            "type": "object",
            "xml": {
                "name": "SupplierConfiguration"
            },
            "additionalProperties": false,
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity."
                },
                "company": {
                    "type": "string",
                    "xml": {
                        "name": "Company"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity."
                },
                "responsible": {
                    "type": "string",
                    "xml": {
                        "name": "Responsible"
                    },
                    "maxLength": 450,
                    "description": "Used to distribute invoice to supplier responsible. Format: UserName or Full name (FirstName + LastName) in Medius. Can be used instead of ResponsibleRole."
                },
                "responsibleRole": {
                    "type": "string",
                    "xml": {
                        "name": "ResponsibleRole"
                    },
                    "maxLength": 450,
                    "description": "Role to distribute invoice to supplier responsible. Format: Needs to be Role.Name in Medius. Can be used instead of Responsible."
                },
                "supplier": {
                    "type": "string",
                    "xml": {
                        "name": "Supplier"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity."
                },
                "contactPersons": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "ContactPersons"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationContactPersonDto"
                    }
                },
                "expectedDeliveryTimeInDays": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "ExpectedDeliveryTimeInDays"
                    },
                    "description": "Number of days that invoice should be hidden when using Goods in Transit inbox filter."
                },
                "sendPurchaseOrderAsIntegrationMessage": {
                    "type": "boolean",
                    "xml": {
                        "name": "SendPurchaseOrderAsIntegrationMessage"
                    },
                    "description": "Enable this option to automatically send the purchase order as an integration message. Integration message setting must be active for the PO to be sent. You can combine this option with sending the order as a PDF file."
                },
                "sendPurchaseOrderAsPdf": {
                    "type": "boolean",
                    "xml": {
                        "name": "SendPurchaseOrderAsPdf"
                    },
                    "description": "Enable this option to be able to send the purchase order as a PDF file attached to an email directly in Medius. You can combine this option with sending the purchase order as an integration message."
                },
                "registerGoodsReceiptType": {
                    "type": "string",
                    "xml": {
                        "name": "RegisterGoodsReceiptType"
                    },
                    "description": "Change this parameter if the default behavior for the supplier should be to skip the goods receipt step and work with two-way match. If not provided, setting in Medius is kept.",
                    "enum": [
                        "Yes_ThreeWayMatch",
                        "Yes_ExceptForService",
                        "No_TwoWayMatch"
                    ]
                }
            }
        },
        "IntegrationContactPersonDto": {
            "type": "object",
            "xml": {
                "name": "ContactPerson"
            },
            "additionalProperties": false,
            "description": "List of Contact persons. List in Medius will be deleted and new entrie(s) in this batch will be added.",
            "required": [
                "type"
            ],
            "properties": {
                "firstName": {
                    "type": "string",
                    "xml": {
                        "name": "FirstName"
                    },
                    "maxLength": 60,
                    "description": "First name of Contact person."
                },
                "lastName": {
                    "type": "string",
                    "xml": {
                        "name": "LastName"
                    },
                    "maxLength": 60,
                    "description": "Last name of Contact person."
                },
                "streetAddress": {
                    "type": "string",
                    "xml": {
                        "name": "StreetAddress"
                    },
                    "maxLength": 450,
                    "description": "Street address."
                },
                "city": {
                    "type": "string",
                    "xml": {
                        "name": "City"
                    },
                    "maxLength": 450,
                    "description": "City"
                },
                "zip": {
                    "type": "string",
                    "xml": {
                        "name": "Zip"
                    },
                    "maxLength": 450,
                    "description": "Zip."
                },
                "country": {
                    "type": "string",
                    "xml": {
                        "name": "Country"
                    },
                    "maxLength": 450,
                    "description": "Country."
                },
                "telephone": {
                    "type": "string",
                    "xml": {
                        "name": "Telephone"
                    },
                    "maxLength": 450,
                    "description": "Telephone."
                },
                "fax": {
                    "type": "string",
                    "xml": {
                        "name": "Fax"
                    },
                    "maxLength": 450,
                    "description": "Fax."
                },
                "homepage": {
                    "type": "string",
                    "xml": {
                        "name": "Homepage"
                    },
                    "maxLength": 450,
                    "description": "Home page."
                },
                "email": {
                    "type": "string",
                    "xml": {
                        "name": "Email"
                    },
                    "maxLength": 450,
                    "description": "E-mail address."
                },
                "state": {
                    "type": "string",
                    "xml": {
                        "name": "State"
                    },
                    "maxLength": 450,
                    "description": "State."
                },
                "type": {
                    "type": "string",
                    "xml": {
                        "name": "Type"
                    },
                    "description": "Type of Contact person",
                    "enum": [
                        "AdjustmentRequest",
                        "Order",
                        "Short Payment"
                    ]
                }
            }
        },
        "SupplierExportPageDto": {
            "type": "object",
            "xml": {
                "name": "SupplierPage"
            },
            "additionalProperties": false,
            "required": [
                "offset",
                "limit",
                "total"
            ],
            "properties": {
                "suppliers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Suppliers"
                    },
                    "items": {
                        "$ref": "#/definitions/SupplierDto"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Offset"
                    }
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Limit"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Total"
                    }
                },
                "paging": {
                    "$ref": "#/definitions/Paging"
                }
            }
        },
        "SupplierDto": {
            "type": "object",
            "xml": {
                "name": "Supplier"
            },
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    }
                },
                "supplierId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierId"
                    }
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    }
                },
                "paymentTermId": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTermId"
                    }
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    }
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    }
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    }
                },
                "companyName": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyName"
                    }
                },
                "companyGlobalId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyGlobalId"
                    }
                },
                "streetAddress": {
                    "type": "string",
                    "xml": {
                        "name": "StreetAddress"
                    }
                },
                "zip": {
                    "type": "string",
                    "xml": {
                        "name": "Zip"
                    }
                },
                "city": {
                    "type": "string",
                    "xml": {
                        "name": "City"
                    }
                },
                "country": {
                    "type": "string",
                    "xml": {
                        "name": "Country"
                    }
                },
                "email": {
                    "type": "string",
                    "xml": {
                        "name": "Email"
                    }
                },
                "fax": {
                    "type": "string",
                    "xml": {
                        "name": "Fax"
                    }
                },
                "state": {
                    "type": "string",
                    "xml": {
                        "name": "State"
                    }
                },
                "telephone": {
                    "type": "string",
                    "xml": {
                        "name": "Telephone"
                    }
                },
                "homepage": {
                    "type": "string",
                    "xml": {
                        "name": "Homepage"
                    }
                },
                "mediusFlowSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "MediusFlowSystemId"
                    }
                },
                "identifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Identifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/IdentifierDto"
                    }
                },
                "paymentDetails": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "PaymentDetails"
                    },
                    "items": {
                        "$ref": "#/definitions/PaymentDetailsDto"
                    }
                },
                "globalId": {
                    "type": "string",
                    "xml": {
                        "name": "GlobalId"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/MasterDataDto"
                }
            ]
        },
        "PaymentDetailsDto": {
            "type": "object",
            "xml": {
                "name": "PaymentDetails"
            },
            "additionalProperties": false,
            "required": [
                "isActive",
                "default"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "xml": {
                        "name": "Description"
                    }
                },
                "identifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Identifiers"
                    },
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "String"
                        }
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "paymentDetailId": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetailId"
                    }
                },
                "default": {
                    "type": "boolean",
                    "xml": {
                        "name": "Default"
                    }
                }
            }
        },
        "IntegrationSupplierDto": {
            "type": "object",
            "xml": {
                "name": "Supplier"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "companyId",
                "currencyCode",
                "isActive",
                "isProcurable",
                "name",
                "paymentTerm",
                "supplierId"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "identifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Identifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationSupplierIdentifierDto"
                    }
                },
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    },
                    "maxLength": 450,
                    "description": "Supplier name"
                    
                },
                "paymentTerm": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTerm"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "deliveryTerm": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryTerm"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "supplierId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierId"
                    },
                    "maxLength": 100,
                    "description": "SupplierId in ERP"
                },
                "ledgerDimension1": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 1 for ledger entry coding"
                },
                "ledgerDimension2": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension2"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 2 for ledger entry coding"
                },
                "ledgerDimension3": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension3"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 3 for ledger entry coding"
                },
                "ledgerDimension4": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension4"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 4 for ledger entry coding"
                },
                "ledgerDimension5": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension5"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 5 for ledger entry coding"
                },
                "ledgerDimension6": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension6"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 6 for ledger entry coding"
                },
                "ledgerDimension7": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension7"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 7 for ledger entry coding"
                },
                "ledgerDimension8": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension8"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 8 for ledger entry coding"
                },
                "ledgerDimension9": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension9"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 9 for ledger entry coding"
                },
                "ledgerDimension10": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension10"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 10 for ledger entry coding"
                },
                "ledgerDimension11": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension11"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 11 for ledger entry coding"
                },
                "ledgerDimension12": {
                    "type": "string",
                    "xml": {
                        "name": "LedgerDimension12"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 12 for ledger entry coding"
                },
                "taxDimension1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 1 for tax coding"
                },
                "taxDimension2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension2"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 2 for tax coding"
                },
                "taxDimension3": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension3"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 3 for tax coding"
                },
                "taxDimension4": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension4"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 4 for tax coding"
                },
                "taxDimension5": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension5"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 5 for tax coding"
                },
                "taxDimension6": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension6"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 6 for tax coding"
                },
                "taxDimension7": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension7"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 7 for tax coding"
                },
                "taxDimension8": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension8"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 8 for tax coding"
                },
                "taxDimension9": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension9"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 9 for tax coding"
                },
                "taxDimension10": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension10"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 10 for tax coding"
                },
                "taxDimension11": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension11"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 11 for tax coding"
                },
                "taxDimension12": {
                    "type": "string",
                    "xml": {
                        "name": "TaxDimension12"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Pre coding dimension 12 for tax coding"
                },
                "clearance1Dimension1": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 1 value for clearance coding 1"
                },
                "clearance1Dimension2": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension2"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 2 value for clearance coding 1"
                },
                "clearance1Dimension3": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension3"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 3 value for clearance coding 1"
                },
                "clearance1Dimension4": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension4"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 4 value for clearance coding 1"
                },
                "clearance1Dimension5": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension5"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 5 value for clearance coding 1"
                },
                "clearance1Dimension6": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension6"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 6 value for clearance coding 1"
                },
                "clearance1Dimension7": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension7"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 7 value for clearance coding 1"
                },
                "clearance1Dimension8": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension8"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 8 value for clearance coding 1"
                },
                "clearance1Dimension9": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension9"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 9 value for clearance coding 1"
                },
                "clearance1Dimension10": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension10"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 10 value for clearance coding 1"
                },
                "clearance1Dimension11": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension11"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 11 value for clearance coding 1"
                },
                "clearance1Dimension12": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance1Dimension12"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 12 value for clearance coding 1"
                },
                "clearance2Dimension1": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 1 value for clearance coding 2"
                },
                "clearance2Dimension2": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension2"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 2 value for clearance coding 2"
                },
                "clearance2Dimension3": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension3"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 3 value for clearance coding 2"
                },
                "clearance2Dimension4": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension4"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 4 value for clearance coding 2"
                },
                "clearance2Dimension5": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension5"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 5 value for clearance coding 2"
                },
                "clearance2Dimension6": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension6"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 6 value for clearance coding 2"
                },
                "clearance2Dimension7": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension7"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 7 value for clearance coding 2"
                },
                "clearance2Dimension8": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension8"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 8 value for clearance coding 2"
                },
                "clearance2Dimension9": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension9"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 9 value for clearance coding 2"
                },
                "clearance2Dimension10": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension10"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 10 value for clearance coding 2"
                },
                "clearance2Dimension11": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension11"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 11 value for clearance coding 2"
                },
                "clearance2Dimension12": {
                    "type": "string",
                    "xml": {
                        "name": "Clearance2Dimension12"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Dimension 12 value for clearance coding 2"
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity (Taxgroup). Only in use if TaxDimensions not provided and Medius configured to code on taxcodes"
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity (Taxgroup). Only in use if TaxDimensions not provided and Medius configured to code on taxcodes"
                },
                "streetAddress": {
                    "type": "string",
                    "xml": {
                        "name": "StreetAddress"
                    },
                    "maxLength": 450,
                    "description": "StreetAddress"
                },
                "city": {
                    "type": "string",
                    "xml": {
                        "name": "City"
                    },
                    "maxLength": 450,
                    "description": "City"
                },
                "zip": {
                    "type": "string",
                    "xml": {
                        "name": "Zip"
                    },
                    "maxLength": 450,
                    "description": "Zip"
                },
                "country": {
                    "type": "string",
                    "xml": {
                        "name": "Country"
                    },
                    "maxLength": 450,
                    "description": "Country"
                },
                "telephone": {
                    "type": "string",
                    "xml": {
                        "name": "Telephone"
                    },
                    "maxLength": 450,
                    "description": "Telephone"
                },
                "fax": {
                    "type": "string",
                    "xml": {
                        "name": "Fax"
                    },
                    "maxLength": 450,
                    "description": "Fax"
                },
                "homepage": {
                    "type": "string",
                    "xml": {
                        "name": "Homepage"
                    },
                    "maxLength": 450,
                    "description": "Homepage"
                },
                "emailAddress": {
                    "type": "string",
                    "xml": {
                        "name": "EmailAddress"
                    },
                    "maxLength": 450,
                    "description": "EmailAddress"
                },
                "state": {
                    "type": "string",
                    "xml": {
                        "name": "State"
                    },
                    "maxLength": 450,
                    "description": "State"
                },
                "isProcurable": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsProcurable"
                    },
                    "description": "If the supplier is to be used by the Medius Buy module. Default value 1"
                },
                "prepayment": {
                    "type": "boolean",
                    "xml": {
                        "name": "Prepayment"
                    },
                    "description": "If the supplier is to be used for pre payment"
                },
                "paymentDetails": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "PaymentDetails"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationPaymentDetailsDto"
                    }
                }
            }
        },
        "IntegrationSupplierIdentifierDto": {
            "type": "object",
            "xml": {
                "name": "SupplierIdentifier"
            },
            "additionalProperties": false,
            "required": [
                "identifierType",
                "identifierValue"
            ],
            "properties": {
                "identifierType": {
                    "type": "string",
                    "xml": {
                        "name": "IdentifierType"
                    },
                    "maxLength": 450,
                    "description": "See list of available values for the identifier type. In GUI they are named differently, e.g. Bank Account for BANK_ACCOUNT.",
                    "enum": [
                        "FINANCIAL_SYSTEM",
                        "PURCHASING_SYSTEM",
                        "BANK_ACCOUNT",
                        "ORGANIZATION_NUMBER",
                        "VAT_REGISTRATION_NUMBER",
                        "EAN_NUMBER",
                        "POSTAL_ACCOUNT",
                        "IBAN_NUMBER",
                        "EXTERNAL_SYSTEM_ID",
                        "SUPPLIER_PORTAL_ID",
                        "OTHER"
                    ]
                },
                "identifierValue": {
                    "type": "string",
                    "xml": {
                        "name": "IdentifierValue"
                    },
                    "maxLength": 450,
                    "description": "Identifier value, e.g. bank account number"
                }
            }
        },
        "IntegrationPaymentDetailsDto": {
            "type": "object",
            "xml": {
                "name": "PaymentDetails"
            },
            "additionalProperties": false,
            "required": [
                "description",
                "externalSystemId",
                "isActive"
            ],
            "properties": {
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "Unique Identifier of payment details in ERP"
                },
                "description": {
                    "type": "string",
                    "xml": {
                        "name": "Description"
                    },
                    "maxLength": 450,
                    "description": "User-presented description of payment details"
                },
                "paymentDetailId": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetailId"
                    },
                    "maxLength": 450,
                    "description": "PaymentDetail Id in ERP"
                },
                "identifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Identifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationPaymentDetailsIdentifierDto"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    }
                },
                "default": {
                    "type": "boolean",
                    "xml": {
                        "name": "Default"
                    },
                    "description": "Possible to set default payment detail"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                }
            }
        },
        "IntegrationPaymentDetailsIdentifierDto": {
            "type": "object",
            "xml": {
                "name": "PaymentDetailsIdentifier"
            },
            "additionalProperties": false,
            "required": [
                "value"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "value": {
                    "type": "string",
                    "xml": {
                        "name": "Value"
                    },
                    "maxLength": 450,
                    "description": "Identifier of payment details that would be matched with information on invoice"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "Unique Identifier of payment details in ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                }
            }
        },
        "ImportDocumentStatusDto": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "status": {
                    "type": "string",
                    "xml": {
                        "name": "Status"
                    }
                },
                "finalDocumentId": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "FinalDocumentId"
                    }
                }
            }
        },
        "ImportDocumentSupplierInvoiceFile" : {
            "type": "string",
            "xml":{
                "wrapped": true,
                "name": "Invoice",
                "namespace": "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
            }
        },
        "InvoiceRequestDto": {
            "type": "object",
            "xml": {
                "name": "SupplierInvoice"
            },
            "additionalProperties": false,
            "properties": {
                "correlationKey": {
                    "type": "string",
                    "xml": {
                        "name": "CorrelationKey"
                    }
                },
                "invoice": {
                    "$ref": "#/definitions/IntegrationSupplierInvoiceDto"
                },
                "tag": {
                    "type": "string",
                    "xml": {
                        "name": "Tag"
                    }
                }
            }
        },
        "IntegrationSupplierInvoiceDto": {
            "type": "object",
            "xml": {
                "name": "Invoice"
            },
            "additionalProperties": false,
            "required": [
                "documentId",
                "currencyRate",
                "isCurrencyRateImported",
                "hasCrossCompanyPostings",
                "invoiceDate",
                "netAmount",
                "roundingAmount",
                "taxAmount",
                "totalAmount",
                "totalCodedNetAmount",
                "totalCodedTaxAmount",
                "isPaymentBlocked"
            ],
            "properties": {
                "importedOrderIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "ImportedOrderIdentifier"
                    },
                    "maxLength": 450,
                    "description": "The order identifier from invoice head"
                },
                "importedOrderIdentifier2": {
                    "type": "string",
                    "xml": {
                        "name": "ImportedOrderIdentifier2"
                    },
                    "maxLength": 450,
                    "description": "The order identifier 2 from invoice head"
                },
                "documentId": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "DocumentId"
                    },
                    "description": "Unique Id to document in Medius"
                },
                "balanceCodeString": {
                    "$ref": "#/definitions/IntegrationBalanceCodeStringDto"
                },
                "companyExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Unique ExternalSystemId to the Company."
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "Unique Company Id."
                },
                "companyName": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyName"
                    },
                    "maxLength": 450,
                    "description": "Name of the Company."
                },
                "companyIdentifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CompanyIdentifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationCompanyIdentifierDto"
                    }
                },
                "companyOrganizationNumber": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyOrganizationNumber"
                    },
                    "maxLength": 100,
                    "description": "Organization number for the Company."
                },
                "connectedAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "ConnectedAmount"
                    },
                    "description": "Total Connected amount on connected purchase orders. Decimal format (28,14)."
                },
                "connectedQuantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "ConnectedQuantity"
                    },
                    "description": "Total connected quantity on connected purchase orders. Decimal format (28,14)."
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    },
                    "maxLength": 10,
                    "description": "ISO Code for currency on invoice."
                },
                "currencyExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to currency code."
                },
                "currencyRate": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CurrencyRate"
                    },
                    "description": "Currency rate. Decimal format (28,14)."
                },
                "isCurrencyRateImported": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsCurrencyRateImported"
                    },
                    "description": "Field determining whether currency rate was imported from invoice on document."
                },
                "hasCrossCompanyPostings": {
                    "type": "boolean",
                    "xml": {
                        "name": "HasCrossCompanyPostings"
                    },
                    "description": "Indicates if CodingLines have different Line companies."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_List1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List1"
                    },
                    "maxLength": 50,
                    "description": "Custom list value of type text."
                },
                "customField_List2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List2"
                    },
                    "maxLength":50,
                    "description": "Custom list value of type text."
                },
                "customField_List3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List3"
                    },
                    "maxLength": 50,
                    "description": "Custom list value of type text."
                },
                "customField_List4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List4"
                    },
                    "maxLength": 50,
                    "description": "Custom list value of type text."
                },
                "customField_List5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List5"
                    },
                    "maxLength": 50,
                    "description": "Custom list value of type text."
                },
                "companyCustomField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CompanyCustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "companyCustomField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CompanyCustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "companyCustomField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CompanyCustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "companyCustomField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CompanyCustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "companyCustomField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CompanyCustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "companyCustomField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CompanyCustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "companyCustomField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CompanyCustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "companyCustomField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CompanyCustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "companyCustomField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CompanyCustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "companyCustomField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CompanyCustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "companyCustomField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyCustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "companyCustomField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyCustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "companyCustomField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyCustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "companyCustomField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyCustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "companyCustomField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyCustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "companyCustomField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CompanyCustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "companyCustomField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CompanyCustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "companyCustomField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CompanyCustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "companyCustomField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CompanyCustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "companyCustomField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CompanyCustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "supplierCustomField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "SupplierCustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "supplierCustomField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "SupplierCustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "supplierCustomField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "SupplierCustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "supplierCustomField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "SupplierCustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "supplierCustomField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "SupplierCustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "supplierCustomField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "SupplierCustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "supplierCustomField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "SupplierCustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "supplierCustomField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "SupplierCustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "supplierCustomField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "SupplierCustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "supplierCustomField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "SupplierCustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "supplierCustomField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierCustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "supplierCustomField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierCustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "supplierCustomField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierCustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "supplierCustomField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierCustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "supplierCustomField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierCustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "supplierCustomField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "SupplierCustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "supplierCustomField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "SupplierCustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "supplierCustomField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "SupplierCustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "supplierCustomField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "SupplierCustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "supplierCustomField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "SupplierCustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "supplierCountry": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierCountry"
                    },
                    "maxLength": 450,
                    "description": "Supplier country."
                },
                "supplierState": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierState"
                    },
                    "maxLength": 450,
                    "description": "Supplier state."
                },
                "originalDocumentType": {
                    "type": "string",
                    "xml": {
                        "name": "OriginalDocumentType"
                    },
                    "maxLength": 450,
                    "description": "Type of document.",
                    "enum": [
                        "EXPENSE",
                        "ORDER_BASED",
                        "CONTRACT_BASED",
                        "PAYMENT_REQUEST"
                    ]
                },
                "dueDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DueDate"
                    },
                    "description": "Due date."
                },
                "finalBookingDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "FinalBookingDate"
                    },
                    "description": "Final booking date."
                },
                "imagePath": {
                    "type": "string",
                    "xml": {
                        "name": "ImagePath"
                    },
                    "maxLength": 450,
                    "description": "URL to invoice image. Requires user to be logged in to Medius to access the image."
                },
                "imageUNCPath": {
                    "type": "string",
                    "xml": {
                        "name": "ImageUNCPath"
                    },
                    "maxLength": 450,
                    "description": "Only available for on-premise installations."
                },
                "documentURL": {
                    "type": "string",
                    "xml": {
                        "name": "DocumentURL"
                    },
                    "maxLength": 450,
                    "description": "URL to document in Medius. User will be redirected to login page if not already logged in."
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "InvoiceDate"
                    },
                    "description": "Invoice date."
                },
                "invoiceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceNumber"
                    },
                    "maxLength": 450,
                    "description": "Invoice number."
                },
                "netAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "NetAmount"
                    },
                    "description": "Invoice total NET amount. Decimal format (28,14)."
                },
                "paymentTerm": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentTerm"
                    },
                    "maxLength": 100,
                    "description": "Payment term from Supplier."
                },
                "preferredPaymentDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "PreferredPaymentDate"
                    },
                    "description": "Invoice preferred payment date."
                },
                "preliminaryBookingDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "PreliminaryBookingDate"
                    },
                    "description": "Invoice preliminary booking date."
                },
                "preliminaryVoucherNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PreliminaryVoucherNumber"
                    },
                    "maxLength": 450,
                    "description": "Voucher number from preliminary booking. Empty if the booking is a preliminary or direct booking."
                },
                "finalVoucherNumber": {
                    "type": "string",
                    "xml": {
                        "name": "FinalVoucherNumber"
                    },
                    "maxLength": 450,
                    "description": "Voucher number from final booking."
                },
                "roundingAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "RoundingAmount"
                    },
                    "description": "Imported rounding amount. Decimal format (28,14)."
                },
                "supplierExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId for the supplier."
                },
                "supplierId": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierId"
                    },
                    "maxLength": 450,
                    "description": "Id for the Supplier."
                },
                "supplierIdentifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "SupplierIdentifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationSupplierIdentifierDto"
                    }
                },
                "supplierName": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierName"
                    },
                    "maxLength": 450,
                    "description": "Name of the Supplier."
                },
                "invoiceReference": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceReference"
                    },
                    "maxLength": 450,
                    "description": "Invoice reference from invoice."
                },
                "paymentReference": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentReference"
                    },
                    "maxLength": 450,
                    "description": "Payment reference from Invoice."
                },
                "taxAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "TaxAmount"
                    },
                    "description": "Invoice total tax amount (imported value). Decimal format (28,14)."
                },
                "taxIndicator": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator"
                    },
                    "maxLength": 450,
                    "description": "Tax group from invoice."
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    },
                    "maxLength": 450,
                    "description": "Tax indicator 2 from invoice."
                },
                "supplierTaxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierTaxIndicator1"
                    },
                    "maxLength": 450,
                    "description": "Tax indicator 1 from invoice's supplier."
                },
                "supplierTaxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "SupplierTaxIndicator2"
                    },
                    "maxLength": 450,
                    "description": "Tax indicator 2 from invoice's supplier."
                },
                "totalAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "TotalAmount"
                    },
                    "description": "Invoice total amount incl. tax."
                },
                "totalCodedNetAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "TotalCodedNetAmount"
                    },
                    "description": "Total coded NET amount. Decimal format (28,14)."
                },
                "totalCodedTaxAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "TotalCodedTaxAmount"
                    },
                    "description": "Total coded TAX amount. Decimal format (28,14)."
                },
                "preliminaryPeriodExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "PreliminaryPeriodExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "ExternalSystemId to the preliminary period used. Empty if direct booking."
                },
                "preliminaryPeriodName": {
                    "type": "string",
                    "xml": {
                        "name": "PreliminaryPeriodName"
                    },
                    "maxLength": 450,
                    "description": "Name of the preliminary period. Empty if direct booking."
                },
                "finalPeriodName": {
                    "type": "string",
                    "xml": {
                        "name": "FinalPeriodName"
                    },
                    "maxLength": 450,
                    "description": "Name of the Final period."
                },
                "finalPeriodExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "FinalPeriodExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "ExternalSystemId to the final period used."
                },
                "invoiceLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "InvoiceLines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationSupplierInvoiceLineDto"
                    }
                },
                "codingLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CodingLines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationCodingLineDto"
                    }
                },
                "taxLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "TaxLines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationTaxLineDto"
                    }
                },
                "poLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "POLines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationPurchaseOrderLineInformationDto"
                    }
                },
                "poConnectionLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "POConnectionLines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationPurchaseOrderLineConnectionDto"
                    }
                },
                "deviationLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "DeviationLines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationDeviationLineDto"
                    }
                },
                "exceptionTypeConnections": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "ExceptionTypeConnections"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationExceptionTypeConnectionDto"
                    }
                },
                "orderType": {
                    "type": "string",
                    "xml": {
                        "name": "OrderType"
                    },
                    "maxLength": 450,
                    "description": "Type of connected purchase order(s). Internal - when connected POs are from Procurement module, External - when connected POs are imported from ERP, Mixed - when connected to Pos from different sources."
                },
                "isPaymentBlocked": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsPaymentBlocked"
                    },
                    "description": "If the invoice should be blocked for payment."
                },
                "paymentDetailsExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetailsExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "ExternalSystemId of PaymentDetails connected with invoice. Can be empty if the PaymentDetails is not used or not found (and configured to allow empty)."
                },
                "paymentDetailId": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetailId"
                    },
                    "maxLength": 450,
                    "description": "PaymentDetailId of PaymentDetails connected with invoice. Can be empty if the PaymentDetails is not used or not found (and configured to allow empty)."
                },
                "paymentDetailCustomField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "PaymentDetailCustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "paymentDetailCustomField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "PaymentDetailCustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "paymentDetailCustomField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "PaymentDetailCustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "paymentDetailCustomField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "PaymentDetailCustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "paymentDetailCustomField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "PaymentDetailCustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "paymentDetailCustomField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "PaymentDetailCustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "paymentDetailCustomField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "PaymentDetailCustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "paymentDetailCustomField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "PaymentDetailCustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "paymentDetailCustomField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "PaymentDetailCustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "paymentDetailCustomField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "PaymentDetailCustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "paymentDetailCustomField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetailCustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "paymentDetailCustomField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetailCustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "paymentDetailCustomField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetailCustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "paymentDetailCustomField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetailCustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "paymentDetailCustomField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetailCustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "paymentDetailCustomField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "PaymentDetailCustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "paymentDetailCustomField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "PaymentDetailCustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "paymentDetailCustomField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "PaymentDetailCustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "paymentDetailCustomField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "PaymentDetailCustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "paymentDetailCustomField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "PaymentDetailCustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "erpId": {
                    "type": "string",
                    "xml": {
                        "name": "ERPId"
                    },
                    "maxLength": 450,
                    "description": "ERPId from company setting."
                },
                "paymentRequestInstruction": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentRequestInstruction"
                    },
                    "maxLength": 450,
                    "description": "Instructions from the payment request. Only available for Payment request."
                },
                "paymentRequestMailToAddress": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentRequestMailToAddress"
                    },
                    "maxLength": 450,
                    "description": "Mail to address for payment request. Only available for Payment request."
                },
                "cashDiscountDueDate1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CashDiscountDueDate1"
                    },
                    "description": "Used when Cash Discount is available from the Payment term."
                },
                "cashDiscountDueDate2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CashDiscountDueDate2"
                    },
                    "description": "Used when Cash Discount is available from the Payment term."
                },
                "receivedDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "ReceivedDate"
                    },
                    "description": "Date when an invoice arrived."
                },
                "vatDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "VatDate"
                    },
                    "description": "VAT date for an invoice, for example, the date when goods have been received or a service has started."
                }
            }
        },
        "IntegrationBalanceCodeStringDto": {
            "type": "object",
            "xml": {
                "name": "BalanceCodeString"
            },
            "additionalProperties": false,
            "required": [
                "amount"
            ],
            "properties": {
                "dimensions": {
                    "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    }
                }
            }
        },
        "IntegrationSupplierInvoiceLineDto": {
            "type": "object",
            "xml": {
                "name": "InvoiceLine"
            },
            "additionalProperties": false,
            "required": [
                "amount",
                "lineNumber",
                "quantity",
                "unitPrice"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "Imported invoice line amount. Decimal format (28,14)."
                },
                "itemDescription": {
                    "type": "string",
                    "xml": {
                        "name": "ItemDescription"
                    },
                    "maxLength": 450,
                    "description": "Imported invoice line item description."
                },
                "itemNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ItemNumber"
                    },
                    "maxLength": 450,
                    "description": "Imported invoice line item number."
                },
                "lineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "LineNumber"
                    },
                    "description": "Counter for Line number. Serial number, starts with 1."
                },
                "quantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Quantity"
                    },
                    "description": "Imported invoice line quantity."
                },
                "quantityUnit": {
                    "type": "string",
                    "xml": {
                        "name": "QuantityUnit"
                    },
                    "maxLength": 450,
                    "description": "Imported invoice line quantity unit description."
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    },
                    "description": "Imported invoice line unit price."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                }
            }
        },
        "IntegrationCodingLineDto": {
            "type": "object",
            "xml": {
                "name": "CodingLine"
            },
            "additionalProperties": false,
            "required": [
                "amount",
                "grossAmount",
                "codingLineNumber",
                "isEnabled"
            ],
            "properties": {
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 450,
                    "description": "Only used with CrossCompanyPosting feature. CompanyId for company connected to coding line."
                },
                "companyExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "Only used with CrossCompanyPosting feature. ExternalSystemId for company connected to coding line."
                },
                "accrual": {
                    "$ref": "#/definitions/IntegrationAccrualInformationDto"
                },
                "dimensions": {
                    "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "Coded NET amount. Decimal format (28,14)."
                },
                "grossAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "GrossAmount"
                    },
                    "description": "Coded Gross amount. Decimal format (28,14)."
                },
                "invoiceLineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "InvoiceLineNumber"
                    },
                    "description": "Connected invoice line number. Reference value can be found in IntegrationSupplierInvoiceLineDto. Can be NULL if no connection to invoice line."
                },
                "codingLineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "CodingLineNumber"
                    },
                    "description": "Id reference to this specific coding line."
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Only in use if Medius is configured to code on tax codes and if TaxDimensions not provided."
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Only in use if Medius is configured to code on tax codes and if TaxDimensions not provided."
                },
                "isEnabled": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsEnabled"
                    },
                    "description": "If the coding line is enabled in user UI or not."
                },
                "tag": {
                    "type": "string",
                    "xml": {
                        "name": "Tag"
                    },
                    "maxLength": 450,
                    "description": "Type of coding line.",
                    "enum": [
                        "Cost",
                        "ExceptionType",
                        "CostBalancing",
                        "Clearance",
                        "ExceptionTypeAutoApproved",
                        "DeviationUnitPrice",
                        "DeviationQuantity",
                        "DeviationLineTotal",
                        "DeviationNetAmount",
                        "DeviationUnitPriceWithinTolerance",
                        "DeviationQuantityWithinTolerance",
                        "DeviationLineTotalWithinTolerance",
                        "DeviationNetAmountWithinTolerance",
                        "DeviationLineTotalApproved",
                        "DeviationLineTotalRejected",
                        "DeviationUnitPriceApproved",
                        "DeviationUnitPriceRejected",
                        "DeviationQuantityApproved",
                        "DeviationQuantityRejected",
                        "DeviationNetAmountApproved",
                        "DeviationNetAmountRejected",
                        "DeviationExceptionType",
                        "DeviationExceptionTypeApproved",
                        "DeviationExceptionTypeRejected",
                        "ItemCharge",
                        "Tax",
                        "RejectedWithShortPayment"
                    ]
                },
                "poConnectionLineNumbers": {
                    "type": "array",
                    "description": "List of connected purchase order line connections.",
                    "xml": {
                        "wrapped": true,
                        "name": "POConnectionLineNumbers"
                    },
                    "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Reference to LineNumber in POConnectionLines.",
                        "xml": {
                            "name": "int"
                        }
                    }
                },
                "lastApproverFirstName": {
                    "type": "string",
                    "xml": {
                        "name": "LastApproverFirstName"
                    },
                    "maxLength": 120,
                    "description": "First name of the person who made the last approval on given coding line in Medius."
                },
                "lastApproverLastName": {
                    "type": "string",
                    "xml": {
                        "name": "LastApproverLastName"
                    },
                    "maxLength": 120,
                    "description": "Last name of the person who made the last approval on given coding line in Medius."
                },
                "lastApproverUserName": {
                    "type": "string",
                    "xml": {
                        "name": "LastApproverUserName"
                    },
                    "maxLength": 120,
                    "description": "User name of the person who made the last approval on given coding line in Medius."
                }
            }
        },
        "IntegrationAccrualInformationDto": {
            "type": "object",
            "xml": {
                "name": "Accrual"
            },
            "additionalProperties": false,
            "required": [
                "numberOfPeriods",
                "startDate",
                "useLinesWithAccrualPeriods"
            ],
            "properties": {
                "accrualTemplateId": {
                    "type": "string",
                    "xml": {
                        "name": "AccrualTemplateId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity."
                },
                "dimensions": {
                    "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                },
                "numberOfPeriods": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "NumberOfPeriods"
                    },
                    "description": "Number of periods."
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "StartDate"
                    },
                    "description": "Start date of the accruals."
                },
                "accrualPeriods": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "AccrualPeriods"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationAccrualPeriodDto"
                    }
                },
                "accrualErpIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "AccrualErpIdentifier"
                    },
                    "maxLength": 100,
                    "description": "ERPIdentifier to corresponding entity."
                },
                "useLinesWithAccrualPeriods": {
                    "type": "boolean",
                    "xml": {
                        "name": "UseLinesWithAccrualPeriods"
                    },
                    "description": "If true, accrual periods are specified manually. If false, only NumberOfPeriods will be provided."
                }
            }
        },
        "IntegrationAccrualPeriodDto": {
            "type": "object",
            "xml": {
                "name": "AccrualPeriod"
            },
            "additionalProperties": false,
            "required": [
                "period",
                "percentage"
            ],
            "properties": {
                "period": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "Period"
                    },
                    "description": "Number of the period."
                },
                "percentage": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Percentage"
                    },
                    "description": "Percentage of the period."
                }
            }
        },
        "IntegrationTaxLineDto": {
            "type": "object",
            "xml": {
                "name": "TaxLine"
            },
            "additionalProperties": false,
            "required": [
                "amount",
                "taxLineNumber"
            ],
            "properties": {
                "dimensions": {
                    "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "Tax amount. Decimal format (28,14)."
                },
                "netAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "NetAmount"
                    },
                    "description": "Net amount for this Tax line. Decimal format (28,14)."
                },
                "grossAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "GrossAmount"
                    },
                    "description": "Gross amount for this Tax line. Decimal format (28,14)."
                },
                "codingLineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "CodingLineNumber"
                    },
                    "description": "Connection to Coding line. Only available if tax codes are used in coding."
                },
                "deductiblePercentage": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeductiblePercentage"
                    },
                    "description": "Tax code deductible percentage. Decimal format (19,5)."
                },
                "percentage": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Percentage"
                    },
                    "description": "Tax code percentage. Decimal format (19,5)."
                },
                "taxCode": {
                    "type": "string",
                    "xml": {
                        "name": "TaxCode"
                    },
                    "maxLength": 100,
                    "description": "Tax code."
                },
                "taxLineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "TaxLineNumber"
                    },
                    "description": "Counter for Tax line number. Serial number, starts with 1."
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Only in use if given tax line originates from certain tax group."
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity. Only in use if given tax line originates from certain tax group and that 2 tax indicators is in use."
                }
            }
        },
        "IntegrationPurchaseOrderLineInformationDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderLineInformation"
            },
            "additionalProperties": false,
            "required": [
                "lineNumber",
                "conversionFactor",
                "quantity",
                "unitPrice",
                "isTwoWayMatch"
            ],
            "properties": {
                "lineNumber": {
                    "type": "integer",
                    "format": "int32", 
                    "xml": {
                        "name": "LineNumber"
                    },
                    "description": "Counter for Purchase order line. Serial number, starts with 1."
                },
                "purchaseOrderNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PurchaseOrderNumber"
                    },
                    "maxLength": 300,
                    "description": "Purchase order number for the given line."
                },
                "purchaseOrderNumber2": {
                    "type": "string",
                    "xml": {
                        "name": "PurchaseOrderNumber2"
                    },
                    "maxLength": 450,
                    "description": "Purchase order number 2 for the given line."
                },
                "purchaseOrderLineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PurchaseOrderLineNumber"
                    },
                    "maxLength": 450,
                    "description": "Purchase order line number for the given line."
                },
                "itemNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ItemNumber"
                    },
                    "maxLength": 450,
                    "description": "Item number for the given line."
                },
                "itemDescription": {
                    "type": "string",
                    "xml": {
                        "name": "ItemDescription"
                    },
                    "maxLength": 450,
                    "description": "Item description."
                },
                "conversionFactor": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "ConversionFactor"
                    },
                    "description": "Conversion factor for unit price and quantity."
                },
                "quantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Quantity"
                    },
                    "description": "Purchase order line quantity. Decimal format (28,14)."
                },
                "unit": {
                    "type": "string",
                    "xml": {
                        "name": "Unit"
                    },
                    "maxLength": 100,
                    "description": "Unit of measure for the purchase order line."
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    },
                    "description": "Purchase order line unit price. Decimal format (28,14)."
                },
                "reference": {
                    "type": "string",
                    "xml": {
                        "name": "Reference"
                    },
                    "maxLength": 450,
                    "description": "Purchase order line reference."
                },
                "orderType": {
                    "type": "string",
                    "xml": {
                        "name": "OrderType"
                    },
                    "maxLength": 450,
                    "description": "Type of connected purchase order line. Internal - when connected line are from Procurement module, External - when connected line are imported from ERP."
                },
                "isTwoWayMatch": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsTwoWayMatch"
                    },
                    "description": "Indicates if the purchase order line is two way match or not."
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "ExternalSystemId to indicated purchase order line."
                },
                "externalPurchaseOrderLineNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalPurchaseOrderLineNumber"
                    },
                    "maxLength": 450,
                    "description": "Used with Procurement module. Purchase order line number from external system. Fetched from the procurement purchase order."
                },
                "isSynchronizedWithExternalSystem": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsSynchronizedWithExternalSystem"
                    },
                    "description": "Used with Procurement module. Indicates that the purchase order has been synchronized with external system."
                },
                "purchaseOrderExternalSystemMetadata": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "PurchaseOrderExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                },
                "purchaseOrderLineExternalSystemMetadata": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "PurchaseOrderLineExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                }
            }
        },
        "IntegrationPurchaseOrderLineConnectionDto": {
            "type": "object",
            "xml": {
                "name": "PurchaseOrderLineConnection"
            },
            "additionalProperties": false,
            "required": [
                "connectedAmount",
                "connectedQuantity",
                "conversionFactor",
                "isManual",
                "lineNumber",
                "purchaseOrderLineNumber",
                "deliveryLineIsFictive"
            ],
            "properties": {
                "connectedAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "ConnectedAmount"
                    },
                    "description": "Connected Quantity * Connected UnitPrice. Decimal format (28,14)."
                },
                "connectedQuantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "ConnectedQuantity"
                    },
                    "description": "Connected quantity between delivery line and invoice line. Decimal format (28,14)."
                },
                "connectionLevel": {
                    "type": "string",
                    "xml": {
                        "name": "ConnectionLevel"
                    },
                    "description": "Determines on what level the connection was made. Values:[LineDetail, LineTotal, Head, LineItemCharge, LineServiceBased]" 
                },
                "conversionFactor": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "ConversionFactor"
                    },
                    "description": "Conversion factor for unit price and quantity from delivery line. Constant '1' if no delivery exists. Decimal format (19,5)."
                },
                "deliveredQuantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeliveredQuantity"
                    },
                    "description": "Delivered quantity. Can be NULL if no delivery exists. Decimal format (28,14)."
                },
                "deliveredAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeliveredAmount"
                    },
                    "description": "Delivered amount. Can be NULL if no delivery exists. Decimal format (28,14)."
                },
                "deliveredUnitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeliveredUnitPrice"
                    },
                    "description": "Delivered unit price. Can be NULL if no delivery exists. Decimal format (28,14)."
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DeliveryDate"
                    },
                    "description": "Delivery date. Can be NULL if no delivery exists."
                },
                "deliveryNote": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNote"
                    },
                    "maxLength": 450,
                    "description": "Delivery note. Empty if no delivery exists."
                },
                "deliveryNumber": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNumber"
                    },
                    "maxLength": 450,
                    "description": "Delivery number. Empty if no delivery exists."
                },
                "releaseNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ReleaseNumber"
                    },
                    "maxLength": 450,
                    "description": "Release number. Empty if no delivery exists."
                },
                "invoiceLineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "InvoiceLineNumber"
                    },
                    "description": "Reference to connected invoice line number."
                },
                "isManual": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsManual"
                    },
                    "description": "Determines if the line was system created or user created."
                },
                "lineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "LineNumber"
                    },
                    "description": "Counter for Purchase order line connection. Serial number, starts with 1."
                },
                "purchaseOrderLineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "PurchaseOrderLineNumber"
                    },
                    "description": "Reference to connected purchase order line number."
                },
                "transactionDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "TransactionDate"
                    },
                    "description": "Transaction date. Can be null if no delivery exists."
                },
                "codingLineNumbers": {
                    "type": "array",
                    "description": "List of connected coding lines.",
                    "xml": {
                        "wrapped": true,
                        "name": "CodingLineNumbers"
                    },
                    "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Reference to connected coding line number.",
                        "xml": {
                            "name": "int"
                        }
                    }
                },
                "deliveryLineCustomField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "DeliveryLineCustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "deliveryLineCustomField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "DeliveryLineCustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "deliveryLineCustomField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "DeliveryLineCustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "deliveryLineCustomField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "DeliveryLineCustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "deliveryLineCustomField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "DeliveryLineCustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "deliveryLineCustomField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeliveryLineCustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "deliveryLineCustomField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeliveryLineCustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "deliveryLineCustomField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeliveryLineCustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "deliveryLineCustomField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeliveryLineCustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "deliveryLineCustomField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeliveryLineCustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "deliveryLineCustomField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryLineCustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "deliveryLineCustomField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryLineCustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "deliveryLineCustomField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryLineCustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "deliveryLineCustomField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryLineCustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "deliveryLineCustomField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryLineCustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "deliveryLineCustomField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DeliveryLineCustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "deliveryLineCustomField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DeliveryLineCustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "deliveryLineCustomField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DeliveryLineCustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "deliveryLineCustomField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DeliveryLineCustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "deliveryLineCustomField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DeliveryLineCustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "deliveryLineExternalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryLineExternalSystemId"
                    },
                    "maxLength": 450,
                    "description": "Unique Identifier of the delivery line."
                },
                "deliveryLineIsFictive": {
                    "type": "boolean",
                    "xml": {
                        "name": "DeliveryLineIsFictive"
                    },
                    "description": "If the delivery line is fictive or not. Default false."
                },
                "externalDeliveryNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalDeliveryNumber"
                    },
                    "maxLength": 450,
                    "description": "Used with Procurement module. Delivery number from external system. Fetched from the procurement purchase order."
                },
                "isSynchronizedWithExternalSystem": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsSynchronizedWithExternalSystem"
                    },
                    "description": "Used with Procurement module. Indicates that the delivery line has been synchronized with external system."
                },
                "externalSystemMetadata": {
                    "type": "array",
                    "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
                    "xml": {
                        "wrapped": true,
                        "name": "ExternalSystemMetadata"
                    },
                    "items": {
                        "$ref": "#/definitions/ExternalSystemMetadataEntry"
                    }
                }
            }
        },
        "IntegrationDeviationLineDto": {
            "type": "object",
            "xml": {
                "name": "DeviationLine"
            },
            "additionalProperties": false,
            "required": [
                "isApproved",
                "isAutoCoded",
                "isRejected"
            ],
            "properties": {
                "approvalUserFirstName": {
                    "type": "string",
                    "xml": {
                        "name": "ApprovalUserFirstName"
                    },
                    "maxLength": 120,
                    "description": "First  name for the user that approved/rejected the line."
                },
                "approvalUserLastName": {
                    "type": "string",
                    "xml": {
                        "name": "ApprovalUserLastName"
                    },
                    "maxLength": 120,
                    "description": "Last name for the user that approved/rejected the line."
                },
                "approvalUserUsername": {
                    "type": "string",
                    "xml": {
                        "name": "ApprovalUserUsername"
                    },
                    "maxLength": 120,
                    "description": "Username for the user that approved/rejected the line."
                },
                "deviationAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeviationAmount"
                    },
                    "description": "Total deviation amount. Decimal format (28,14)."
                },
                "deviationDays": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "DeviationDays"
                    },
                    "description": "Amount of deviation days. Due date deviation needs to be activated."
                },
                "deviationQuantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "DeviationQuantity"
                    },
                    "description": "Deviation quantity. Decimal format (28,14)."
                },
                "deviationType": {
                    "type": "string",
                    "xml": {
                        "name": "DeviationType"
                    },
                    "description": "Describes what type of deviation occurred. For possible values see list.",
                    "enum": [
                        "InvoiceLineAmountDeviation",
                        "LineAmountExceptionTypeDeviation",
                        "UnitPriceDeviation",
                        "UnitPriceExceptionTypeDeviation",
                        "QuantityDeviation",
                        "DueDateDeviation",
                        "NetAmountDeviation"
                    ]
                },
                "isApproved": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsApproved"
                    },
                    "description": "Determines if this deviation line was approved by user."
                },
                "isAutoCoded": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsAutoCoded"
                    },
                    "description": "Determines if the deviation line was auto coded or manual coded in workflow."
                },
                "isRejected": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsRejected"
                    },
                    "description": "Determines if this deviation line was rejected by user."
                },
                "isWithinTolerance": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsWithinTolerance"
                    },
                    "description": "Determines if the deviation was within tolerance limit configured in the workflow."
                },
                "poConnectionLineNumbers": {
                    "type": "array",
                    "description": "List of connected purchase order line connections.",
                    "xml": {
                        "wrapped": true,
                        "name": "POConnectionLineNumbers"
                    },
                    "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Reference to LineNumber in POConnectionLines.",
                        "xml": {
                            "name": "int"
                        }
                    }
                },
                "codingLineNumbers": {
                    "type": "array",
                    "description": "List of connected coding lines.",
                    "xml": {
                        "wrapped": true,
                        "name": "CodingLineNumbers"
                    },
                    "items": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Reference to connected coding line number.",
                        "xml": {
                            "name": "int"
                        }
                    }
                }
            }
        },
        "IntegrationExceptionTypeConnectionDto": {
            "type": "object",
            "xml": {
                "name": "ExceptionTypeConnection"
            },
            "additionalProperties": false,
            "required": [
                "invoiceLineNumber",
                "isManual"
            ],
            "properties": {
                "invoiceLineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "InvoiceLineNumber"
                    },
                    "description": "Reference to invoice line number."
                },
                "exceptionType": {
                    "type": "string",
                    "xml": {
                        "name": "ExceptionType"
                    },
                    "maxLength": 450,
                    "description": "Exception type used in Medius."
                },
                "isManual": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsManual"
                    },
                    "description": "If exception type connection was done manually or automatically."
                }
            }
        },
        "IntegrationTaxGroupDto": {
            "type": "object",
            "xml": {
                "name": "TaxGroup"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "companyId",
                "description",
                "groupName",
                "isActive",
                "indicatorNumber"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "groupName": {
                    "type": "string",
                    "xml": {
                        "name": "GroupName"
                    },
                    "maxLength": 100,
                    "description": "Name of the tax group"
                },
                "description": {
                    "type": "string",
                    "xml": {
                        "name": "Description"
                    },
                    "maxLength": 450,
                    "description": "Description of the tax group"
                },
                "lines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Lines"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationTaxCodeDto"
                    }
                },
                "indicatorNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "IndicatorNumber"
                    },
                    "description": "Indicator number of the tax group when using two tax indicators. Values: [1/2], default: 1.",
                    "enum":[
                        1,
                        2
                    ]
                }
            }
        },
        "IntegrationTaxCodeDto": {
            "type": "object",
            "xml": {
                "name": "TaxCode"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "code",
                "deductible",
                "description",
                "isActive",
                "percentage"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "dimensions": {
                    "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                },
                "nondeductibleDimensions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                        }
                    ],
                    "xml": {
                        "name": "NondeductibleDimensions"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "code": {
                    "type": "string",
                    "xml": {
                        "name": "Code"
                    },
                    "maxLength": 100,
                    "description": "Tax code"
                },
                "deductible": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Deductible"
                    },
                    "description": "Deductible percentage. 100.0 = the whole tax percentage is deductible. Decimal format (19,5)"
                },
                "description": {
                    "type": "string",
                    "xml": {
                        "name": "Description"
                    },
                    "maxLength": 450,
                    "description": "Description of the tax code"
                },
                "percentage": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Percentage"
                    },
                    "description": "The tax percentage. Decimal format (19,5)"
                }
            }
        },
        "IntegrationUnitDto": {
            "type": "object",
            "xml": {
                "name": "Unit"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "isActive"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in ERP, unique key between Medius and ERP"
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "description": {
                    "type": "string",
                    "xml": {
                        "name": "Description"
                    },
                    "maxLength": 450,
                    "description": "Description of the unit"
                }
            }
        },
        "IntegrationUserConfigurationDto": {
            "type": "object",
            "xml": {
                "name": "UserConfiguration"
            },
            "additionalProperties": false,
            "required":[
                "companyId",
                "userName"

            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "userName": {
                    "type": "string",
                    "xml": {
                        "name": "UserName"
                    },
                    "maxLength": 60,
                    "description": "Users username"
                },
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "responsible": {
                    "type": "string",
                    "xml": {
                        "name": "Responsible"
                    },
                    "maxLength": 450,
                    "description": "UserName or Full name (FirstName LastName). The value is first used as username and if the fails as full name."
                },
                "responsibleRole": {
                    "type": "string",
                    "xml": {
                        "name": "ResponsibleRole"
                    },
                    "maxLength": 450,
                    "description": "Roles role name (of the users supervisor). ResponsibleRole is only used when Responsible is left empty"
                },
                "preCodingDimensions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                        }
                    ],
                    "xml": {
                        "name": "PreCodingDimensions"
                    }
                },
                "authorizationGroups": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "AuthorizationGroups"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationAuthorizationGroupDto"
                    }
                },
                "followupGroups": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "FollowupGroups"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationFollowupGroupDto"
                    }
                },
                "temporaryDelegations": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "TemporaryDelegations"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationTemporaryDelegationDto"
                    }
                }
            }
        },
        "IntegrationAuthorizationGroupDto": {
            "type": "object",
            "xml": {
                "name": "AuthorizationGroup"
            },
            "additionalProperties": false,
            "required": [
                "companyId",
                "authorizationGroupName",
                "toBeRemoved"
            ],
            "properties": {
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "authorizationGroupName": {
                    "type": "string",
                    "xml": {
                        "name": "AuthorizationGroupName"
                    },
                    "maxLength": 450,
                    "description": "Name of authorization group"
                },
                "toBeRemoved": {
                    "type": "boolean",
                    "xml": {
                        "name": "ToBeRemoved"
                    },
                    "description": "If AuthorizationGroup should be removed from User"
                }
            }
        },
        "IntegrationFollowupGroupDto": {
            "type": "object",
            "xml": {
                "name": "FollowupGroup"
            },
            "additionalProperties": false,
            "required": [
                "companyId",
                "followupGroupName",
                "toBeRemoved"
            ],
            "properties": {
                "companyId": {
                    "type": "string",
                    "xml": {
                        "name": "CompanyId"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "followupGroupName": {
                    "type": "string",
                    "xml": {
                        "name": "FollowupGroupName"
                    },
                    "maxLength": 450,
                    "description": "Name of the follow up group"
                },
                "toBeRemoved": {
                    "type": "boolean",
                    "xml": {
                        "name": "ToBeRemoved"
                    },
                    "description": "If FollowupGroup should be removed from User"
                }
            }
        },
        "IntegrationTemporaryDelegationDto": {
            "type": "object",
            "xml": {
                "name": "TemporaryDelegation"
            },
            "additionalProperties": false,
            "required": [
                "responsible",
                "startDate",
                "endDate"
            ],
            "properties": {
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "StartDate"
                    },
                    "description": "The date the delegation starts"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "EndDate"
                    },
                    "description": "The date the delegation ends"
                },
                "responsible": {
                    "type": "string",
                    "xml": {
                        "name": "Responsible"
                    },
                    "description": "Users username (that is being delegated to)"
                }
            }
        },
        "IntegrationUserDto": {
            "type": "object",
            "xml": {
                "name": "User"
            },
            "additionalProperties": false,
            "required": [
                "externalSystemId",
                "firstName",
                "format",
                "isActive",
                "language",
                "lastName",
                "timezone",
                "userName",
                "roles"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "isActive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsActive"
                    },
                    "description": "If the entity is active or inactive"
                },
                "userName": {
                    "type": "string",
                    "xml": {
                        "name": "UserName"
                    },
                    "maxLength": 60,
                    "description": "Users user name. User name has to be unique"
                },
                "firstName": {
                    "type": "string",
                    "xml": {
                        "name": "FirstName"
                    },
                    "maxLength": 60,
                    "description": "First name of user"
                },
                "lastName": {
                    "type": "string",
                    "xml": {
                        "name": "LastName"
                    },
                    "maxLength": 60,
                    "description": "Last name of user"
                },
                "externalSystemId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalSystemId"
                    },
                    "maxLength": 100,
                    "description": "Id reference in external system (Active Directory), unique key between Medius and AD"
                },
                "email": {
                    "type": "string",
                    "xml": {
                        "name": "Email"
                    },
                    "maxLength": 200,
                    "description": "Contact email address"
                },
                "timezone": {
                    "type": "string",
                    "xml": {
                        "name": "Timezone"
                    },
                    "maxLength": 60,
                    "description": "Default time zone for user. Example: 'UTC'"
                },
                "language": {
                    "type": "string",
                    "xml": {
                        "name": "Language"
                    },
                    "maxLength": 60,
                    "description": "Default language for user. Example: English(US) 'en-US', Swedish 'sv'. See list for possible values.",
                    "enum": [
                        "zh-CN",
                        "cs",
                        "da",
                        "nl",
                        "en-US",
                        "fi",
                        "fr",
                        "de",
                        "hu",
                        "ja",
                        "no",
                        "pl",
                        "es",
                        "sv"
                    ]
                },
                "format": {
                    "type": "string",
                    "xml": {
                        "name": "Format"
                    },
                    "maxLength": 60,
                    "description": "Default format for user. Based on .NET CultureInfo code. Example: English (United kingdom) 'en-GB', English (United States) 'en-US', Swedish (Sweden) 'sv-SE'. List of possible values can be seen on User configuration in Medius AP Automation."
                },
                "defaultCompany": {
                    "type": "string",
                    "xml": {
                        "name": "DefaultCompany"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "roles": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Roles"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationRoleCompanyDto"
                    }
                },
                "identityProviders": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "IdentityProviders"
                    },
                    "items": {
                        "$ref": "#/definitions/IntegrationIdentityProviderDto"
                    }
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                }
            }
        },
        "IntegrationRoleCompanyDto": {
            "type": "object",
            "xml": {
                "name": "RoleCompany"
            },
            "additionalProperties": false,
            "required": [
                "roleCompany",
                "roleName",
                "toBeRemoved"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "roleName": {
                    "type": "string",
                    "xml": {
                        "name": "RoleName"
                    },
                    "maxLength": 70,
                    "description": "Name of role"
                },
                "roleCompany": {
                    "type": "string",
                    "xml": {
                        "name": "RoleCompany"
                    },
                    "maxLength": 100,
                    "description": "ExternalSystemId to corresponding entity"
                },
                "toBeRemoved": {
                    "type": "boolean",
                    "xml": {
                        "name": "ToBeRemoved"
                    },
                    "description": "If Role should be removed from User"
                }
            }
        },
        "IntegrationIdentityProviderDto": {
            "type": "object",
            "xml": {
                "name": "IdentityProvider"
            },
            "additionalProperties": false,
            "required":[
                "identityProviderName",
                "nameIdentifier"
            ],
            "properties": {
                "erpSourceId": {
                    "type": "string",
                    "xml": {
                        "name": "ErpSourceId"
                    },
                    "maxLength": 450,
                    "description": "Source of entity"
                },
                "identityProviderName": {
                    "type": "string",
                    "xml": {
                        "name": "IdentityProviderName"
                    },
                    "maxLength": 60,
                    "description": "Name of the identityprovider"
                },
                "nameIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "NameIdentifier"
                    },
                    "maxLength": 100,
                    "description": "Name identifier of user"
                }
            }
        },
        "VoucherResponseDto": {
            "type": "object",
            "xml": {
                "name": "VoucherResponse"
            },
            "additionalProperties": false,
            "properties": {
                "voucher": {
                    "$ref": "#/definitions/IntegrationResponseVoucherDto"
                },
                "correlationKey": {
                    "type": "string",
                    "xml": {
                        "name": "CorrelationKey"
                    }
                }
            }
        },
        "IntegrationResponseVoucherDto": {
            "type": "object",
            "xml": {
                "name": "Voucher"
            },
            "additionalProperties": false,
            "properties": {
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "voucherValue": {
                    "type": "string",
                    "xml": {
                        "name": "VoucherValue"
                    }
                },
                "voucherDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "VoucherDate"
                    }
                }
            }
        },
        "EdiSupplierInvoiceImportEnvelope": {
            "type": "object",
            "xml": {
                "name": "EdiSupplierInvoiceImportEnvelope"
            },
            "description": "Image and Attachment(s) are available as properties here, see above disclaimer. Please see Postman example for full specification.",
            "additionalProperties": false,
            "properties": {
                "invoiceData": {
                    "type": "object",
                    "xml": {
                        "name": "InvoiceData",
                        "wrapped": true
                    },
                    "properties": {
                        "ediSupplierInvoice": {
                            "$ref": "#/definitions/EdiSupplierInvoiceDto"
                        }
                    }
                }
            }
        },
        "EdiSupplierInvoiceDto": {
            "type": "object",
            "xml": {
                "name": "EdiSupplierInvoice"
            },
            "additionalProperties": false,
            "required": [
                "invoiceNumber",
                "currencyCode",
                "gross"
            ],
            "properties": {
                "invoiceType": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceType"
                    },
                    "maxLength": 100,
                    "description": "Type of invoice. If empty, Medius tries to set.",
                    "enum": [
                        "EXPENSE",
                        "ORDER_BASED",
                        "CONTRACT_BASED",
                        "PAYMENT_REQUEST"
                    ]
                },
                "companyIdentifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CompanyIdentifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/EdiCompanyIdentifierDto"
                    }
                },
                "invoiceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceNumber"
                    },
                    "maxLength": 450,
                    "description": "Invoice number"
                },
                "documentFormat": {
                    "type": "string",
                    "xml": {
                        "name": "DocumentFormat"
                    },
                    "maxLength": 50,
                    "description": "Format of the invoice. To administrate and list possible values, see 'Administration/Document source management' in APA."
                },
                "documentProvider": {
                    "type": "string",
                    "xml": {
                        "name": "DocumentProvider"
                    },
                    "maxLength": 50,
                    "description": "Provider of the invoice. To administrate and list possible values, see 'Administration/Document source management' in APA."
                },
                "documentSource": {
                    "type": "string",
                    "xml": {
                        "name": "DocumentSource"
                    },
                    "maxLength": 450,
                    "description": "Obsolete. When 'DocumentFormat' and 'DocumentProvider' is used, 'DocumentSource' is set automatically.",
                    "enum": [
                        "Unknown",
                        "Paper",
                        "EInvoice",
                        "PDF",
                        "ManualCreation"
                    ]
                },
                "captureUser": {
                    "type": "string",
                    "xml": {
                        "name": "CaptureUser"
                    },
                    "maxLength": 450,
                    "description": "User responsible for capturing document from external source."
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "InvoiceDate"
                    },
                    "description": "Invoice date of the invoice. If empty, today's date will be used."
                },
                "dueDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "DueDate"
                    },
                    "description": "Due date of the invoice. If empty, due date will be calculated based on suppliers payment terms."
                },
                "preferredPaymentDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "PreferredPaymentDate"
                    },
                    "description": "Preferred payment date of the invoice. If empty, preferred payment date will follow invoice due date."
                },
                "preliminaryBookingDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "PreliminaryBookingDate"
                    },
                    "description": "Preliminary booking date."
                },
                "finalBookingDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "FinalBookingDate"
                    },
                    "description": "Final booking date."
                },
                "currencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "CurrencyCode"
                    },
                    "maxLength": 100,
                    "description": "Currency code of the invoice."
                },
                "currencyRate": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CurrencyRate"
                    },
                    "description": "Currency rate can be imported if other currency rate needed than calculated based on invoice date. Currency rate expressed as ratio of company's accounting currency value to document's currency value. Decimal format (28,14)."
                },
                "gross": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Gross"
                    },
                    "description": "Gross amount. Decimal format (28,14)."
                },
                "net": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Net"
                    },
                    "description": "Net amount. Decimal format (28,14)."
                },
                "tax": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Tax"
                    },
                    "description": "Tax amount. Decimal format (28,14)."
                },
                "rounding": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Rounding"
                    },
                    "description": "Rounding amount. Decimal format (28,14)."
                },
                "taxIndicator1": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator1"
                    },
                    "maxLength": 100,
                    "description": "External system id to corresponding TaxIndicator1."
                },
                "taxIndicator2": {
                    "type": "string",
                    "xml": {
                        "name": "TaxIndicator2"
                    },
                    "maxLength": 100,
                    "description": "External system id to corresponding TaxIndicator2."
                },
                "reference": {
                    "type": "string",
                    "xml": {
                        "name": "Reference"
                    },
                    "maxLength": 450,
                    "description": "Reference is validated against user name and First + Last name, if found invoice is distributed."
                },
                "paymentReference": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentReference"
                    },
                    "maxLength": 450,
                    "description": "Payment reference. Can be used as reference at payment."
                },
                "contractNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ContractNumber"
                    },
                    "maxLength": 300,
                    "description": "Contract number. Note: if this fields is populated Medius will consider this document as contract based regardless of the field InvoiceType."
                },
                "deliveryNote": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNote"
                    },
                    "maxLength": 300,
                    "description": "Delivery note. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType."
                },
                "orderIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "OrderIdentifier"
                    },
                    "maxLength": 300,
                    "description": "Order identifier, used for connection against purchase order. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType."
                },
                "orderIdentifier2": {
                    "type": "string",
                    "xml": {
                        "name": "OrderIdentifier2"
                    },
                    "maxLength": 300,
                    "description": "Order identifier 2, used as free text information. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType."
                },
                "supplierIdentifiers": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "SupplierIdentifiers"
                    },
                    "items": {
                        "$ref": "#/definitions/EdiSupplierIdentifierDto"
                    }
                },
                "lines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "Lines"
                    },
                    "items": {
                        "$ref": "#/definitions/EdiSupplierInvoiceLineDto"
                    }
                },
                "codingLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CodingLines"
                    },
                    "items": {
                        "$ref": "#/definitions/EdiCodingLineDto"
                    }
                },
                "splitTaxLines": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "SplitTaxLines"
                    },
                    "description": "For information on how to set-up Split tax, see Success documentation.",
                    "items": {
                        "$ref": "#/definitions/EdiSplitTaxLineDto"
                    }
                },
                "customTaxFields": {
                    "type": "array",
                    "xml": {
                        "wrapped": true,
                        "name": "CustomTaxFields"
                    },
                    "items": {
                        "$ref": "#/definitions/EdiCustomTaxFieldDto"
                    }
                },
                "isStraightToArchive": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsStraightToArchive"
                    },
                    "description": "Parameter to send invoice straight to archive without approval and ERP integration.",
                    "default": false
                },
                "paymentDetails": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentDetails"
                    },
                    "maxLength": 300,
                    "description": "Identifier for payment details. Note: this field would be used to populate the PaymentDetails on invoice only when PaymentDetails is turned on for given company."
                },
                "vatDate": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "VatDate"
                    },
                    "description": "VAT date for an invoice, for example, the date when goods have been received or a service has started."
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_List1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List1"
                    },
                    "maxLength": 50,
                    "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius."
                },
                "customField_List2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List2"
                    },
                    "maxLength":50,
                    "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius."
                },
                "customField_List3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List3"
                    },
                    "maxLength": 50,
                    "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius."
                },
                "customField_List4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List4"
                    },
                    "maxLength": 50,
                    "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius."
                },
                "customField_List5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_List5"
                    },
                    "maxLength": 50,
                    "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius."
                }
            }
        },
        "EdiSupplierInvoiceLineDto": {
            "type": "object",
            "xml": {
                "name": "EdiSupplierInvoiceLine"
            },
            "additionalProperties": false,
            "required": [
                "amount"
            ],
            "properties": {
                "itemNumber": {
                    "type": "string",
                    "xml": {
                        "name": "ItemNumber"
                    },
                    "maxLength": 450,
                    "description": "Item number to be matched on invoice line."
                },
                "itemDescription": {
                    "type": "string",
                    "xml": {
                        "name": "ItemDescription"
                    },
                    "maxLength": 450,
                    "description": "Item description."
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "Total NET amount of the invoice line. If not provided, amount will be 0. Decimal format (28,14)."
                },
                "quantity": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Quantity"
                    },
                    "description": "Quantity of the invoice line. If not provided, quantity will be 0. Decimal format (28,14)."
                },
                "unitPrice": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "UnitPrice"
                    },
                    "description": "Unit price of the invoice line. If not provided, unit price will be calculated by Amount/Quantity. Decimal format (28,14)."
                },
                "unit": {
                    "type": "string",
                    "xml": {
                        "name": "Unit"
                    },
                    "maxLength": 100,
                    "description": "Unit of measure. If not provided, '-' will be set as default.",
                    "default": "-"
                },
                "orderIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "OrderIdentifier"
                    },
                    "maxLength": 300,
                    "description": "Order identifier of the invoice line. If this field is not populated, Order identifier from header will be used. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType."
                },
                "orderIdentifier2": {
                    "type": "string",
                    "xml": {
                        "name": "OrderIdentifier2"
                    },
                    "maxLength": 300,
                    "description": "Order identifier 2 of the invoice line, used as free text information."
                },
                "deliveryNote": {
                    "type": "string",
                    "xml": {
                        "name": "DeliveryNote"
                    },
                    "maxLength": 300,
                    "description": "Delivery note of the invoice line. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType."
                },
                "customField_Text1": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text1"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text2": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text2"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text3": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text3"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text4": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text4"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Text5": {
                    "type": "string",
                    "xml": {
                        "name": "CustomField_Text5"
                    },
                    "maxLength": 450,
                    "description": "Custom field of type text."
                },
                "customField_Numeric1": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric1"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric2": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric2"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric3": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric3"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric4": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric4"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Numeric5": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "CustomField_Numeric5"
                    },
                    "description": "Custom field of type numeric. Decimal format (28,14)."
                },
                "customField_Boolean1": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean1"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean2": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean2"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean3": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean3"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean4": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean4"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_Boolean5": {
                    "type": "boolean",
                    "xml": {
                        "name": "CustomField_Boolean5"
                    },
                    "description": "Custom field of type bit."
                },
                "customField_DateTime1": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime1"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime2": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime2"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime3": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime3"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime4": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime4"
                    },
                    "description": "Custom Field of type datetime."
                },
                "customField_DateTime5": {
                    "type": "string",
                    "format": "date-time",
                    "xml": {
                        "name": "CustomField_DateTime5"
                    },
                    "description": "Custom Field of type datetime."
                }
            }
        },
        "EdiCodingLineDto": {
            "type": "object",
            "xml": {
                "name": "EdiCodingLine"
            },
            "additionalProperties": false,
            "properties": {
                "lineNumber": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "LineNumber"
                    },
                    "description": "Counter for Line number. Serial number, starts with 1."
                },
                "dimensions": {
                    "$ref": "#/definitions/IntegrationCodingDimensionsDto"
                }
            }
        },
        "EdiSplitTaxLineDto": {
            "type": "object",
            "xml": {
                "name": "EdiSplitTaxLine"
            },
            "additionalProperties": false,
            "properties": {
                "taxCode": {
                    "type": "string",
                    "xml": {
                        "name": "TaxCode"
                    },
                    "maxLength": 450,
                    "description": "Name of tax code. See Success documentation for further information on Split tax."
                },
                "taxPercentage": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "TaxPercentage"
                    },
                    "description": "Tax percentage. See Success documentation for further information on Split tax. Decimal format (19,5)."
                },
                "netAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "NetAmount"
                    },
                    "description": "Net amount of the tax line. See Success documentation for further information on Split tax. Decimal format (28,14)."
                },
                "taxAmount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "TaxAmount"
                    },
                    "description": "Tax amount of the tax line. See Success documentation for further information on Split tax. Decimal format (28,14)."
                }
            }
        },
        "EdiCustomTaxFieldDto": {
            "type": "object",
            "xml": {
                "name": "EdiCustomTaxField"
            },
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    },
                    "maxLength": 450,
                    "description": "Name of custom tax. Note: Need to be set-up and correspond to information in given company."
                },
                "amount": {
                    "type": "number",
                    "format": "decimal",
                    "xml": {
                        "name": "Amount"
                    },
                    "description": "Amount of custom tax. Note: Need to be set-up and correspond to information in given company."
                }
            }
        },
        "EdiCompanyIdentifierDto": {
            "type": "object",
            "xml": {
                "name": "EdiCompanyIdentifier"
            },
            "additionalProperties": false,
            "properties": {
                "identifierType": {
                    "type": "string",
                    "xml": {
                        "name": "IdentifierType"
                    },
                    "maxLength": 450,
                    "description": "See list of available values for the identifier type. In GUI they are named differently, eg. Bank Account for BANK_ACCOUNT",
                    "enum": [
                        "BANK_ACCOUNT",
                        "ORGANIZATION_NUMBER",
                        "VAT_REGISTRATION_NUMBER",
                        "GLN_NUMBER",
                        "IBAN_NUMBER",
                        "OTHER",
                        "ExternalSystemIdentifier",
                        "CompanyNameIdentifier",
                        "CompanyIdIdentifier"
                    ]
                },
                "identifierValue": {
                    "type": "string",
                    "xml": {
                        "name": "IdentifierValue"
                    },
                    "maxLength": 450,
                    "description": "Identifier value, e.g. bank account number"
                }
            }
        },
        "EdiSupplierIdentifierDto": {
            "type": "object",
            "xml": {
                "name": "EdiSupplierIdentifier"
            },
            "additionalProperties": false,
            "properties": {
                "identifierType": {
                    "type": "string",
                    "xml": {
                        "name": "IdentifierType"
                    },
                    "maxLength": 450,
                    "description": "See list of available values for the identifier type. In GUI they are named differently, e.g. Bank Account for BANK_ACCOUNT.",
                    "enum": [
                        "FINANCIAL_SYSTEM",
                        "PURCHASING_SYSTEM",
                        "BANK_ACCOUNT",
                        "ORGANIZATION_NUMBER",
                        "VAT_REGISTRATION_NUMBER",
                        "EAN_NUMBER",
                        "POSTAL_ACCOUNT",
                        "IBAN_NUMBER",
                        "EXTERNAL_SYSTEM_ID",
                        "SUPPLIER_PORTAL_ID",
                        "OTHER"
                    ]
                },
                "identifierValue": {
                    "type": "string",
                    "xml": {
                        "name": "IdentifierValue"
                    },
                    "maxLength": 450,
                    "description": "Identifier value, e.g. bank account number"
                }
            }
        },
        "BadRequest": {
            "type": "object",
            "properties": {
            "message": {
                "type": "string",
                "description": "Detailed error message.",
                "example": "Attachments: MyAttachment.txt, not found in the content body"
                }
            }
        },
        "NotFound": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Detailed error message.",
                    "example": "There exists no document imported with id 123. Remember that it's the Id of the document import type."
                }
            }
        },
        "PaymentBatch": {
            "type": "object",
            "xml": {
                "name": "PaymentBatch"
            },
            "required": [
                "payorId",
                "items"
            ],
            "properties": {
                "payorId": {
                    "type": "string",
                    "xml": {
                        "name": "PayorId"
                    },
                    "example": "Medius",
                    "description": "Same as one of the company identifiers from Medius AP Automation. In order to import payment batch, matching identifier must be found"
                },
                "externalBatchId": {
                    "type": "string",
                    "xml": {
                        "name": "ExternalBatchId"
                    },
                    "minLength": 1,
                    "maxLength": 50,
                    "example": "WBC43728",
                    "description": "External Payment Batch identifier. If provided then it has to be unique across all successfully imported batches."
                },
                "items": {
                    "type": "array",
                    "xml": {
                        "name": "Items",
                        "wrapped": true
                    },
                    "description": "Adding items to the import batch is mandatory. The limit is 5000 items per batch.",
                    "items": {
                        "$ref": "#/definitions/PaymentItem"
                    }
                }
            }
        },
        "PaymentItem": {
            "type": "object",
            "xml": {
                "name": "Item"
            },
            "properties": {
                "invoiceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceNumber"
                    },
                    "maxLength": 50,
                    "example": "2/2021",
                    "description": "Payee-assigned invoice number. Must not appear twice for the same payee within a payments batch file. Will also be presented on Remittance advice prepared by NvoicePay for the vendor"
                },
                "voucherNumber": {
                    "type": "string",
                    "xml": {
                        "name": "VoucherNumber"
                    },
                    "maxLength": 50,
                    "example": "1519c142-c405-4753-bb2f-5fbec59375d4",
                    "description": "Voucher number from ERP, used to validate inside a single batch and between batches for possible duplicate payments"
                },
                "invoiceCompanyId": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceCompanyId"
                    },
                    "example": "Medius",
                    "description": "Company the invoice has been posted to in AP automation. Same as Company Id in Medius AP Automation. In order to import payment batch, matching identifier must be found"
                },
                "payeeId": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeId"
                    },
                    "maxLength": 50,
                    "example": "sinid",
                    "description": "Payee identifier - should be same as SupplierId in Medius AP Automation. Should be unique to each payee. Restricted characters: /  ? #"
                },
                "remitToID": {
                    "type": "string",
                    "xml": {
                        "name": "RemitToID"
                    },
                    "maxLength": 50,
                    "example": "345123R",
                    "description": "Identifier for a different remittance number or name for a payee (payees with multiple locations)"
                },
                "payeeName": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeName"
                    },
                    "maxLength": 100,
                    "example": "Larson - Roob",
                    "description": "Payee name - should be same as supplier name in Medius AP Automation. Up to 255 characters allowed for domestic payments"
                },
                "payeeStreetLine1": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeStreetLine1"
                    },
                    "maxLength": 35,
                    "example": "3346 Pagac Union",
                    "description": "Street address of the payee. Up to 60 characters allowed for domestic payments"
                },
                "payeeStreetLine2": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeStreetLine2"
                    },
                    "maxLength": 35,
                    "example": "PO box 1202",
                    "description": "Second line of street address of the payee. Up to 60 characters allowed for domestic payments"
                },
                "payeeCity": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeCity"
                    },
                    "maxLength": 20,
                    "example": "Lake Miller",
                    "description": "City of the payee. Up to 50 characters allowed for domestic payments"
                },
                "payeeZipOrPostalCode": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeZipOrPostalCode"
                    },
                    "minLength": 5,
                    "maxLength": 10,
                    "example": "89262-8263",
                    "description": "Zip or Postal Code of the payee. _Optional for countries other than USA and Canada - 0 to 10 characters allowed._"
                },
                "payeeStateCode": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeStateCode"
                    },
                    "maxLength": 2,
                    "example": "RI",
                    "description": "State of the payee. Optional for international payments. ISO Alfa 2 code. Required for US and Canadian payments."
                },
                "payeeCountryCode": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeCountryCode"
                    },
                    "maxLength": 2,
                    "example": "US",
                    "description": "Country of the payee. ISO Alpha2 code"
                },
                "paymentAmount": {
                    "type": "number",
                    "xml": {
                        "name": "PaymentAmount"
                    },
                    "format": "double",
                    "example": 732.43,
                    "description": "The amount to be paid for the invoice, may vary from invoice amount in case of partial payments or short payments. Max 12 digital places, including up to 2 decimal places"
                },
                "paymentCurrencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentCurrencyCode"
                    },
                    "maxLength": 3,
                    "example": "USD",
                    "description": "Currency in which vendor will be paid. ISO Alfa 3 code."
                },
                "invoiceDate": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceDate"
                    },
                    "format": "date",
                    "example": "2021-04-10",
                    "description": "Invoice date in format yyyy-MM-dd"
                },
                "invoiceDueDate": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceDueDate"
                    },
                    "format": "date",
                    "example": "2021-04-10",
                    "description": "Invoice Due Date in format yyyy-MM-dd. Note: If not specified the date payment batch was received by Nvoicepay will be displayed"
                },
                "preferredPaymentDate": {
                    "type": "string",
                    "xml": {
                        "name": "PreferredPaymentDate"
                    },
                    "format": "date",
                    "example": "2021-04-10",
                    "description": "The date on which payment should be executed. If left empty, current date will be used."
                },
                "invoiceAmount": {
                    "type": "number",
                    "xml": {
                        "name": "InvoiceAmount"
                    },
                    "format": "double",
                    "example": 732.43,
                    "description": "Original invoice amount, may vary from paymentAmount in case of partial payments or short payment. Max 12 digital places including up to 2 decimal places"
                },
                "invoiceCurrencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceCurrencyCode"
                    },
                    "maxLength": 3,
                    "example": "USD",
                    "description": "Currency of invoice. Required if invoiceAmount send. ISO Alfa 3 code."
                },
                "payorBankAccountIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "PayorBankAccountIdentifier"
                    },
                    "maxLength": 25,
                    "example": "BankId1",
                    "description": "Bank account identifier from customer accounting system. Needs to be an unique identifier for all payment items in the batch."
                },
                "payorLocationIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "PayorLocationIdentifier"
                    },
                    "example": "1",
                    "description": "Legal entity, department, branch office, etc."
                },
                "comment": {
                    "type": "string",
                    "xml": {
                        "name": "Comment"
                    },
                    "maxLength": 80,
                    "example": "Comment for payee",
                    "description": "Comment for invoice from payor accounting system. Will be displayed on remittance advice"
                },
                "payorIdInPayeeSystem": {
                    "type": "string",
                    "xml": {
                        "name": "PayorIdInPayeeSystem"
                    },
                    "maxLength": 50,
                    "example": "897578762",
                    "description": "Payor assigned account number with payee. Will be displayed on remittance advice"
                },
                "settlementCurrencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "SettlementCurrencyCode"
                    },
                    "maxLength": 3,
                    "example": "USD",
                    "description": "Currency which will be used by the payor to settle the foreign transaction. Required for international payments"
                },
                "payeeBankName": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeBankName"
                    },
                    "maxLength": 50,
                    "example": "Bank Zachodni WBK S.A.",
                    "description": "Name of the beneficiary bank. Required for international payments"
                },
                "payeeBankStreetLine1": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeBankStreetLine1"
                    },
                    "maxLength": 35,
                    "example": "PL.WOLNOSCI 15",
                    "description": "Payees banks address line 1. Required for international payments"
                },
                "payeeBankStreetLine2": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeBankStreetLine2"
                    },
                    "maxLength": 35,
                    "example": "BUILDING B",
                    "description": "Payees banks address line 2. Required for international payments"
                },
                "payeeBankCity": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeBankCity"
                    },
                    "maxLength": 20,
                    "example": "POZNAN",
                    "description": "Payees banks city. Required for international payments"
                },
                "payeeBankCountryCode": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeBankCountryCode"
                    },
                    "maxLength": 2,
                    "example": "PL",
                    "description": "Payees banks country. ISO Alpha2 code. Required for international payments"
                },
                "payeeAccountNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeAccountNumber"
                    },
                    "maxLength": 34,
                    "example": "PL88109013620000000036000000",
                    "description": "IBAN or basic account number. No spaces or dashes permitted. Required for international payments"
                },
                "payeeBankgiroNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeBankgiroNumber"
                    },
                    "maxLength": 8,
                    "example": "3452334",
                    "description": "When payeeBankgiroNumber is provided, payeeAccountNumber, payeeRoutingNumber and payeeBankSwiftCode are optional. If both payeeBankgiroNumber and combination of payeeAccountNumber, payeeRoutingNumber and payeeBankSwiftCode are provided, the combination of (payeeAccountNumber and payeeBankSwiftCode) or (payeeAccountNumber and payeeRoutingNumber) are used for payment execution."
                },
                "payeeRoutingNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeRoutingNumber"
                    },
                    "maxLength": 15,
                    "example": "202020",
                    "description": "This could be known as RoutingNumber, BranchCode, ABA number, transit number, MICR, IFSC, etc. Required for international payments in some countries"
                },
                "payeeBankSwiftCode": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeBankSwiftCode"
                    },
                    "maxLength": 11,
                    "example": "WBKPPLPP",
                    "description": "A unique identification code assigned to a specific bank to proceed money transfer between banks internationally. Required for international payments"
                },
                "purposeOfPayment": {
                    "type": "string",
                    "xml": {
                        "name": "PurposeOfPayment"
                    },
                    "maxLength": 50,
                    "example": "BillPayment",
                    "description": "Purpose of payment. Required for international payment. Allowed values are: BillPayment, BusinessVenture, CharitableDonation, EstateSettlementOrInheritance, GovernmentRelatedPayment, IntercompanyPayment, InvestmentRelatedPayment, PaymentForALoanOrDeposit, PayrollOrPersonnelPayment, ProfessionalFeesPayment, PurchaseOfGoods, PurchaseOfPropertyOrRealEstate, PurchaseOfServices, ResearchAndDevelopment"
                },
                "payeeType": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeType"
                    },
                    "example": "Business",
                    "description": "Payee classification. Required for international payments. Individual or Business (Case Sensitive)."
                },
                "payeeContactPhone": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeContactPhone"
                    },
                    "maxLength": 15,
                    "example": "123456789",
                    "description": "Payees phone number. Do not include + or ()"
                },
                "payeeContactEmail": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeContactEmail"
                    },
                    "maxLength": 320,
                    "example": "email@email.com",
                    "description": "Used to send confirmation email to payee. Required for international payments"
                },
                "paymentReference": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentReference"
                    },
                    "maxLength": 13,
                    "example": "P012701",
                    "description": "A payment reference number or check number from the customers accounting system. Will be displayed on remittance advice."
                },
                "payeeDateOfBirth": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeDateOfBirth"
                    },
                    "maxLength": 10,
                    "example": "1985-10-20",
                    "description": "Date of birth in yyyy-MM-dd format"
                },
                  "payeePassportNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PayeePassportNumber"
                    },
                    "maxLength": 20,
                    "example": "PL128765",
                    "description": "The Passport number of the payee."
                },
                  "payeeTaxRegistrationNumber": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeTaxRegistrationNumber"
                    },
                    "maxLength": 20,
                    "example": "12598",
                    "description": "The payee tax registration number."
                },
                "discountAmount": {
                    "type": "number",
                    "xml": {
                        "name": "DiscountAmount"
                    },
                    "format": "double",
                    "example": 0.00,
                    "description": "Amount of discount subtracted from \"Invoice amount\" to arrive at \"Amount to pay\". This field is not used for calculation. It is informational only."
                },
                "discountCurrencyCode": {
                    "type": "string",
                    "xml": {
                        "name": "DiscountCurrencyCode"
                    },
                    "maxLength": 3,
                    "example": "USD",
                    "description": "Currency for discount provided in \"Discount Amount\". This field is not used for calculation. It is informational only. ISO Alfa 3 code."
                }
            }
        },
        "ImportResult": {
            "type": "object",
            "xml": {
                "name": "Result"
            },
            "properties": {
                "paymentBatchId": {
                    "type": "integer",
                    "xml": {
                        "name": "PaymentBatchId"
                    },
                    "example": 100
                },
                "isSuccessful": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsSuccessful"
                    },
                    "example": true,
                    "description": "true when payment batch was successfully imported otherwise false."
                }
            }
        },
        "PaymentBatchReconciliationStatusResponse": {
            "type": "object",
            "xml": {
                "name": "PaymentBatch"
            },
            "required": [
                "id",
                "importDateTime",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int",
                    "xml": {
                        "name": "Id"
                    },
                    "example": 123,
                    "description": "Payment batch id" 
                },
                "externalBatchId": {
                    "type": "string",
                    "format": "string",
                    "xml": {
                        "name": "ExternalBatchId"
                    },
                    "example": "aa123",
                    "description": "External payment batch id"
                },
                "importDateTime": {
                    "type": "string",
                    "format": "date",
                    "xml": {
                        "name": "ImportDateTime"
                    },
                    "example": "2021-01-01T12:00:00Z",
                    "description": "Date and time of payment batch import"
                },
                "payorId": {
                    "type": "string",
                    "xml": {
                        "name": "PayorId"
                    },
                    "example": "Medius",
                    "description": "Payor id"
                },
                "status": {
                    "type": "string",
                    "xml": {
                        "name": "Status"
                    },
                    "example": "AwaitingApproval",
                    "description": "Possible statuses, see list.",
                    "enum": [
                        "Processing",
                        "AwaitingApproval",
                        "PaymentInProgress",
                        "SentForPayment",
                        "Paid",
                        "Rejected",
                        "ImportDataError",
                        "ReadyForPayment",
                        "PaymentFailed",
                        "ReloadingPaymentInformation"
                    ]
                }
            }
        },
        "PaymentItemReconciliationStatusResponse": {
            "type": "object",
            "xml": {
                "name": "Item"
            },
            "properties": {
                "id": {
                    "type": "integer",
                    "xml": {
                        "name": "Id"
                    },
                    "description": "Internal payment item id.",
                    "example": 100
                },
                "payorBankAccountIdentifier": {
                    "type": "string",
                    "xml": {
                        "name": "PayorBankAccountIdentifier"
                    },
                    "maxLength": 50,
                    "example": "Bank1",
                    "description": "Internal bank identifier, defined during funding bank account setup in Medius Pay"
                },
                "payeeName": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeName"
                    },
                    "maxLength": 100,
                    "example": "Larson - Roob",
                    "description": "Payee name - the same as supplier name in Medius AP Automation. Up to 255 characters allowed for domestic payments"
                },
                "payeeId": {
                    "type": "string",
                    "xml": {
                        "name": "PayeeId"
                    },
                    "maxLength": 50,
                    "example": "sinid",
                    "description": "Payee identifier - the same as SupplierId in Medius AP Automation. Should be unique to each payee. Restricted characters: /  ? # | "
                },
                "invoiceNumber": {
                    "type": "string",
                    "xml": {
                        "name": "InvoiceNumber"
                    },
                    "maxLength": 50,
                    "example": "2/2021",
                    "description": "Payee-assigned invoice number. Must not appear twice for the same payee within a payments batch file"
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date",
                    "xml": {
                        "name": "InvoiceDate"
                    },
                    "example": "2021-01-01T00:00:00Z"
                },
                "voucherNumber": {
                    "type": "string",
                    "xml": {
                        "name": "VoucherNumber"
                    },
                    "maxLength": 50,
                    "example": "1519c142-c405-4753-bb2f-5fbec59375d4",
                    "description": "Voucher number from ERP, used to validate inside a single batch and between batches for possible duplicate payments"
                },
                "invoiceAmount": {
                    "type": "number",
                    "format": "double",
                    "xml": {
                        "name": "InvoiceAmount"
                    },
                    "example": 732.43,
                    "description": "Original invoice amount, may vary from paymentAmount in case of partial payments or short payment. Max 12 digital places including up to 2 decimal places"
                },
                "amountToPay": {
                    "type": "number",
                    "format": "double",
                    "xml": {
                        "name": "AmountToPay"
                    },
                    "example": 732.43,
                    "description": "The amount paid for the invoice, may vary from invoice amount in case of partial payments or short payments"
                },
                "paymentCurrency": {
                    "type": "string",
                    "maxLength": 3,
                    "xml": {
                        "name": "PaymentCurrency"
                    },
                    "example": "USD",
                    "description": "Currency in which the invoice was paid. ISO Alfa 3 code."
                },
                "paidAmountInSettlementCurrency": {
                    "type": "number",
                    "format": "double",
                    "xml": {
                        "name": "PaidAmountInSettlementCurrency"
                    },
                    "example": 142.43,
                    "description": "The amount paid in settlement currency"
                },
                "settlementCurrency": {
                    "type": "string",
                    "xml": {
                        "name": "SettlementCurrency"
                    },
                    "maxLength": 3,
                    "example": "USD",
                    "description": "Currency in which vendor was paid. ISO Alfa 3 code"
                },
                "exchangeRate": {
                    "type": "number",
                    "format": "double",
                    "xml": {
                        "name": "ExchangeRate"
                    },
                    "example": 142.43,
                    "description": "Value of exchange rate"
                },
                "fee": {
                    "type": "number",
                    "format": "double",
                    "xml": {
                        "name": "Fee"
                    },
                    "example": 142.43,
                    "description": "Value of fee"
                },
                "feeCurrency": {
                    "type": "string",
                    "xml": {
                        "name": "FeeCurrency"
                    },
                    "maxLength": 3,
                    "example": "USD",
                    "description": "Currency in which fee was paid. ISO Alfa 3 code"
                },
                "paymentMethod": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentMethod"
                    },
                    "maxLength": 50,
                    "example": "Wire transfer",
                    "description": "Payment method"
                },
                "paymentDate": {
                    "type": "string",
                    "format": "date",
                    "xml": {
                        "name": "PaymentDate"
                    },
                    "example": "2021-01-01T12:10:00Z"
                },
                "paymentReference": {
                    "type": "string",
                    "xml": {
                        "name": "PaymentReference"
                    },
                    "maxLength": 13,
                    "example": "P012701",
                    "description": "Payment reference number or check number from the customers accounting system. Will be displayed on remittance advice"
                },
                "status": {
                    "type": "string",
                    "xml": {
                        "name": "Status"
                    },
                    "example": "AwaitingApproval",
                    "description": "Possible statuses, see list.",
                    "enum": [
                        "New",
                        "AwaitingApproval",
                        "PaymentInProgress",
                        "SentForPayment",
                        "AwaitingFunds",
                        "FundsReceived",
                        "Paid",
                        "Rejected",
                        "ReadyForPayment",
                        "PaymentFailed",
                        "ReloadingPaymentInformation",
                        "Cancelled",
                        "Recalled",
                        "Issued"
                    ]
                },
                "checkNumber": {
                    "type": "string",
                    "xml": {
                        "name": "CheckNumber"
                    },
                    "maxLength": 500,
                    "example": "0000000001",
                    "description": "Provided only for payments processed with payment method check"
                }
            }
        }
    },
    "paths": {
        "/integration/masterdata/v1/AccrualTemplateImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "AccrualTemplateImportBatch_Post",
                "description": "The POST method allows the client to send accrual templates that will be imported by the Medius master data import queue.\nThe accrual template have the company and the dimension values used in the template as prerequisites.\nRemember that by sending in accrual templates the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius.",
                "parameters": [
                    {
                        "name": "accrualTemplates",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationAccrualTemplateDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfAccrualTemplate"
                            }
                        },
                        "x-nullable": true,
                        "description": "The accrual templates to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/AccrualTemplateImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "AccrualTemplateImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "AccrualTemplateImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/companies": {
            "get": {
                "tags": [
                    "Master data - export"
                ],
                "summary": "",
                "operationId": "CompanyExport_Get",
                "description": "When calling this endpoint a list of companies will be returned. The list includes both \"real\" and \"virtual\" companies.\nThere exists one filter parameter to this request, that is updatedSince, it filters out companies that have been changed since\nthe updatedSince time stamp.\nIt's possible adjust page sizes and offsets.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query",
                        "x-nullable": false,
                        "description": "The offset",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query",
                        "x-nullable": false,
                        "description": "The number of records returned(max 1000)",
                        "format": "int32",
                        "default": 1000
                    },
                    {
                        "type": "string",
                        "name": "updatedSince",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Tells the service that we only want companies that have been changed after this date and time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyExportPageDto"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/masterdata/v1/CompanyImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "CompanyImportBatch_Post",
                "description": "The POST method allows the client to send a set of companies that will be imported by the Medius master data import queue.\nThe company have Currency as prerequisite\nThe company will be created as a child company to either the root company or to another company provided",
                "parameters": [
                    {
                        "name": "companies",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationCompanyDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfCompany"
                            }
                        },
                        "x-nullable": true,
                        "description": "The companies to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/CompanyImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "CompanyImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "CompanyImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/CurrencyImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "CurrencyImportBatch_Post",
                "description": "The POST method allows the client to send currencies that will be imported by the Medius master data import queue.\nThe currency have no prerequisite.",
                "parameters": [
                    {
                        "name": "currencies",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationCurrencyDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfCurrency"
                            }
                        },
                        "x-nullable": true,
                        "description": "The currency to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/CurrencyImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "CurrencyImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "CurrencyImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/CurrencyRateImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "CurrencyRateImportBatch_Post",
                "description": "The POST method allows the client to send currency rates that will be imported by the Medius master data import queue.\nThe currency rate have currency as prerequisite.",
                "parameters": [
                    {
                        "name": "currencyRates",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationCurrencyRateDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfCurrencyRate"
                            }
                        },
                        "x-nullable": true,
                        "description": "The currency rate to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/CurrencyRateImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "CurrencyRateImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "CurrencyRateImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/DeliveryLineImportBatches": {
            "post": {
                "tags": [
                    "Transactional data - import"
                ],
                "summary": "",
                "operationId": "DeliveryLinesImportBatch_Post",
                "description": "The POST method allows the client to send a set of delivery lines that will be imported by the Medius master data import queue.\nThe purchase order line header must exist in Medius before a delivery line can be imported. Use of key PurchaseOrderLineExternalSystemId is mandatory to be able to find corresponding purchase order line.",
                "parameters": [
                    {
                        "name": "deliveryLines",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationDeliveryLineDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfDeliveryLine"
                            }
                        },
                        "x-nullable": true,
                        "description": "The delivery line to import."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/DeliveryLineImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Transactional data - import"
                ],
                "summary": "",
                "operationId": "DeliveryLinesImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/masterdata/v1/DeliveryTermImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "DeliveryTermImportBatch_Post",
                "description": "The POST method allows the client to send delivery terms that will be imported by the Medius master data import queue.\nThe delivery terms have company prerequisite.",
                "parameters": [
                    {
                        "name": "deliveryterms",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationDeliveryTermDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfDeliveryTerm"
                            }
                        },
                        "x-nullable": true,
                        "description": "The delivery terms to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/DeliveryTermImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "DeliveryTermImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "DeliveryTermImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/DimensionValueConfigurationImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "DimensionValueConfigurationImportBatch_Post",
                "description": "The POST method allows the client to send configurations related to dimensions value that will be imported by the Medius master data import queue.\nThe dimension value configuration have the corresponding dimension as a prerequisites.\nRemember that by sending in dimension configuration the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius. ",
                "parameters": [
                    {
                        "name": "integrationDimensionValueConfigurations",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationDimensionValueConfigurationDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfDimensionValueConfiguration"
                            }
                        },
                        "x-nullable": true,
                        "description": "The dimension value configuration to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/DimensionValueConfigurationImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "DimensionValueConfigurationImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "DimensionValueConfigurationImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/DimensionValueImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "DimensionValueImportBatch_Post",
                "description": "The POST method allows the client to send dimension values that will be imported by the Medius master data import queue.\nThe dimension values have company as mandatory prerequisite.",
                "parameters": [
                    {
                        "name": "dimensionvalues",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationDimensionValueDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfDimensionValue"
                            }
                        },
                        "x-nullable": true,
                        "description": "The payment terms to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/DimensionValueImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "DimensionValueImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "DimensionValueImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/media/v1/document/{documentId}/images": {
            "get": {
                "tags": [
                    "File/media"
                ],
                "summary": "",
                "operationId": "DocumentMediaExport_GetDocumentImagesLinks",
                "description": "This method returns a list of file links for a document identified by parameter 'documentId'.\nEach file link consists of the original file name and a link for downloading this file.\nDraft, migrated and long-term archived documents are not supported by this API.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "documentId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Document ID",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileLink"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfFileLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/media/v1/document/{documentId}/images/{imageHash}": {
            "get": {
                "tags": [
                    "File/media"
                ],
                "summary": "",
                "operationId": "DocumentMediaExport_GetImage",
                "description": "This method returns a file with the given hash for a document identified by parameter 'documentId'.\nYou can get a link for this file, containing hash, by calling 'integration/media/v1/document/{documentId}/images'.\nDraft, migrated and long-term archived documents are not supported by this API.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "documentId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Document ID",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "imageHash",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Hash of image"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "file"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/media/v1/document/{documentId}/attachments": {
            "get": {
                "tags": [
                    "File/media"
                ],
                "summary": "",
                "operationId": "DocumentMediaExport_GetDocumentAttachmentsLinks",
                "description": "This method returns the list of attachment links for a document identified by parameter 'documentId'.\nEach attachment link consists of the original attachment name, and a link for downloading this attachment.\nDraft, migrated and long-term archived documents are not supported by this API.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "documentId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Document ID",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileLink"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfFileLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/media/v1/document/{documentId}/attachments/{attachmentHash}": {
            "get": {
                "tags": [
                    "File/media"
                ],
                "summary": "",
                "operationId": "DocumentMediaExport_GetAttachment",
                "description": "This method returns the attachment with a given hash for the document identified by parameter 'documentId'.\nYou can get the link for this attachment, containing hash, by calling 'integration/media/v1/document/{documentId}/attachments'.\nDraft, migrated and long-term archived documents are not supported by this API.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "documentId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Document ID",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "attachmentHash",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Hash of attachment"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "file"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/errors/{messageStatus}/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "ErrorMessage_Get",
                "description": "This method returns the error messages content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The id of the message",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDto"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/errors/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "ErrorMessage_GetStatus",
                "description": "This method will return a status and an effective link to the real error messages content.\nThe main idea with this method is to be able to check status for a give message and to be able to find where a message is in terms of statuses.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message id of the message to find/check status",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StatusLink"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/errors": {
            "post": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "ErrorMessage_Post",
                "description": "This method accepts a error message object including a list of error messages.\nThe error message object requires a CorrelationKey that needs to match the corresponding supplier invoice message.",
                "parameters": [
                    {
                        "name": "errorMessage",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDto"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/ItemImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "ItemImportBatch_Post",
                "description": "The POST method allows the client to send items that will be imported by the Medius master data import queue.\nThe items have supplier and company as mandatory prerequisite.",
                "parameters": [
                    {
                        "name": "items",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationItemDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfItem"
                            }
                        },
                        "x-nullable": true,
                        "description": "The items to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/ItemImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "ItemImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "ItemImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/paymentinformations/{messageStatus}/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "PaymentInformationMessage_Get",
                "description": "This method returns the payment information content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The id of the message",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IntegrationPaymentInformationDto"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/paymentinformations/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "PaymentInformationMessage_GetStatus",
                "description": "This method will return a status and an effective link to the real payment information content.\nThe main idea with this method is to be able to check status for a given message and to be able to find where a message is in terms of statuses.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message id of the message to find/check status",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StatusLink"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/paymentinformations": {
            "post": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "PaymentInformationMessage_Post",
                "description": "This method accepts a payment information as a response to the supplier invoice message that was retrieved in earlier step.\nThe payment information object requires a CorrelationKey that needs to match the corresponding supplier invoice message.",
                "parameters": [
                    {
                        "name": "paymentInformationDto",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/IntegrationPaymentInformationDto"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/PaymentTermImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "PaymentTermImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "PaymentTermImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/PaymentTermImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "PaymentTermImportBatch_Post",
                "description": "The POST method allows the client to send payment terms that will be imported by the Medius master data import queue.\nThe payment terms have company prerequisite.",
                "parameters": [
                    {
                        "name": "paymentTerms",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationPaymentTermDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfPaymentTerm"
                            }
                        },
                        "x-nullable": true,
                        "description": "The payment terms to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/PeriodImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "PeriodImportBatch_Post",
                "description": "The POST method allows the client to send periods that will be imported by the Medius master data import queue.\nThe periods have Company as prerequisites.\nRemember that by sending in periods the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius. For periods it might be better to keep them in Medius to be able to control the\nposting dates separated from the ERP system, for flexibility reasons.",
                "parameters": [
                    {
                        "name": "periods",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationPeriodDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfPeriod"
                            }
                        },
                        "x-nullable": true,
                        "description": "The periods to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/PeriodImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "PeriodImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "PeriodImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/purchaseorders": {
            "get": {
                "tags": [
                    "Transactional data - export"
                ],
                "summary": "",
                "operationId": "PurchaseOrderExport_Get",
                "description": "When calling this endpoint a list of purchase orders will be returned.\nThere exists one filter parameter to this request, that is updatedSince, it filters out purchase orders that have been changed since\nthe updatedSince time stamp.\nIt's possible adjust page sizes and offsets.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query",
                        "x-nullable": false,
                        "description": "The offset",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query",
                        "x-nullable": false,
                        "description": "The number of records returned(max 1000)",
                        "format": "int32",
                        "default": 1000
                    },
                    {
                        "type": "boolean",
                        "name": "includeLines",
                        "in": "query",
                        "x-nullable": false,
                        "description": "Include purchase order lines with delivery lines and items data in the response or not",
                        "default": false
                    },
                    {
                        "type": "string",
                        "name": "updatedSince",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Tells the service that we only want purchase orders with or without lines that have been changed after this date and time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrderExportPageDto"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/masterdata/v1/PurchaseOrderImportBatches": {
            "post": {
                "tags": [
                    "Transactional data - import"
                ],
                "summary": "",
                "operationId": "PurchaseOrderImportBatch_Post",
                "description": "The POST method allows the client to send a set of purchase orders that will be imported by the Medius master data import queue.\nThe purchase order need to be imported after the mandatory pre requisites are imported, these are Company and Supplier.\nIf specific units and items are used, these needs to be in place also.",
                "parameters": [
                    {
                        "name": "purchaseorders",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationPurchaseOrderDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfPurchaseOrder"
                            }
                        },
                        "x-nullable": true,
                        "description": "The purchase orders to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/PurchaseOrderImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Transactional data - import"
                ],
                "summary": "",
                "operationId": "PurchaseOrderImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Transactional data - import"
                ],
                "summary": "",
                "operationId": "PurchaseOrderImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseorders/{messageStatus}/{messageId}": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Get",
                "description": "The GET method returns the purchase order content from a message that matches the provided status and id.\nIf the message id is in another status, nothing is returned. To find a message, use the other GET method that only requires message id as input.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message status. Can be: Posted, Fetched, Processing, Sent, Closed or Error"
                    },
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message id of the message to find",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrderRequestMessageDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Put",
                "description": "This method updates the status of a purchase order message when processing it.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "The status to set. Possible statuses are: Fetched, Processing or Sent"
                    },
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message id to change the status for",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Status that the message is in before the status change"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseorders/{messageId}": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_GetStatus",
                "description": "The GET method with message id as input returns a status and an effective link to real purchase order content.\nThis method allows you to check the status of a given message.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message id",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StatusLink"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseorders/posted": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Posted_MessagesIds",
                "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Posted_Put",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseorders/fetched": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Fetched_MessagesIds",
                "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Fetched_Put",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseorders/processing": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Processing_MessagesIds",
                "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Processing_Put",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseorders/sent": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Sent_MessagesIds",
                "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Sent_Put",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseorders/closed": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Closed_MessagesIds",
                "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Closed_Put",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseorders/error": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Error_MessagesIds",
                "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Error_Put",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/errors": {
            "post": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Post_Errors",
                "description": "This method accepts an error message object, including a list of error messages.\nThe error message object includes a CorrelationKey that needs to match the corresponding purchase order message.",
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDto"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseorderrequestconfirmation": {
            "post": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Post_Confirmation",
                "description": "This method accepts a purchase order confirmation as a response to the purchase order message that was retrieved in the earlier step.\nThe purchase order confirmation object includes a CorrelationKey that needs to match the corresponding purchase order message.",
                "parameters": [
                    {
                        "name": "confirmationDto",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrderRequestResponseDto"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/purchaseordercancelationconfirmation": {
            "post": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Post_Cancellation",
                "description": "This method accepts a purchase order cancellation as a response to the purchase order message that was retrieved in the earlier step.\nThe purchase order cancellation object includes a CorrelationKey that needs to match the corresponding purchase order message.",
                "parameters": [
                    {
                        "name": "confirmationDto",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrderRequestResponseDto"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/goodsreceiptnotes/{messageStatus}/{messageId}": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_GetGrn",
                "description": "The GET method returns the goods receipt note content from a message that matches the provided status and id.\nIf the message id is in another status, nothing is returned.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message status. Can be: Posted, Fetched, Processing, Sent, Closed or Error"
                    },
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message id",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrnPurchaseOrderDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_PutGrn",
                "description": "This method updates the status of a goods receipt note message when processing it.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status to set. Possible statuses are: Fetched and Processing, Sent"
                    },
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message id to change the status for",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Status that the message is in before the status change"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/purchaseorders/{messageStatus}/{messageId}": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_GetPurchaseOrders",
                "description": "The GET method returns the purchase order content from a message that matches the provided status and id.\nIf the message id is in another status, nothing is returned.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message status. Can be: Posted, Fetched, Processing, Sent, Closed or Error"
                    },
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message id",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProcurementPurchaseOrderDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_PutPo",
                "description": "This method updates the status of a purchase order message when processing it.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status to set. Possible statuses are: Fetched and Processing, Sent"
                    },
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message id to change the status for",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Status that the message is in before the status change"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/purchaseorders/{messageId}": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_GetPoToErpStatus",
                "description": "The GET method with message id as input returns a status and an effective link to purchase order content.\nThis method allows you to check the status of a given message.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message id",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StatusLink"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/goodsreceiptnotes/{messageId}": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_GetGrnStatus",
                "description": "The GET method with message id as input returns a status and an effective link to goods receipt note content.\nThis method allows you to check the status of a given message.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "Message id",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StatusLink"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/goodsreceiptnotes/posted": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Posted_GetGrnMessagesIds",
                "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Posted_PutGrn",
                "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/goodsreceiptnotes/fetched": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Fetched_GetGrnMessagesIds",
                "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Fetched_PutGrn",
                "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/goodsreceiptnotes/processing": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Processing_GetGrnMessagesIds",
                "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Processing_PutGrn",
                "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/goodsreceiptnotes/sent": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Sent_GetGrnMessagesIds",
                "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Sent_PutGrn",
                "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/goodsreceiptnotes/closed": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Closed_GetGrnMessagesIds",
                "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Closed_PutGrn",
                "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/goodsreceiptnotes/error": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Error_GetGrnMessagesIds",
                "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Error_PutGrn",
                "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/purchaseorders/posted": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Posted_GetPoMessagesIds",
                "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Posted_PutPo",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/purchaseorders/fetched": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Fetched_GetPoMessagesIds",
                "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Fetched_PutPo",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/purchaseorders/processing": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Processing_GetPoMessagesIds",
                "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Processing_PutPo",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/purchaseorders/sent": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Sent_GetPoMessagesIds",
                "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Sent_PutPo",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/purchaseorders/closed": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Closed_GetPoMessagesIds",
                "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Closed_PutPo",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/purchaseorders/error": {
            "get": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Error_GetPoMessagesIds",
                "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_Error_PutPo",
                "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "Status that you want to set"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/procurement/externalsystemsync/confirmations": {
            "post": {
                "tags": [
                    "Procurement"
                ],
                "summary": "",
                "operationId": "PurchaseOrderRequestMessage_PostPoToErpOrGrnConfirmation",
                "description": "This method accepts a purchase-order-to-ERP confirmation with or without the goods-receipt-note part\nas a response to either the purchase-order-to-ERP or the goods-receipt-note confirmation or cancellation message, that was retrieved in the earlier step.\nThe confirmation object includes a CorrelationKey that needs to match the corresponding purchase-order-to-ERP or goods-receipt-note message.",
                "parameters": [
                    {
                        "name": "confirmationDto",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrderRequestResponseDto"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/BasicRestrictionImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "RestrictionImportBatch_Post",
                "description": "The POST method allows the client to send basic restrictions for a dimension value that will be imported by the Medius master data import queue.\nThe dimensions involved in the restriction are mandatory.\nControlling dimension key is the dimension that will get the restriction applied on it, the property RestrictedDimension includes a list\nwith dimensions to restrict. For each restriction there is a set of RestrictionTypes, these are: Fixed, Forbidden, Default and Required",
                "parameters": [
                    {
                        "name": "basicRestrictions",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationBasicRestrictionsDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfBasicRestriction"
                            }
                        },
                        "x-nullable": true,
                        "description": "The restrictions to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/BasicRestrictionImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "RestrictionImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "RestrictionImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",                
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/RestrictionRuleImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "RestrictionRuleImportBatch_Post",
                "description": "The POST method allows the client to send restriction rules that will be imported by data import queue.\nThe Restriction rules have company prerequisite.",
                "parameters": [
                    {
                        "name": "restrictionStructuresList",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RestrictionRuleGroupDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfRestrictionRuleGroup"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/RestrictionRuleImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "RestrictionRuleImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/masterdata/v1/SupplierConfigurationImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "SupplierConfigurationBatch_Post",
                "description": "The POST method allows the client to send a set of supplier configurations that will be imported by the Medius master data import queue.\nThe supplier configuration needs to have the corresponding supplier in place before being imported.\nRemember that by sending in supplier configurations the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius.",
                "parameters": [
                    {
                        "name": "supplierConfigrations",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationSupplierConfigurationDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfSupplierConfiguration"
                            }
                        },
                        "x-nullable": true,
                        "description": "The supplier configurations to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/SupplierConfigurationImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "SupplierConfigurationBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "SupplierConfigurationBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/suppliers": {
            "get": {
                "tags": [
                    "Master data - export"
                ],
                "summary": "",
                "operationId": "SupplierExport_Get",
                "description": "When calling this endpoint a list of suppliers will be returned.\nThere exists one filter parameter to this request, that is updatedSince, it filters out suppliers that have been changed since\nthe updatedSince time stamp.\nIt's possible adjust page sizes and offsets.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query",
                        "x-nullable": false,
                        "description": "The offset",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query",
                        "x-nullable": false,
                        "description": "The number of records returned(max 1000).",
                        "format": "int32",
                        "default": 1000
                    },
                    {
                        "type": "string",
                        "name": "updatedSince",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Tells the service that we only want suppliers that have been changed after this date and time."
                    },
                    {
                        "type": "string",
                        "name": "identifierType",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Filter suppliers by identifier type, eg. BANK_ACCOUNT. Requires identifier value."
                    },
                    {
                        "type": "string",
                        "name": "identifierValue",
                        "in": "query",
                        "x-nullable": true,
                        "description": "Filter suppliers by identifier value, e.g. bank account number."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SupplierExportPageDto"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/masterdata/v1/SupplierImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "SupplierImportBatch_Post",
                "description": "The POST method allows the client to send suppliers that will be imported by the Medius master data import queue.\nThe supplier have payment term and company as mandatory prerequisite.\nIf additional dimensions are going to be used or Vat groups they need to be imported in advance.",
                "parameters": [
                    {
                        "name": "suppliers",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationSupplierDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfSupplier"
                            }
                        },
                        "x-nullable": true,
                        "description": "The suppliers to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/SupplierImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "SupplierImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "SupplierImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/invoices/{messageStatus}/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Get",
                "description": "The GET method returns the supplier invoice content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error"
                    },
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The id of the message",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InvoiceRequestDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Put",
                "description": "This method updates the status for a supplier invoice message when processing it.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "The status to set. Possible statuses are: Fetched, Processing or Sent"
                    },
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message id to change status for",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The status that the message is in before the status change"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/invoices/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_GetStatus",
                "description": "The GET method with message id as input will return a status and an effective link to the real supplier invoice content.\nThe main idea with this method is to be able to check status for a give message and to be able to find where a message is in terms of statuses.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message id of the message to find/check status",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StatusLink"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/invoices/posted": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Get_Posted_MessagesIds",
                "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Posted_Put",
                "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "The status that you want to change"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/invoices/fetched": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Get_Fetched_MessagesIds",
                "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Fetched_Put",
                "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "The status that you want to change"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/invoices/processing": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Get_Processing_MessagesIds",
                "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Processing_Put",
                "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "The status that you want to change"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/invoices/sent": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Get_Sent_MessagesIds",
                "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Sent_Put",
                "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "The status that you want to change"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/invoices/closed": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Get_Closed_MessagesIds",
                "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Closed_Put",
                "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "The status that you want to change"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/invoices/error": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Get_Error_MessagesIds",
                "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
                "parameters": [
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfLink"
                            }
                        },
                        "x-nullable": true
                    }
                }
            },
            "put": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "SupplierInvoiceMessage_Error_Put",
                "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
                "parameters": [
                    {
                        "name": "statusRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StatusRequest"
                        },
                        "x-nullable": true,
                        "description": "The status that you want to change"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL or CANCEL"
                    },
                    {
                        "type": "string",
                        "name": "correlationKeyFilter",
                        "in": "query",
                        "x-nullable": true,
                        "description": "The Correlation key filter as explained in the summary "
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/TaxGroupImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "TaxGroupImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "TaxGroupImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/TaxGroupImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "TaxGroupImportBatch_Post",
                "description": "The POST method allows the client to send tax groups that will be imported by the Medius master data import queue.\nThe tax group have company as mandatory prerequisite.\nThe tax group consists of a set of tax codes, in many \"less advance\" systems the translation is that tax code is the same as the tax group entity in Medius.\nThis means that if a tax code from the ERP i X, then tax group will be X and there will be one tax code line with X within the tax group.\nWhen performing accounting on an invoice, the tax group is the one used. When providing a TaxIndicator on Supplier or dimensions, the Tax Group is the one to reference.\nThere is a property IndicatorNumber, this one decides if the TaxGroup is going to work with TaxIndicator 1 or 2. ",
                "parameters": [
                    {
                        "name": "taxGroups",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationTaxGroupDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfTaxGroup"
                            }
                        },
                        "x-nullable": true,
                        "description": "The tax groups to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/UnitImportBatches": {
            "post": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "UnitImportBatch_Post",
                "description": "The POST method allows the client to send units that will be imported by the Medius master data import queue.\nThe units have no prerequisite.\nRemember that the functionality around units is limited in Medius and the reason for importing them should probably be considered\nbefore doing it. The usual case is to set the Unit on purchase order line to the default unit in Medius =&gt; '-'",
                "parameters": [
                    {
                        "name": "unit",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationUnitDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfUnit"
                            }
                        },
                        "x-nullable": true,
                        "description": "The units to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/UnitImportBatches/{importId}": {
            "get": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "UnitImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "Master data - import"
                ],
                "summary": "",
                "operationId": "UnitImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/UserImportBatches": {
            "post": {
                "tags": [
                    "User import"
                ],
                "summary": "",
                "operationId": "UserImportBatch_Post",
                "description": "The POST method allows the client to send users that will be imported by the Medius master data import queue.\nThe users have the company and the corresponding role to set for the user as prerequisites.",
                "parameters": [
                    {
                        "name": "users",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationUserDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfUser"
                            }
                        },
                        "x-nullable": true,
                        "description": "The users to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/UserImportBatches/{importId}": {
            "get": {
                "tags": [
                    "User import"
                ],
                "summary": "",
                "operationId": "UserImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "User import"
                ],
                "summary": "",
                "operationId": "UserImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/masterdata/v1/UserConfigurationImportBatches": {
            "post": {
                "tags": [
                    "User import"
                ],
                "summary": "",
                "operationId": "UserConfigurationImportBatch_Post",
                "description": "The POST method allows the client to send user configurations that will be imported by the Medius master data import queue.\nThe user configurations have the company and the corresponding user as prerequisites.\nRemember that by sending configurations for users the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius. ",
                "parameters": [
                    {
                        "name": "userConfigurations",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IntegrationUserConfigurationDto"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "ArrayOfUserConfiguration"
                            }
                        },
                        "x-nullable": true,
                        "description": "The user configurations to import"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius"
                    }
                }
            }
        },
        "/integration/masterdata/v1/UserConfigurationImportBatches/{importId}": {
            "get": {
                "tags": [
                    "User import"
                ],
                "summary": "",
                "operationId": "UserConfigurationImportBatch_Get",
                "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BatchDto"
                        },
                        "x-nullable": true
                    }
                }
            },
            "delete": {
                "tags": [
                    "User import"
                ],
                "summary": "",
                "operationId": "UserConfigurationImportBatch_Delete",
                "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/vouchers/{messageStatus}/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "VoucherMessage_Get",
                "description": "This method returns the voucher content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The id of the message",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VoucherResponseDto"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/vouchers/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "VoucherMessage_GetStatus",
                "description": "This method will return a status and an effective link to the real voucher content.\nThe main idea with this method is to be able to check status for a give message and to be able to find where a message is in terms of statuses.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message id of the message to find/check status",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StatusLink"
                        },
                        "x-nullable": true
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/vouchers": {
            "post": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "",
                "operationId": "VoucherMessage_Post",
                "description": "This method accepts a voucher as a response to the supplier invoice message that was retrieved in earlier step.\nThe voucher requires a CorrelationKey that needs to match the corresponding supplier invoice message.",
                "parameters": [
                    {
                        "name": "voucher",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/VoucherResponseDto"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/integration/documentImport/v1/supplierinvoices/{id}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "Document import status",
                "operationId": "SupplierInvoice_Get",
                "description": "The GET Method returns the status for a given DocumentImport document in Medius.\nIt also returns the \"real\" invoice that was created by the imported document.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The id of the supplier invoice sent in. A full link to this method is returned by the POST method",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ImportDocumentStatusDto"
                        },
                        "x-nullable": true
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/NotFound"
                        },
                        "description": "Not Found"
                    }
                }
            }
        },
        "/integration/documentImport/v1/supplierinvoices": {
            "post": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "Document import",
                "operationId": "SupplierInvoice_Post",
                "description": "The POST method imports a supplier invoice, this is done with multipart/form content.\nThe location header in the response includes a full link to the GET method, this link can be stored as a ticket/receipt that Medius received the imported document.\nNOTE: Due to that it needs to be sent in as multipart/form, the self testing experience in Swagger UI is limited.\nTo get the full test experience, please test this method in the Postman tool, all examples can be found here: https://www.getpostman.com/collections/36b522ecbddf6a8934d4",
                "parameters": [
                    {
                        "name": "supplierinvoices",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EdiSupplierInvoiceImportEnvelope"
                        },
                        "x-nullable": true,
                        "description": "DISCLAIMER: This is a multipart/form data type. Due to Swagger 2.0 it is impossible to visualize. Here you can see the definitions for the form data, and you can try it out. Image and attachments can not be included. For a complete specification see Postman or https://success.mediusflow.com/documentation/integration-documentation/technical/rest/scenarios/#running-the-supplier-invoice-import."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes Location header with a link to the import batch, this link will give the status of how the document is processing within Medius."
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/BadRequest"
                        },
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/integration/documentImport/v1/file/supplierinvoices/": {
            "post": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "Document file import",
                "operationId": "File_SupplierInvoice_Post",
                "description": "The POST method uploads a PDF or XML invoice file from body to Capture.\nIt returns id of uploaded file. Note: the self testing experience in Swagger UI is limited. It is only possible to paste the XML body. Please use Postman or other test tools to send in PDF and XML files as binary.",
                "consumes":[
                  "application/xml"
                ],
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "x-nullable": false,
                        "schema":{
                          "$ref": "#/definitions/ImportDocumentSupplierInvoiceFile"
                        },
                        "description": "A PEPPOL BIS Billing 3.0 XML or PDF file containing invoice for Capture. Maximum file size is 50 MB."
                    },
                    {
                      "name": "companyGlobalId",
                      "in": "query",
                      "type":"string",
                      "required": true,
                      "x-nullable": false,
                      "description": "Unique company identifier"
                    },
                    {
                      "name": "supplierGlobalId",
                      "in": "query",
                      "type":"string",
                      "required": false,
                      "x-nullable": true,
                      "description": "Unique supplier identifier"
                    },
                    {
                      "name": "externalId",
                      "in": "query",
                      "type":"string",
                      "required": false,
                      "x-nullable": true,
                      "description": "Unique external identifier to corresponding entity"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response includes the id of uploaded file"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/BadRequest"
                        },
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/integration/payment/v1/paymentBatches": {
            "post": {
                "tags": [
                    "Pay"
                ],
                "summary": "",
                "operationId": "paymentBatches_Post",
                "description": "The POST method allows the client to send payment batches that will be imported into Medius Pay to be approved and paid. When import fails, incorrect payment batch is saved in Import error inbox within Medius Pay.\n This API has region settings. Here we list all possible parameters without consideration of the region. To see and test region specific API, please see the [Success portal](https://success.medius.com/documentation/integration-documentation/technical/rest/scenarios/#region) or use the direct links below to specific API:  \n [Direct link to EU region](https://cloud.mediusflow.com/dummytenant/api/documentation/index.html?url=https://cloud.mediusflow.com/dummytenant/api/swagger/payEU/) \n [Direct link to US region](https://cloud.mediusflow.com/dummytenant/api/documentation/index.html?url=https://cloud.mediusflow.com/dummytenant/api/swagger/payUS/) \n Note: Please change tenant name in the URL for a complete testing experience.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Payment batch with list of payment items.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentBatch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Payment batch saved in Medius Pay. IsSuccessful flag indicates the status of import.",
                        "schema": {
                            "$ref": "#/definitions/ImportResult"
                        }
                    },
                    "400": {
                        "description": "When server was unable to parse the request, 400 status code with generic parsing error is returned."
                    }
                }
            },
            "get": {
                "tags": [
                    "Pay"
                ],
                "summary": "",
                "operationId": "paymentBatches_Get_externalBatchId",
                "description": "Get payment batch reconciliation status. Basic information about payment batches",
                "parameters": [
                    {
                        "name": "externalBatchId",
                        "in": "query",
                        "description": "External payment batch ID",
                        "required": true,
                        "type": "string",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection of matching payment batches",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentBatchReconciliationStatusResponse"
                            },
                            "xml": {
                              "wrapped": true,
                              "name": "PaymentBatches"
                            }
                        }
                    }
                }
            }
        },
        "/integration/payment/v1/paymentBatches/{paymentBatchId}": {
            "get": {
                "tags": [
                    "Pay"
                ],
                "summary": "",
                "operationId": "paymentBatches_Get_paymentBatchId",
                "description": "Get payment batch reconciliation status. Basic information about payment batch",
                "parameters": [
                    {
                        "name": "paymentBatchId",
                        "in": "path",
                        "description": "Payment batch ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment batch",
                        "schema": {
                            "$ref": "#/definitions/PaymentBatchReconciliationStatusResponse"
                        }
                    },
                    "404": {
                        "description": "Payment batch with given paymentBatchId not found"
                    }
                }
            }
        },
        "/integration/payment/v1/paymentBatches/{paymentBatchId}/items": {
            "get": {
                "tags": [
                    "Pay"
                ],
                "summary": "",
                "operationId": "paymentBatches_Get_paymentBatchId_Items",
                "description": "Get payment items reconciliation status. Detailed information about the items of payment batch",
                "parameters": [
                    {
                        "name": "paymentBatchId",
                        "in": "path",
                        "description": "Payment batch ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch headers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentItemReconciliationStatusResponse"
                            },
                            "xml": {
                                "wrapped": true,
                                "name": "Items"
                            }
                            
                        }
                    },
                    "404": {
                        "description": "Payment batch with given paymentBatchId not found"
                    }
                }
            }
        },
        "/integration/message/v1/supplierinvoice/actualpaymentdates/{messageStatus}/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "Deprecated API, please use paymentInformations instead.",
                "operationId": "ActualPaymentDate_Get",
                "description": "Deprecated API, please use paymentInformations instead. This method returns the payment date content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The id of the message",
                        "format": "int32"
                    },
                    {
                        "type": "string",
                        "name": "messageStatus",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ActualPaymentDateResponseDto"
                        },
                        "x-nullable": true
                    }
                },
                "deprecated": true
            }
        },
        "/integration/message/v1/supplierinvoice/actualpaymentdates/{messageId}": {
            "get": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "Deprecated API, please use paymentInformations instead.",
                "operationId": "ActualPaymentDate_GetStatus",
                "description": "Deprecated API, please use paymentInformations instead. This method will return a status and an effective link to the real actual payment date content.\nThe main idea with this method is to be able to check status for a give message and to be able to find where a message is in terms of statuses.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "description": "The message id of the message to find/check status",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StatusLink"
                        },
                        "x-nullable": true
                    }
                },
                "deprecated": true
            }
        },
        "/integration/message/v1/supplierinvoice/actualpaymentdates": {
            "post": {
                "tags": [
                    "AP Automation"
                ],
                "summary": "Deprecated API, please use paymentInformations instead.",
                "operationId": "ActualPaymentDate_Post",
                "description": "Deprecated API, please use paymentInformations instead. This method accepts a actual payment date as a response to the supplier invoice message that was retrieved in earlier step.\nThe actual payment date object requires a CorrelationKey that needs to match the corresponding supplier invoice message.",
                "parameters": [
                    {
                        "name": "actualPaymentDate",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ActualPaymentDateResponseDto"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "deprecated": true
            }
        },
        "/connect/userinfo": {
            "get": {
                "tags": [
                    "OpenIdConnect"
                ],
                "summary": "Returns user claims as JSON object (XML is not allowed by OpenId Connect specification). Claims includes: user's external system id, e-mail, first name, last name, locale, personal role id, preffered format, username and default company id.",
                "operationId": "UserInfo_Get",
                "responses": {
                    "200": {
                        "description": "JSON object with claims"
                    }
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more information in the success portal",
        "url": "https://success.mediusflow.com/documentation/integration-documentation/technical/rest/general/"
    }
}